[
  structure_item (src/rewriter.ml[5,205+0]..[5,205+82])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[5,205+4]..[5,205+73]) ghost
          Ppat_constraint
          pattern (src/rewriter.ml[5,205+4]..[5,205+10])
            Ppat_var "inputs" (src/rewriter.ml[5,205+4]..[5,205+10])
          core_type (src/rewriter.ml[5,205+13]..[5,205+73]) ghost
            Ptyp_poly
            core_type (src/rewriter.ml[5,205+13]..[5,205+73])
              Ptyp_constr "ref" (src/rewriter.ml[5,205+70]..[5,205+73])
              [
                core_type (src/rewriter.ml[5,205+13]..[5,205+69])
                  Ptyp_constr "list" (src/rewriter.ml[5,205+65]..[5,205+69])
                  [
                    core_type (src/rewriter.ml[5,205+14]..[5,205+63])
                      Ptyp_tuple
                      [
                        core_type (src/rewriter.ml[5,205+14]..[5,205+32])
                          Ptyp_variant closed=Closed
                          [
                            Rtag "Struct" true
                              []
                            Rtag "Sig" true
                              []
                          ]
                          None
                        core_type (src/rewriter.ml[5,205+35]..[5,205+54])
                          Ptyp_variant closed=Closed
                          [
                            Rtag "String" true
                              []
                            Rtag "Path" true
                              []
                          ]
                          None
                        core_type (src/rewriter.ml[5,205+57]..[5,205+63])
                          Ptyp_constr "string" (src/rewriter.ml[5,205+57]..[5,205+63])
                          []
                      ]
                  ]
              ]
        expression (src/rewriter.ml[5,205+4]..[5,205+82]) ghost
          Pexp_constraint
          expression (src/rewriter.ml[5,205+76]..[5,205+82])
            Pexp_apply
            expression (src/rewriter.ml[5,205+76]..[5,205+79])
              Pexp_ident "ref" (src/rewriter.ml[5,205+76]..[5,205+79])
            [
              <arg>
              Nolabel
                expression (src/rewriter.ml[5,205+80]..[5,205+82])
                  Pexp_construct "[]" (src/rewriter.ml[5,205+80]..[5,205+82])
                  None
            ]
          core_type (src/rewriter.ml[5,205+13]..[5,205+73])
            Ptyp_constr "ref" (src/rewriter.ml[5,205+70]..[5,205+73])
            [
              core_type (src/rewriter.ml[5,205+13]..[5,205+69])
                Ptyp_constr "list" (src/rewriter.ml[5,205+65]..[5,205+69])
                [
                  core_type (src/rewriter.ml[5,205+14]..[5,205+63])
                    Ptyp_tuple
                    [
                      core_type (src/rewriter.ml[5,205+14]..[5,205+32])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "Struct" true
                            []
                          Rtag "Sig" true
                            []
                        ]
                        None
                      core_type (src/rewriter.ml[5,205+35]..[5,205+54])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "String" true
                            []
                          Rtag "Path" true
                            []
                        ]
                        None
                      core_type (src/rewriter.ml[5,205+57]..[5,205+63])
                        Ptyp_constr "string" (src/rewriter.ml[5,205+57]..[5,205+63])
                        []
                    ]
                ]
            ]
    ]
  structure_item (src/rewriter.ml[6,288+0]..[6,288+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[6,288+4]..[6,288+28]) ghost
          Ppat_constraint
          pattern (src/rewriter.ml[6,288+4]..[6,288+15])
            Ppat_var "output_file" (src/rewriter.ml[6,288+4]..[6,288+15])
          core_type (src/rewriter.ml[6,288+18]..[6,288+28]) ghost
            Ptyp_poly
            core_type (src/rewriter.ml[6,288+18]..[6,288+28])
              Ptyp_constr "ref" (src/rewriter.ml[6,288+25]..[6,288+28])
              [
                core_type (src/rewriter.ml[6,288+18]..[6,288+24])
                  Ptyp_constr "string" (src/rewriter.ml[6,288+18]..[6,288+24])
                  []
              ]
        expression (src/rewriter.ml[6,288+4]..[6,288+38]) ghost
          Pexp_constraint
          expression (src/rewriter.ml[6,288+31]..[6,288+38])
            Pexp_apply
            expression (src/rewriter.ml[6,288+31]..[6,288+34])
              Pexp_ident "ref" (src/rewriter.ml[6,288+31]..[6,288+34])
            [
              <arg>
              Nolabel
                expression (src/rewriter.ml[6,288+35]..[6,288+38])
                  Pexp_constant PConst_string("-",None)
            ]
          core_type (src/rewriter.ml[6,288+18]..[6,288+28])
            Ptyp_constr "ref" (src/rewriter.ml[6,288+25]..[6,288+28])
            [
              core_type (src/rewriter.ml[6,288+18]..[6,288+24])
                Ptyp_constr "string" (src/rewriter.ml[6,288+18]..[6,288+24])
                []
            ]
    ]
  structure_item (src/rewriter.ml[7,327+0]..[7,327+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[7,327+4]..[7,327+13])
          Ppat_var "tool_name" (src/rewriter.ml[7,327+4]..[7,327+13])
        expression (src/rewriter.ml[7,327+16]..[7,327+28])
          Pexp_apply
          expression (src/rewriter.ml[7,327+16]..[7,327+19])
            Pexp_ident "ref" (src/rewriter.ml[7,327+16]..[7,327+19])
          [
            <arg>
            Nolabel
              expression (src/rewriter.ml[7,327+20]..[7,327+28])
                Pexp_constant PConst_string("ocamlc",None)
          ]
    ]
  structure_item (src/rewriter.ml[9,357+0]..[44,1715+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[9,357+4]..[9,357+8])
          Ppat_var "args" (src/rewriter.ml[9,357+4]..[9,357+8])
        expression (src/rewriter.ml[10,368+2]..[44,1715+3])
          Pexp_open Fresh
          module_expr (src/rewriter.ml[10,368+11]..[10,368+14])
            Pmod_ident "Arg" (src/rewriter.ml[10,368+11]..[10,368+14])
          expression (src/rewriter.ml[11,386+2]..[44,1715+3])
            Pexp_apply
            expression (src/rewriter.ml[11,386+2]..[11,386+7])
              Pexp_ident "align" (src/rewriter.ml[11,386+2]..[11,386+7])
            [
              <arg>
              Nolabel
                expression (src/rewriter.ml[11,386+8]..[44,1715+3])
                  Pexp_construct "::" (src/rewriter.ml[12,396+4]..[44,1715+3]) ghost
                  Some
                    expression (src/rewriter.ml[12,396+4]..[44,1715+3]) ghost
                      Pexp_tuple
                      [
                        expression (src/rewriter.ml[12,396+4]..[13,468+46])
                          Pexp_tuple
                          [
                            expression (src/rewriter.ml[12,396+4]..[12,396+10])
                              Pexp_constant PConst_string("-ppx",None)
                            expression (src/rewriter.ml[12,396+12]..[12,396+70])
                              Pexp_construct "String" (src/rewriter.ml[12,396+12]..[12,396+18])
                              Some
                                expression (src/rewriter.ml[12,396+19]..[12,396+70])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/rewriter.ml[12,396+24]..[12,396+25])
                                    Ppat_var "s" (src/rewriter.ml[12,396+24]..[12,396+25])
                                  expression (src/rewriter.ml[12,396+29]..[12,396+69])
                                    Pexp_apply
                                    expression (src/rewriter.ml[12,396+45]..[12,396+47])
                                      Pexp_ident ":=" (src/rewriter.ml[12,396+45]..[12,396+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/rewriter.ml[12,396+29]..[12,396+44])
                                          Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[12,396+29]..[12,396+44])
                                      <arg>
                                      Nolabel
                                        expression (src/rewriter.ml[12,396+48]..[12,396+69])
                                          Pexp_construct "::" (src/rewriter.ml[12,396+50]..[12,396+52])
                                          Some
                                            expression (src/rewriter.ml[12,396+48]..[12,396+69]) ghost
                                              Pexp_tuple
                                              [
                                                expression (src/rewriter.ml[12,396+48]..[12,396+49])
                                                  Pexp_ident "s" (src/rewriter.ml[12,396+48]..[12,396+49])
                                                expression (src/rewriter.ml[12,396+53]..[12,396+69])
                                                  Pexp_apply
                                                  expression (src/rewriter.ml[12,396+53]..[12,396+54])
                                                    Pexp_ident "!" (src/rewriter.ml[12,396+53]..[12,396+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (src/rewriter.ml[12,396+54]..[12,396+69])
                                                        Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[12,396+54]..[12,396+69])
                                                  ]
                                              ]
                                    ]
                            expression (src/rewriter.ml[13,468+4]..[13,468+46])
                              Pexp_constant PConst_string("<cmd> Invoke <cmd> as a ppx preprocessor",None)
                          ]
                        expression (src/rewriter.ml[15,517+4]..[44,1715+3]) ghost
                          Pexp_construct "::" (src/rewriter.ml[15,517+4]..[44,1715+3]) ghost
                          Some
                            expression (src/rewriter.ml[15,517+4]..[44,1715+3]) ghost
                              Pexp_tuple
                              [
                                expression (src/rewriter.ml[15,517+4]..[16,591+38])
                                  Pexp_tuple
                                  [
                                    expression (src/rewriter.ml[15,517+4]..[15,517+10])
                                      Pexp_constant PConst_string("-str",None)
                                    expression (src/rewriter.ml[15,517+12]..[15,517+72])
                                      Pexp_construct "String" (src/rewriter.ml[15,517+12]..[15,517+18])
                                      Some
                                        expression (src/rewriter.ml[15,517+19]..[15,517+72])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (src/rewriter.ml[15,517+24]..[15,517+25])
                                            Ppat_var "s" (src/rewriter.ml[15,517+24]..[15,517+25])
                                          expression (src/rewriter.ml[15,517+29]..[15,517+71])
                                            Pexp_apply
                                            expression (src/rewriter.ml[15,517+36]..[15,517+38])
                                              Pexp_ident ":=" (src/rewriter.ml[15,517+36]..[15,517+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (src/rewriter.ml[15,517+29]..[15,517+35])
                                                  Pexp_ident "inputs" (src/rewriter.ml[15,517+29]..[15,517+35])
                                              <arg>
                                              Nolabel
                                                expression (src/rewriter.ml[15,517+39]..[15,517+71])
                                                  Pexp_construct "::" (src/rewriter.ml[15,517+61]..[15,517+63])
                                                  Some
                                                    expression (src/rewriter.ml[15,517+39]..[15,517+71]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/rewriter.ml[15,517+39]..[15,517+60])
                                                          Pexp_tuple
                                                          [
                                                            expression (src/rewriter.ml[15,517+40]..[15,517+47])
                                                              Pexp_variant "Struct"
                                                              None
                                                            expression (src/rewriter.ml[15,517+49]..[15,517+56])
                                                              Pexp_variant "String"
                                                              None
                                                            expression (src/rewriter.ml[15,517+58]..[15,517+59])
                                                              Pexp_ident "s" (src/rewriter.ml[15,517+58]..[15,517+59])
                                                          ]
                                                        expression (src/rewriter.ml[15,517+64]..[15,517+71])
                                                          Pexp_apply
                                                          expression (src/rewriter.ml[15,517+64]..[15,517+65])
                                                            Pexp_ident "!" (src/rewriter.ml[15,517+64]..[15,517+65])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (src/rewriter.ml[15,517+65]..[15,517+71])
                                                                Pexp_ident "inputs" (src/rewriter.ml[15,517+65]..[15,517+71])
                                                          ]
                                                      ]
                                            ]
                                    expression (src/rewriter.ml[16,591+4]..[16,591+38])
                                      Pexp_constant PConst_string("<str> Parse <str> as a structure",None)
                                  ]
                                expression (src/rewriter.ml[18,632+4]..[44,1715+3]) ghost
                                  Pexp_construct "::" (src/rewriter.ml[18,632+4]..[44,1715+3]) ghost
                                  Some
                                    expression (src/rewriter.ml[18,632+4]..[44,1715+3]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/rewriter.ml[18,632+4]..[19,703+38])
                                          Pexp_tuple
                                          [
                                            expression (src/rewriter.ml[18,632+4]..[18,632+10])
                                              Pexp_constant PConst_string("-sig",None)
                                            expression (src/rewriter.ml[18,632+12]..[18,632+69])
                                              Pexp_construct "String" (src/rewriter.ml[18,632+12]..[18,632+18])
                                              Some
                                                expression (src/rewriter.ml[18,632+19]..[18,632+69])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (src/rewriter.ml[18,632+24]..[18,632+25])
                                                    Ppat_var "s" (src/rewriter.ml[18,632+24]..[18,632+25])
                                                  expression (src/rewriter.ml[18,632+29]..[18,632+68])
                                                    Pexp_apply
                                                    expression (src/rewriter.ml[18,632+36]..[18,632+38])
                                                      Pexp_ident ":=" (src/rewriter.ml[18,632+36]..[18,632+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (src/rewriter.ml[18,632+29]..[18,632+35])
                                                          Pexp_ident "inputs" (src/rewriter.ml[18,632+29]..[18,632+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (src/rewriter.ml[18,632+39]..[18,632+68])
                                                          Pexp_construct "::" (src/rewriter.ml[18,632+58]..[18,632+60])
                                                          Some
                                                            expression (src/rewriter.ml[18,632+39]..[18,632+68]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (src/rewriter.ml[18,632+39]..[18,632+57])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/rewriter.ml[18,632+40]..[18,632+44])
                                                                      Pexp_variant "Sig"
                                                                      None
                                                                    expression (src/rewriter.ml[18,632+46]..[18,632+53])
                                                                      Pexp_variant "String"
                                                                      None
                                                                    expression (src/rewriter.ml[18,632+55]..[18,632+56])
                                                                      Pexp_ident "s" (src/rewriter.ml[18,632+55]..[18,632+56])
                                                                  ]
                                                                expression (src/rewriter.ml[18,632+61]..[18,632+68])
                                                                  Pexp_apply
                                                                  expression (src/rewriter.ml[18,632+61]..[18,632+62])
                                                                    Pexp_ident "!" (src/rewriter.ml[18,632+61]..[18,632+62])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (src/rewriter.ml[18,632+62]..[18,632+68])
Pexp_ident "inputs" (src/rewriter.ml[18,632+62]..[18,632+68])
                                                                  ]
                                                              ]
                                                    ]
                                            expression (src/rewriter.ml[19,703+4]..[19,703+38])
                                              Pexp_constant PConst_string("<str> Parse <str> as a signature",None)
                                          ]
                                        expression (src/rewriter.ml[21,744+4]..[44,1715+3]) ghost
                                          Pexp_construct "::" (src/rewriter.ml[21,744+4]..[44,1715+3]) ghost
                                          Some
                                            expression (src/rewriter.ml[21,744+4]..[44,1715+3]) ghost
                                              Pexp_tuple
                                              [
                                                expression (src/rewriter.ml[21,744+4]..[22,817+68])
                                                  Pexp_tuple
                                                  [
                                                    expression (src/rewriter.ml[21,744+4]..[21,744+11])
                                                      Pexp_constant PConst_string("-impl",None)
                                                    expression (src/rewriter.ml[21,744+13]..[21,744+71])
                                                      Pexp_construct "String" (src/rewriter.ml[21,744+13]..[21,744+19])
                                                      Some
                                                        expression (src/rewriter.ml[21,744+20]..[21,744+71])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (src/rewriter.ml[21,744+25]..[21,744+26])
                                                            Ppat_var "s" (src/rewriter.ml[21,744+25]..[21,744+26])
                                                          expression (src/rewriter.ml[21,744+30]..[21,744+70])
                                                            Pexp_apply
                                                            expression (src/rewriter.ml[21,744+37]..[21,744+39])
                                                              Pexp_ident ":=" (src/rewriter.ml[21,744+37]..[21,744+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/rewriter.ml[21,744+30]..[21,744+36])
                                                                  Pexp_ident "inputs" (src/rewriter.ml[21,744+30]..[21,744+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (src/rewriter.ml[21,744+40]..[21,744+70])
                                                                  Pexp_construct "::" (src/rewriter.ml[21,744+60]..[21,744+62])
                                                                  Some
                                                                    expression (src/rewriter.ml[21,744+40]..[21,744+70]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (src/rewriter.ml[21,744+40]..[21,744+59])
  Pexp_tuple
  [
    expression (src/rewriter.ml[21,744+41]..[21,744+48])
      Pexp_variant "Struct"
      None
    expression (src/rewriter.ml[21,744+50]..[21,744+55])
      Pexp_variant "Path"
      None
    expression (src/rewriter.ml[21,744+57]..[21,744+58])
      Pexp_ident "s" (src/rewriter.ml[21,744+57]..[21,744+58])
  ]
expression (src/rewriter.ml[21,744+63]..[21,744+70])
  Pexp_apply
  expression (src/rewriter.ml[21,744+63]..[21,744+64])
    Pexp_ident "!" (src/rewriter.ml[21,744+63]..[21,744+64])
  [
    <arg>
    Nolabel
      expression (src/rewriter.ml[21,744+64]..[21,744+70])
        Pexp_ident "inputs" (src/rewriter.ml[21,744+64]..[21,744+70])
  ]
                                                                      ]
                                                            ]
                                                    expression (src/rewriter.ml[22,817+4]..[22,817+68])
                                                      Pexp_constant PConst_string("<file> Parse <file> as an implementation (specify - for stdin)",None)
                                                  ]
                                                expression (src/rewriter.ml[24,888+4]..[44,1715+3]) ghost
                                                  Pexp_construct "::" (src/rewriter.ml[24,888+4]..[44,1715+3]) ghost
                                                  Some
                                                    expression (src/rewriter.ml[24,888+4]..[44,1715+3]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (src/rewriter.ml[24,888+4]..[25,958+63])
                                                          Pexp_tuple
                                                          [
                                                            expression (src/rewriter.ml[24,888+4]..[24,888+11])
                                                              Pexp_constant PConst_string("-intf",None)
                                                            expression (src/rewriter.ml[24,888+13]..[24,888+68])
                                                              Pexp_construct "String" (src/rewriter.ml[24,888+13]..[24,888+19])
                                                              Some
                                                                expression (src/rewriter.ml[24,888+20]..[24,888+68])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (src/rewriter.ml[24,888+25]..[24,888+26])
                                                                    Ppat_var "s" (src/rewriter.ml[24,888+25]..[24,888+26])
                                                                  expression (src/rewriter.ml[24,888+30]..[24,888+67])
                                                                    Pexp_apply
                                                                    expression (src/rewriter.ml[24,888+37]..[24,888+39])
                                                                      Pexp_ident ":=" (src/rewriter.ml[24,888+37]..[24,888+39])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (src/rewriter.ml[24,888+30]..[24,888+36])
  Pexp_ident "inputs" (src/rewriter.ml[24,888+30]..[24,888+36])
                                                                      <arg>
                                                                      Nolabel
expression (src/rewriter.ml[24,888+40]..[24,888+67])
  Pexp_construct "::" (src/rewriter.ml[24,888+57]..[24,888+59])
  Some
    expression (src/rewriter.ml[24,888+40]..[24,888+67]) ghost
      Pexp_tuple
      [
        expression (src/rewriter.ml[24,888+40]..[24,888+56])
          Pexp_tuple
          [
            expression (src/rewriter.ml[24,888+41]..[24,888+45])
              Pexp_variant "Sig"
              None
            expression (src/rewriter.ml[24,888+47]..[24,888+52])
              Pexp_variant "Path"
              None
            expression (src/rewriter.ml[24,888+54]..[24,888+55])
              Pexp_ident "s" (src/rewriter.ml[24,888+54]..[24,888+55])
          ]
        expression (src/rewriter.ml[24,888+60]..[24,888+67])
          Pexp_apply
          expression (src/rewriter.ml[24,888+60]..[24,888+61])
            Pexp_ident "!" (src/rewriter.ml[24,888+60]..[24,888+61])
          [
            <arg>
            Nolabel
              expression (src/rewriter.ml[24,888+61]..[24,888+67])
                Pexp_ident "inputs" (src/rewriter.ml[24,888+61]..[24,888+67])
          ]
      ]
                                                                    ]
                                                            expression (src/rewriter.ml[25,958+4]..[25,958+63])
                                                              Pexp_constant PConst_string("<file> Parse <file> as an interface (specify - for stdin)",None)
                                                          ]
                                                        expression (src/rewriter.ml[27,1024+4]..[44,1715+3]) ghost
                                                          Pexp_construct "::" (src/rewriter.ml[27,1024+4]..[44,1715+3]) ghost
                                                          Some
                                                            expression (src/rewriter.ml[27,1024+4]..[44,1715+3]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (src/rewriter.ml[27,1024+4]..[28,1058+57])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (src/rewriter.ml[27,1024+4]..[27,1024+8])
                                                                      Pexp_constant PConst_string("-o",None)
                                                                    expression (src/rewriter.ml[27,1024+10]..[27,1024+32])
                                                                      Pexp_construct "Set_string" (src/rewriter.ml[27,1024+10]..[27,1024+20])
                                                                      Some
expression (src/rewriter.ml[27,1024+21]..[27,1024+32])
  Pexp_ident "output_file" (src/rewriter.ml[27,1024+21]..[27,1024+32])
                                                                    expression (src/rewriter.ml[28,1058+4]..[28,1058+57])
                                                                      Pexp_constant PConst_string("<file> Write result into <file> (stdout by default)",None)
                                                                  ]
                                                                expression (src/rewriter.ml[30,1118+4]..[44,1715+3]) ghost
                                                                  Pexp_construct "::" (src/rewriter.ml[30,1118+4]..[44,1715+3]) ghost
                                                                  Some
                                                                    expression (src/rewriter.ml[30,1118+4]..[44,1715+3]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (src/rewriter.ml[30,1118+4]..[31,1158+54])
  Pexp_tuple
  [
    expression (src/rewriter.ml[30,1118+4]..[30,1118+16])
      Pexp_constant PConst_string("-tool-name",None)
    expression (src/rewriter.ml[30,1118+18]..[30,1118+38])
      Pexp_construct "Set_string" (src/rewriter.ml[30,1118+18]..[30,1118+28])
      Some
        expression (src/rewriter.ml[30,1118+29]..[30,1118+38])
          Pexp_ident "tool_name" (src/rewriter.ml[30,1118+29]..[30,1118+38])
    expression (src/rewriter.ml[31,1158+4]..[31,1158+54])
      Pexp_constant PConst_string("<str> Set tool name to <str> (ocamlc by default)",None)
  ]
expression (src/rewriter.ml[33,1215+4]..[44,1715+3]) ghost
  Pexp_construct "::" (src/rewriter.ml[33,1215+4]..[44,1715+3]) ghost
  Some
    expression (src/rewriter.ml[33,1215+4]..[44,1715+3]) ghost
      Pexp_tuple
      [
        expression (src/rewriter.ml[33,1215+4]..[34,1295+56])
          Pexp_tuple
          [
            expression (src/rewriter.ml[33,1215+4]..[33,1215+8])
              Pexp_constant PConst_string("-I",None)
            expression (src/rewriter.ml[33,1215+10]..[33,1215+78])
              Pexp_construct "String" (src/rewriter.ml[33,1215+10]..[33,1215+16])
              Some
                expression (src/rewriter.ml[33,1215+17]..[33,1215+78])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (src/rewriter.ml[33,1215+22]..[33,1215+23])
                    Ppat_var "s" (src/rewriter.ml[33,1215+22]..[33,1215+23])
                  expression (src/rewriter.ml[33,1215+27]..[33,1215+77])
                    Pexp_apply
                    expression (src/rewriter.ml[33,1215+48]..[33,1215+50])
                      Pexp_ident ":=" (src/rewriter.ml[33,1215+48]..[33,1215+50])
                    [
                      <arg>
                      Nolabel
                        expression (src/rewriter.ml[33,1215+27]..[33,1215+47])
                          Pexp_ident "Clflags.include_dirs" (src/rewriter.ml[33,1215+27]..[33,1215+47])
                      <arg>
                      Nolabel
                        expression (src/rewriter.ml[33,1215+51]..[33,1215+77])
                          Pexp_construct "::" (src/rewriter.ml[33,1215+53]..[33,1215+55])
                          Some
                            expression (src/rewriter.ml[33,1215+51]..[33,1215+77]) ghost
                              Pexp_tuple
                              [
                                expression (src/rewriter.ml[33,1215+51]..[33,1215+52])
                                  Pexp_ident "s" (src/rewriter.ml[33,1215+51]..[33,1215+52])
                                expression (src/rewriter.ml[33,1215+56]..[33,1215+77])
                                  Pexp_apply
                                  expression (src/rewriter.ml[33,1215+56]..[33,1215+57])
                                    Pexp_ident "!" (src/rewriter.ml[33,1215+56]..[33,1215+57])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/rewriter.ml[33,1215+57]..[33,1215+77])
                                        Pexp_ident "Clflags.include_dirs" (src/rewriter.ml[33,1215+57]..[33,1215+77])
                                  ]
                              ]
                    ]
            expression (src/rewriter.ml[34,1295+4]..[34,1295+56])
              Pexp_constant PConst_string("<dir> Add <dir> to the list of include directories",None)
          ]
        expression (src/rewriter.ml[36,1354+4]..[44,1715+3]) ghost
          Pexp_construct "::" (src/rewriter.ml[36,1354+4]..[44,1715+3]) ghost
          Some
            expression (src/rewriter.ml[36,1354+4]..[44,1715+3]) ghost
              Pexp_tuple
              [
                expression (src/rewriter.ml[36,1354+4]..[37,1437+57])
                  Pexp_tuple
                  [
                    expression (src/rewriter.ml[36,1354+4]..[36,1354+11])
                      Pexp_constant PConst_string("-open",None)
                    expression (src/rewriter.ml[36,1354+13]..[36,1354+81])
                      Pexp_construct "String" (src/rewriter.ml[36,1354+13]..[36,1354+19])
                      Some
                        expression (src/rewriter.ml[36,1354+20]..[36,1354+81])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/rewriter.ml[36,1354+25]..[36,1354+26])
                            Ppat_var "s" (src/rewriter.ml[36,1354+25]..[36,1354+26])
                          expression (src/rewriter.ml[36,1354+30]..[36,1354+80])
                            Pexp_apply
                            expression (src/rewriter.ml[36,1354+51]..[36,1354+53])
                              Pexp_ident ":=" (src/rewriter.ml[36,1354+51]..[36,1354+53])
                            [
                              <arg>
                              Nolabel
                                expression (src/rewriter.ml[36,1354+30]..[36,1354+50])
                                  Pexp_ident "Clflags.open_modules" (src/rewriter.ml[36,1354+30]..[36,1354+50])
                              <arg>
                              Nolabel
                                expression (src/rewriter.ml[36,1354+54]..[36,1354+80])
                                  Pexp_construct "::" (src/rewriter.ml[36,1354+56]..[36,1354+58])
                                  Some
                                    expression (src/rewriter.ml[36,1354+54]..[36,1354+80]) ghost
                                      Pexp_tuple
                                      [
                                        expression (src/rewriter.ml[36,1354+54]..[36,1354+55])
                                          Pexp_ident "s" (src/rewriter.ml[36,1354+54]..[36,1354+55])
                                        expression (src/rewriter.ml[36,1354+59]..[36,1354+80])
                                          Pexp_apply
                                          expression (src/rewriter.ml[36,1354+59]..[36,1354+60])
                                            Pexp_ident "!" (src/rewriter.ml[36,1354+59]..[36,1354+60])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (src/rewriter.ml[36,1354+60]..[36,1354+80])
                                                Pexp_ident "Clflags.open_modules" (src/rewriter.ml[36,1354+60]..[36,1354+80])
                                          ]
                                      ]
                            ]
                    expression (src/rewriter.ml[37,1437+4]..[37,1437+57])
                      Pexp_constant PConst_string("<module> Add <module> to the list of opened modules",None)
                  ]
                expression (src/rewriter.ml[39,1497+4]..[44,1715+3]) ghost
                  Pexp_construct "::" (src/rewriter.ml[39,1497+4]..[44,1715+3]) ghost
                  Some
                    expression (src/rewriter.ml[39,1497+4]..[44,1715+3]) ghost
                      Pexp_tuple
                      [
                        expression (src/rewriter.ml[39,1497+4]..[40,1563+68])
                          Pexp_tuple
                          [
                            expression (src/rewriter.ml[39,1497+4]..[39,1497+15])
                              Pexp_constant PConst_string("-for-pack",None)
                            expression (src/rewriter.ml[39,1497+17]..[39,1497+64])
                              Pexp_construct "String" (src/rewriter.ml[39,1497+17]..[39,1497+23])
                              Some
                                expression (src/rewriter.ml[39,1497+24]..[39,1497+64])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (src/rewriter.ml[39,1497+29]..[39,1497+30])
                                    Ppat_var "s" (src/rewriter.ml[39,1497+29]..[39,1497+30])
                                  expression (src/rewriter.ml[39,1497+34]..[39,1497+63])
                                    Pexp_apply
                                    expression (src/rewriter.ml[39,1497+54]..[39,1497+56])
                                      Pexp_ident ":=" (src/rewriter.ml[39,1497+54]..[39,1497+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/rewriter.ml[39,1497+34]..[39,1497+53])
                                          Pexp_ident "Clflags.for_package" (src/rewriter.ml[39,1497+34]..[39,1497+53])
                                      <arg>
                                      Nolabel
                                        expression (src/rewriter.ml[39,1497+57]..[39,1497+63])
                                          Pexp_construct "Some" (src/rewriter.ml[39,1497+57]..[39,1497+61])
                                          Some
                                            expression (src/rewriter.ml[39,1497+62]..[39,1497+63])
                                              Pexp_ident "s" (src/rewriter.ml[39,1497+62]..[39,1497+63])
                                    ]
                            expression (src/rewriter.ml[40,1563+4]..[40,1563+68])
                              Pexp_constant PConst_string("<ident> Preprocess code as if it will be packed inside <ident>",None)
                          ]
                        expression (src/rewriter.ml[42,1634+4]..[44,1715+3]) ghost
                          Pexp_construct "::" (src/rewriter.ml[42,1634+4]..[44,1715+3]) ghost
                          Some
                            expression (src/rewriter.ml[42,1634+4]..[44,1715+3]) ghost
                              Pexp_tuple
                              [
                                expression (src/rewriter.ml[42,1634+4]..[43,1663+50])
                                  Pexp_tuple
                                  [
                                    expression (src/rewriter.ml[42,1634+4]..[42,1634+8])
                                      Pexp_constant PConst_string("-g",None)
                                    expression (src/rewriter.ml[42,1634+10]..[42,1634+27])
                                      Pexp_construct "Set" (src/rewriter.ml[42,1634+10]..[42,1634+13])
                                      Some
                                        expression (src/rewriter.ml[42,1634+14]..[42,1634+27])
                                          Pexp_ident "Clflags.debug" (src/rewriter.ml[42,1634+14]..[42,1634+27])
                                    expression (src/rewriter.ml[43,1663+4]..[43,1663+50])
                                      Pexp_constant PConst_string(" Request debug information from preprocessor",None)
                                  ]
                                expression (src/rewriter.ml[44,1715+2]..[44,1715+3]) ghost
                                  Pexp_construct "[]" (src/rewriter.ml[44,1715+2]..[44,1715+3]) ghost
                                  None
                              ]
                      ]
              ]
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
            ]
    ]
  structure_item (src/rewriter.ml[46,1720+0]..[49,1818+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[46,1720+4]..[46,1720+12])
          Ppat_var "anon_arg" (src/rewriter.ml[46,1720+4]..[46,1720+12])
        expression (src/rewriter.ml[46,1720+13]..[49,1818+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/rewriter.ml[46,1720+13]..[46,1720+14])
            Ppat_var "s" (src/rewriter.ml[46,1720+13]..[46,1720+14])
          expression (src/rewriter.ml[47,1737+2]..[49,1818+50])
            Pexp_match
            expression (src/rewriter.ml[47,1737+8]..[47,1737+24])
              Pexp_apply
              expression (src/rewriter.ml[47,1737+8]..[47,1737+9])
                Pexp_ident "!" (src/rewriter.ml[47,1737+8]..[47,1737+9])
              [
                <arg>
                Nolabel
                  expression (src/rewriter.ml[47,1737+9]..[47,1737+24])
                    Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[47,1737+9]..[47,1737+24])
              ]
            [
              <case>
                pattern (src/rewriter.ml[48,1767+4]..[48,1767+6])
                  Ppat_construct "[]" (src/rewriter.ml[48,1767+4]..[48,1767+6])
                  None
                expression (src/rewriter.ml[48,1767+10]..[48,1767+50])
                  Pexp_apply
                  expression (src/rewriter.ml[48,1767+26]..[48,1767+28])
                    Pexp_ident ":=" (src/rewriter.ml[48,1767+26]..[48,1767+28])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[48,1767+10]..[48,1767+25])
                        Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[48,1767+10]..[48,1767+25])
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[48,1767+29]..[48,1767+50])
                        Pexp_construct "::" (src/rewriter.ml[48,1767+31]..[48,1767+33])
                        Some
                          expression (src/rewriter.ml[48,1767+29]..[48,1767+50]) ghost
                            Pexp_tuple
                            [
                              expression (src/rewriter.ml[48,1767+29]..[48,1767+30])
                                Pexp_ident "s" (src/rewriter.ml[48,1767+29]..[48,1767+30])
                              expression (src/rewriter.ml[48,1767+34]..[48,1767+50])
                                Pexp_apply
                                expression (src/rewriter.ml[48,1767+34]..[48,1767+35])
                                  Pexp_ident "!" (src/rewriter.ml[48,1767+34]..[48,1767+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/rewriter.ml[48,1767+35]..[48,1767+50])
                                      Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[48,1767+35]..[48,1767+50])
                                ]
                            ]
                  ]
              <case>
                pattern (src/rewriter.ml[49,1818+4]..[49,1818+5])
                  Ppat_any
                expression (src/rewriter.ml[49,1818+10]..[49,1818+50])
                  Pexp_apply
                  expression (src/rewriter.ml[49,1818+17]..[49,1818+19])
                    Pexp_ident ":=" (src/rewriter.ml[49,1818+17]..[49,1818+19])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[49,1818+10]..[49,1818+16])
                        Pexp_ident "inputs" (src/rewriter.ml[49,1818+10]..[49,1818+16])
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[49,1818+20]..[49,1818+50])
                        Pexp_construct "::" (src/rewriter.ml[49,1818+40]..[49,1818+42])
                        Some
                          expression (src/rewriter.ml[49,1818+20]..[49,1818+50]) ghost
                            Pexp_tuple
                            [
                              expression (src/rewriter.ml[49,1818+20]..[49,1818+39])
                                Pexp_tuple
                                [
                                  expression (src/rewriter.ml[49,1818+21]..[49,1818+28])
                                    Pexp_variant "Struct"
                                    None
                                  expression (src/rewriter.ml[49,1818+30]..[49,1818+35])
                                    Pexp_variant "Path"
                                    None
                                  expression (src/rewriter.ml[49,1818+37]..[49,1818+38])
                                    Pexp_ident "s" (src/rewriter.ml[49,1818+37]..[49,1818+38])
                                ]
                              expression (src/rewriter.ml[49,1818+43]..[49,1818+50])
                                Pexp_apply
                                expression (src/rewriter.ml[49,1818+43]..[49,1818+44])
                                  Pexp_ident "!" (src/rewriter.ml[49,1818+43]..[49,1818+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (src/rewriter.ml[49,1818+44]..[49,1818+50])
                                      Pexp_ident "inputs" (src/rewriter.ml[49,1818+44]..[49,1818+50])
                                ]
                            ]
                  ]
            ]
    ]
  structure_item (src/rewriter.ml[51,1870+0]..[55,2027+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[51,1870+4]..[51,1870+13])
          Ppat_var "usage_msg" (src/rewriter.ml[51,1870+4]..[51,1870+13])
        expression (src/rewriter.ml[52,1886+2]..[55,2027+16])
          Pexp_apply
          expression (src/rewriter.ml[52,1886+2]..[52,1886+16])
            Pexp_ident "Printf.sprintf" (src/rewriter.ml[52,1886+2]..[52,1886+16])
          [
            <arg>
            Nolabel
              expression (src/rewriter.ml[53,1903+4]..[54,1970+56])
                Pexp_constant PConst_string("Usage: %s [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin.",None)
            <arg>
            Nolabel
              expression (src/rewriter.ml[55,2027+4]..[55,2027+16])
                Pexp_apply
                expression (src/rewriter.ml[55,2027+4]..[55,2027+16]) ghost
                  Pexp_ident "Array.get" (src/rewriter.ml[55,2027+4]..[55,2027+16]) ghost
                [
                  <arg>
                  Nolabel
                    expression (src/rewriter.ml[55,2027+4]..[55,2027+12])
                      Pexp_ident "Sys.argv" (src/rewriter.ml[55,2027+4]..[55,2027+12])
                  <arg>
                  Nolabel
                    expression (src/rewriter.ml[55,2027+14]..[55,2027+15])
                      Pexp_constant PConst_int (0,None)
                ]
          ]
    ]
  structure_item (src/rewriter.ml[57,2045+0]..[61,2131+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[57,2045+4]..[57,2045+13])
          Ppat_var "wrap_open" (src/rewriter.ml[57,2045+4]..[57,2045+13])
        expression (src/rewriter.ml[57,2045+14]..[61,2131+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/rewriter.ml[57,2045+14]..[57,2045+16])
            Ppat_var "fn" (src/rewriter.ml[57,2045+14]..[57,2045+16])
          expression (src/rewriter.ml[57,2045+17]..[61,2131+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/rewriter.ml[57,2045+17]..[57,2045+21])
              Ppat_var "file" (src/rewriter.ml[57,2045+17]..[57,2045+21])
            expression (src/rewriter.ml[58,2069+2]..[61,2131+10])
              Pexp_try
              expression (src/rewriter.ml[58,2069+7]..[58,2069+14])
                Pexp_apply
                expression (src/rewriter.ml[58,2069+7]..[58,2069+9])
                  Pexp_ident "fn" (src/rewriter.ml[58,2069+7]..[58,2069+9])
                [
                  <arg>
                  Nolabel
                    expression (src/rewriter.ml[58,2069+10]..[58,2069+14])
                      Pexp_ident "file" (src/rewriter.ml[58,2069+10]..[58,2069+14])
                ]
              [
                <case>
                  pattern (src/rewriter.ml[59,2084+7]..[59,2084+20])
                    Ppat_construct "Sys_error" (src/rewriter.ml[59,2084+7]..[59,2084+16])
                    Some
                      pattern (src/rewriter.ml[59,2084+17]..[59,2084+20])
                        Ppat_var "msg" (src/rewriter.ml[59,2084+17]..[59,2084+20])
                  expression (src/rewriter.ml[60,2108+4]..[61,2131+10])
                    Pexp_sequence
                    expression (src/rewriter.ml[60,2108+4]..[60,2108+21])
                      Pexp_apply
                      expression (src/rewriter.ml[60,2108+4]..[60,2108+17])
                        Pexp_ident "prerr_endline" (src/rewriter.ml[60,2108+4]..[60,2108+17])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[60,2108+18]..[60,2108+21])
                            Pexp_ident "msg" (src/rewriter.ml[60,2108+18]..[60,2108+21])
                      ]
                    expression (src/rewriter.ml[61,2131+4]..[61,2131+10])
                      Pexp_apply
                      expression (src/rewriter.ml[61,2131+4]..[61,2131+8])
                        Pexp_ident "exit" (src/rewriter.ml[61,2131+4]..[61,2131+8])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[61,2131+9]..[61,2131+10])
                            Pexp_constant PConst_int (1,None)
                      ]
              ]
    ]
  structure_item (src/rewriter.ml[63,2143+0]..[73,2455+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[63,2143+4]..[63,2143+14])
          Ppat_var "make_lexer" (src/rewriter.ml[63,2143+4]..[63,2143+14])
        expression (src/rewriter.ml[63,2143+15]..[73,2455+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/rewriter.ml[63,2143+15]..[63,2143+26])
            Ppat_var "source_kind" (src/rewriter.ml[63,2143+15]..[63,2143+26])
          expression (src/rewriter.ml[63,2143+27]..[73,2455+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/rewriter.ml[63,2143+27]..[63,2143+33])
              Ppat_var "source" (src/rewriter.ml[63,2143+27]..[63,2143+33])
            expression (src/rewriter.ml[64,2179+2]..[73,2455+52])
              Pexp_match
              expression (src/rewriter.ml[64,2179+8]..[64,2179+27])
                Pexp_tuple
                [
                  expression (src/rewriter.ml[64,2179+8]..[64,2179+19])
                    Pexp_ident "source_kind" (src/rewriter.ml[64,2179+8]..[64,2179+19])
                  expression (src/rewriter.ml[64,2179+21]..[64,2179+27])
                    Pexp_ident "source" (src/rewriter.ml[64,2179+21]..[64,2179+27])
                ]
              [
                <case>
                  pattern (src/rewriter.ml[65,2212+4]..[65,2212+14])
                    Ppat_tuple
                    [
                      pattern (src/rewriter.ml[65,2212+4]..[65,2212+11])
                        Ppat_variant "String"
                        None
                      pattern (src/rewriter.ml[65,2212+13]..[65,2212+14])
                        Ppat_any
                    ]
                  expression (src/rewriter.ml[66,2230+6]..[67,2275+31])
                    Pexp_sequence
                    expression (src/rewriter.ml[66,2230+6]..[66,2230+43])
                      Pexp_apply
                      expression (src/rewriter.ml[66,2230+26]..[66,2230+28])
                        Pexp_ident ":=" (src/rewriter.ml[66,2230+26]..[66,2230+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[66,2230+6]..[66,2230+25])
                            Pexp_ident "Location.input_name" (src/rewriter.ml[66,2230+6]..[66,2230+25])
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[66,2230+29]..[66,2230+43])
                            Pexp_constant PConst_string("//toplevel//",None)
                      ]
                    expression (src/rewriter.ml[67,2275+6]..[67,2275+31])
                      Pexp_apply
                      expression (src/rewriter.ml[67,2275+6]..[67,2275+24])
                        Pexp_ident "Lexing.from_string" (src/rewriter.ml[67,2275+6]..[67,2275+24])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[67,2275+25]..[67,2275+31])
                            Pexp_ident "source" (src/rewriter.ml[67,2275+25]..[67,2275+31])
                      ]
                <case>
                  pattern (src/rewriter.ml[68,2307+4]..[68,2307+14])
                    Ppat_tuple
                    [
                      pattern (src/rewriter.ml[68,2307+4]..[68,2307+9])
                        Ppat_variant "Path"
                        None
                      pattern (src/rewriter.ml[68,2307+11]..[68,2307+14])
                        Ppat_constant PConst_string("-",None)
                    ]
                  expression (src/rewriter.ml[69,2325+6]..[70,2370+31])
                    Pexp_sequence
                    expression (src/rewriter.ml[69,2325+6]..[69,2325+43])
                      Pexp_apply
                      expression (src/rewriter.ml[69,2325+26]..[69,2325+28])
                        Pexp_ident ":=" (src/rewriter.ml[69,2325+26]..[69,2325+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[69,2325+6]..[69,2325+25])
                            Pexp_ident "Location.input_name" (src/rewriter.ml[69,2325+6]..[69,2325+25])
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[69,2325+29]..[69,2325+43])
                            Pexp_constant PConst_string("//toplevel//",None)
                      ]
                    expression (src/rewriter.ml[70,2370+6]..[70,2370+31])
                      Pexp_apply
                      expression (src/rewriter.ml[70,2370+6]..[70,2370+25])
                        Pexp_ident "Lexing.from_channel" (src/rewriter.ml[70,2370+6]..[70,2370+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[70,2370+26]..[70,2370+31])
                            Pexp_ident "stdin" (src/rewriter.ml[70,2370+26]..[70,2370+31])
                      ]
                <case>
                  pattern (src/rewriter.ml[71,2402+4]..[71,2402+12])
                    Ppat_tuple
                    [
                      pattern (src/rewriter.ml[71,2402+4]..[71,2402+9])
                        Ppat_variant "Path"
                        None
                      pattern (src/rewriter.ml[71,2402+11]..[71,2402+12])
                        Ppat_any
                    ]
                  expression (src/rewriter.ml[72,2418+6]..[73,2455+52])
                    Pexp_sequence
                    expression (src/rewriter.ml[72,2418+6]..[72,2418+35])
                      Pexp_apply
                      expression (src/rewriter.ml[72,2418+26]..[72,2418+28])
                        Pexp_ident ":=" (src/rewriter.ml[72,2418+26]..[72,2418+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[72,2418+6]..[72,2418+25])
                            Pexp_ident "Location.input_name" (src/rewriter.ml[72,2418+6]..[72,2418+25])
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[72,2418+29]..[72,2418+35])
                            Pexp_ident "source" (src/rewriter.ml[72,2418+29]..[72,2418+35])
                      ]
                    expression (src/rewriter.ml[73,2455+6]..[73,2455+52])
                      Pexp_apply
                      expression (src/rewriter.ml[73,2455+6]..[73,2455+25])
                        Pexp_ident "Lexing.from_channel" (src/rewriter.ml[73,2455+6]..[73,2455+25])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[73,2455+26]..[73,2455+52])
                            Pexp_apply
                            expression (src/rewriter.ml[73,2455+27]..[73,2455+36])
                              Pexp_ident "wrap_open" (src/rewriter.ml[73,2455+27]..[73,2455+36])
                            [
                              <arg>
                              Nolabel
                                expression (src/rewriter.ml[73,2455+37]..[73,2455+44])
                                  Pexp_ident "open_in" (src/rewriter.ml[73,2455+37]..[73,2455+44])
                              <arg>
                              Nolabel
                                expression (src/rewriter.ml[73,2455+45]..[73,2455+51])
                                  Pexp_ident "source" (src/rewriter.ml[73,2455+45]..[73,2455+51])
                            ]
                      ]
              ]
    ]
  structure_item (src/rewriter.ml[75,2509+0]..[106,3644+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[75,2509+4]..[75,2509+6])
          Ppat_construct "()" (src/rewriter.ml[75,2509+4]..[75,2509+6])
          None
        expression (src/rewriter.ml[76,2518+2]..[106,3644+10])
          Pexp_sequence
          expression (src/rewriter.ml[76,2518+2]..[76,2518+35])
            Pexp_apply
            expression (src/rewriter.ml[76,2518+2]..[76,2518+11])
              Pexp_ident "Arg.parse" (src/rewriter.ml[76,2518+2]..[76,2518+11])
            [
              <arg>
              Nolabel
                expression (src/rewriter.ml[76,2518+12]..[76,2518+16])
                  Pexp_ident "args" (src/rewriter.ml[76,2518+12]..[76,2518+16])
              <arg>
              Nolabel
                expression (src/rewriter.ml[76,2518+17]..[76,2518+25])
                  Pexp_ident "anon_arg" (src/rewriter.ml[76,2518+17]..[76,2518+25])
              <arg>
              Nolabel
                expression (src/rewriter.ml[76,2518+26]..[76,2518+35])
                  Pexp_ident "usage_msg" (src/rewriter.ml[76,2518+26]..[76,2518+35])
            ]
          expression (src/rewriter.ml[77,2555+2]..[106,3644+10])
            Pexp_sequence
            expression (src/rewriter.ml[77,2555+2]..[80,2634+5])
              Pexp_ifthenelse
              expression (src/rewriter.ml[77,2555+5]..[77,2555+26])
                Pexp_apply
                expression (src/rewriter.ml[77,2555+22]..[77,2555+23])
                  Pexp_ident "=" (src/rewriter.ml[77,2555+22]..[77,2555+23])
                [
                  <arg>
                  Nolabel
                    expression (src/rewriter.ml[77,2555+5]..[77,2555+21])
                      Pexp_apply
                      expression (src/rewriter.ml[77,2555+5]..[77,2555+6])
                        Pexp_ident "!" (src/rewriter.ml[77,2555+5]..[77,2555+6])
                      [
                        <arg>
                        Nolabel
                          expression (src/rewriter.ml[77,2555+6]..[77,2555+21])
                            Pexp_ident "Clflags.all_ppx" (src/rewriter.ml[77,2555+6]..[77,2555+21])
                      ]
                  <arg>
                  Nolabel
                    expression (src/rewriter.ml[77,2555+24]..[77,2555+26])
                      Pexp_construct "[]" (src/rewriter.ml[77,2555+24]..[77,2555+26])
                      None
                ]
              expression (src/rewriter.ml[77,2555+32]..[80,2634+5])
                Pexp_sequence
                expression (src/rewriter.ml[78,2593+4]..[78,2593+28])
                  Pexp_apply
                  expression (src/rewriter.ml[78,2593+4]..[78,2593+13])
                    Pexp_ident "Arg.usage" (src/rewriter.ml[78,2593+4]..[78,2593+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[78,2593+14]..[78,2593+18])
                        Pexp_ident "args" (src/rewriter.ml[78,2593+14]..[78,2593+18])
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[78,2593+19]..[78,2593+28])
                        Pexp_ident "usage_msg" (src/rewriter.ml[78,2593+19]..[78,2593+28])
                  ]
                expression (src/rewriter.ml[79,2623+4]..[79,2623+10])
                  Pexp_apply
                  expression (src/rewriter.ml[79,2623+4]..[79,2623+8])
                    Pexp_ident "exit" (src/rewriter.ml[79,2623+4]..[79,2623+8])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[79,2623+9]..[79,2623+10])
                        Pexp_constant PConst_int (1,None)
                  ]
              None
            expression (src/rewriter.ml[81,2641+2]..[106,3644+10])
              Pexp_sequence
              expression (src/rewriter.ml[81,2641+2]..[82,2664+35])
                Pexp_ifthenelse
                expression (src/rewriter.ml[81,2641+5]..[81,2641+17])
                  Pexp_apply
                  expression (src/rewriter.ml[81,2641+13]..[81,2641+14])
                    Pexp_ident "=" (src/rewriter.ml[81,2641+13]..[81,2641+14])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[81,2641+5]..[81,2641+12])
                        Pexp_apply
                        expression (src/rewriter.ml[81,2641+5]..[81,2641+6])
                          Pexp_ident "!" (src/rewriter.ml[81,2641+5]..[81,2641+6])
                        [
                          <arg>
                          Nolabel
                            expression (src/rewriter.ml[81,2641+6]..[81,2641+12])
                              Pexp_ident "inputs" (src/rewriter.ml[81,2641+6]..[81,2641+12])
                        ]
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[81,2641+15]..[81,2641+17])
                        Pexp_construct "[]" (src/rewriter.ml[81,2641+15]..[81,2641+17])
                        None
                  ]
                expression (src/rewriter.ml[82,2664+4]..[82,2664+35])
                  Pexp_apply
                  expression (src/rewriter.ml[82,2664+11]..[82,2664+13])
                    Pexp_ident ":=" (src/rewriter.ml[82,2664+11]..[82,2664+13])
                  [
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[82,2664+4]..[82,2664+10])
                        Pexp_ident "inputs" (src/rewriter.ml[82,2664+4]..[82,2664+10])
                    <arg>
                    Nolabel
                      expression (src/rewriter.ml[82,2664+14]..[82,2664+35])
                        Pexp_construct "::" (src/rewriter.ml[82,2664+15]..[82,2664+35]) ghost
                        Some
                          expression (src/rewriter.ml[82,2664+15]..[82,2664+35]) ghost
                            Pexp_tuple
                            [
                              expression (src/rewriter.ml[82,2664+15]..[82,2664+34])
                                Pexp_tuple
                                [
                                  expression (src/rewriter.ml[82,2664+15]..[82,2664+22])
                                    Pexp_variant "Struct"
                                    None
                                  expression (src/rewriter.ml[82,2664+24]..[82,2664+29])
                                    Pexp_variant "Path"
                                    None
                                  expression (src/rewriter.ml[82,2664+31]..[82,2664+34])
                                    Pexp_constant PConst_string("-",None)
                                ]
                              expression (src/rewriter.ml[82,2664+34]..[82,2664+35]) ghost
                                Pexp_construct "[]" (src/rewriter.ml[82,2664+34]..[82,2664+35]) ghost
                                None
                            ]
                  ]
                None
              expression (src/rewriter.ml[83,2701+2]..[106,3644+10])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/rewriter.ml[83,2701+6]..[83,2701+9])
                      Ppat_var "fmt" (src/rewriter.ml[83,2701+6]..[83,2701+9])
                    expression (src/rewriter.ml[84,2713+4]..[86,2776+71])
                      Pexp_match
                      expression (src/rewriter.ml[84,2713+10]..[84,2713+22])
                        Pexp_apply
                        expression (src/rewriter.ml[84,2713+10]..[84,2713+11])
                          Pexp_ident "!" (src/rewriter.ml[84,2713+10]..[84,2713+11])
                        [
                          <arg>
                          Nolabel
                            expression (src/rewriter.ml[84,2713+11]..[84,2713+22])
                              Pexp_ident "output_file" (src/rewriter.ml[84,2713+11]..[84,2713+22])
                        ]
                      [
                        <case>
                          pattern (src/rewriter.ml[85,2741+6]..[85,2741+9])
                            Ppat_constant PConst_string("-",None)
                          expression (src/rewriter.ml[85,2741+14]..[85,2741+34])
                            Pexp_ident "Format.std_formatter" (src/rewriter.ml[85,2741+14]..[85,2741+34])
                        <case>
                          pattern (src/rewriter.ml[86,2776+6]..[86,2776+10])
                            Ppat_var "file" (src/rewriter.ml[86,2776+6]..[86,2776+10])
                          expression (src/rewriter.ml[86,2776+14]..[86,2776+71])
                            Pexp_apply
                            expression (src/rewriter.ml[86,2776+14]..[86,2776+45])
                              Pexp_ident "Format.formatter_of_out_channel" (src/rewriter.ml[86,2776+14]..[86,2776+45])
                            [
                              <arg>
                              Nolabel
                                expression (src/rewriter.ml[86,2776+46]..[86,2776+71])
                                  Pexp_apply
                                  expression (src/rewriter.ml[86,2776+47]..[86,2776+56])
                                    Pexp_ident "wrap_open" (src/rewriter.ml[86,2776+47]..[86,2776+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/rewriter.ml[86,2776+57]..[86,2776+65])
                                        Pexp_ident "open_out" (src/rewriter.ml[86,2776+57]..[86,2776+65])
                                    <arg>
                                    Nolabel
                                      expression (src/rewriter.ml[86,2776+66]..[86,2776+70])
                                        Pexp_ident "file" (src/rewriter.ml[86,2776+66]..[86,2776+70])
                                  ]
                            ]
                      ]
                ]
                expression (src/rewriter.ml[88,2853+2]..[106,3644+10])
                  Pexp_try
                  expression (src/rewriter.ml[89,2859+4]..[103,3530+43])
                    Pexp_apply
                    expression (src/rewriter.ml[89,2859+12]..[89,2859+14])
                      Pexp_ident "|>" (src/rewriter.ml[89,2859+12]..[89,2859+14])
                    [
                      <arg>
                      Nolabel
                        expression (src/rewriter.ml[89,2859+4]..[89,2859+11])
                          Pexp_apply
                          expression (src/rewriter.ml[89,2859+4]..[89,2859+5])
                            Pexp_ident "!" (src/rewriter.ml[89,2859+4]..[89,2859+5])
                          [
                            <arg>
                            Nolabel
                              expression (src/rewriter.ml[89,2859+5]..[89,2859+11])
                                Pexp_ident "inputs" (src/rewriter.ml[89,2859+5]..[89,2859+11])
                          ]
                      <arg>
                      Nolabel
                        expression (src/rewriter.ml[89,2859+15]..[103,3530+43])
                          Pexp_apply
                          expression (src/rewriter.ml[89,2859+15]..[89,2859+24])
                            Pexp_ident "List.iter" (src/rewriter.ml[89,2859+15]..[89,2859+24])
                          [
                            <arg>
                            Nolabel
                              expression (src/rewriter.ml[89,2859+25]..[103,3530+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (src/rewriter.ml[89,2859+30]..[89,2859+61])
                                  Ppat_tuple
                                  [
                                    pattern (src/rewriter.ml[89,2859+31]..[89,2859+39])
                                      Ppat_var "ast_kind" (src/rewriter.ml[89,2859+31]..[89,2859+39])
                                    pattern (src/rewriter.ml[89,2859+41]..[89,2859+52])
                                      Ppat_var "source_kind" (src/rewriter.ml[89,2859+41]..[89,2859+52])
                                    pattern (src/rewriter.ml[89,2859+54]..[89,2859+60])
                                      Ppat_var "source" (src/rewriter.ml[89,2859+54]..[89,2859+60])
                                  ]
                                expression (src/rewriter.ml[90,2924+8]..[103,3530+42])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (src/rewriter.ml[90,2924+12]..[90,2924+17])
                                        Ppat_var "lexer" (src/rewriter.ml[90,2924+12]..[90,2924+17])
                                      expression (src/rewriter.ml[90,2924+20]..[90,2924+49])
                                        Pexp_apply
                                        expression (src/rewriter.ml[90,2924+20]..[90,2924+30])
                                          Pexp_ident "make_lexer" (src/rewriter.ml[90,2924+20]..[90,2924+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (src/rewriter.ml[90,2924+31]..[90,2924+42])
                                              Pexp_ident "source_kind" (src/rewriter.ml[90,2924+31]..[90,2924+42])
                                          <arg>
                                          Nolabel
                                            expression (src/rewriter.ml[90,2924+43]..[90,2924+49])
                                              Pexp_ident "source" (src/rewriter.ml[90,2924+43]..[90,2924+49])
                                        ]
                                  ]
                                  expression (src/rewriter.ml[91,2977+8]..[103,3530+42])
                                    Pexp_match
                                    expression (src/rewriter.ml[91,2977+14]..[91,2977+22])
                                      Pexp_ident "ast_kind" (src/rewriter.ml[91,2977+14]..[91,2977+22])
                                    [
                                      <case>
                                        pattern (src/rewriter.ml[92,3005+10]..[92,3005+17])
                                          Ppat_variant "Struct"
                                          None
                                        expression (src/rewriter.ml[93,3026+12]..[97,3250+42])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/rewriter.ml[93,3026+16]..[93,3026+20])
                                                Ppat_var "pstr" (src/rewriter.ml[93,3026+16]..[93,3026+20])
                                              expression (src/rewriter.ml[93,3026+23]..[93,3026+49])
                                                Pexp_apply
                                                expression (src/rewriter.ml[93,3026+23]..[93,3026+43])
                                                  Pexp_ident "Parse.implementation" (src/rewriter.ml[93,3026+23]..[93,3026+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[93,3026+44]..[93,3026+49])
                                                      Pexp_ident "lexer" (src/rewriter.ml[93,3026+44]..[93,3026+49])
                                                ]
                                          ]
                                          expression (src/rewriter.ml[94,3079+12]..[97,3250+42])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/rewriter.ml[94,3079+16]..[94,3079+20])
                                                  Ppat_var "pstr" (src/rewriter.ml[94,3079+16]..[94,3079+20])
                                                expression (src/rewriter.ml[94,3079+23]..[95,3167+37])
                                                  Pexp_apply
                                                  expression (src/rewriter.ml[94,3079+23]..[94,3079+45])
                                                    Pexp_ident "Pparse.apply_rewriters" (src/rewriter.ml[94,3079+23]..[94,3079+45])
                                                  [
                                                    <arg>
                                                    Labelled "tool_name"
                                                      expression (src/rewriter.ml[94,3079+77]..[94,3079+87])
                                                        Pexp_apply
                                                        expression (src/rewriter.ml[94,3079+77]..[94,3079+78])
                                                          Pexp_ident "!" (src/rewriter.ml[94,3079+77]..[94,3079+78])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/rewriter.ml[94,3079+78]..[94,3079+87])
                                                              Pexp_ident "tool_name" (src/rewriter.ml[94,3079+78]..[94,3079+87])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/rewriter.ml[95,3167+16]..[95,3167+32])
                                                        Pexp_construct "Pparse.Structure" (src/rewriter.ml[95,3167+16]..[95,3167+32])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (src/rewriter.ml[95,3167+33]..[95,3167+37])
                                                        Pexp_ident "pstr" (src/rewriter.ml[95,3167+33]..[95,3167+37])
                                                  ]
                                            ]
                                            expression (src/rewriter.ml[96,3208+12]..[97,3250+42])
                                              Pexp_sequence
                                              expression (src/rewriter.ml[96,3208+12]..[96,3208+40])
                                                Pexp_apply
                                                expression (src/rewriter.ml[96,3208+12]..[96,3208+31])
                                                  Pexp_ident "Pprintast.structure" (src/rewriter.ml[96,3208+12]..[96,3208+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[96,3208+32]..[96,3208+35])
                                                      Pexp_ident "fmt" (src/rewriter.ml[96,3208+32]..[96,3208+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[96,3208+36]..[96,3208+40])
                                                      Pexp_ident "pstr" (src/rewriter.ml[96,3208+36]..[96,3208+40])
                                                ]
                                              expression (src/rewriter.ml[97,3250+12]..[97,3250+42])
                                                Pexp_apply
                                                expression (src/rewriter.ml[97,3250+12]..[97,3250+35])
                                                  Pexp_ident "Format.pp_print_newline" (src/rewriter.ml[97,3250+12]..[97,3250+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[97,3250+36]..[97,3250+39])
                                                      Pexp_ident "fmt" (src/rewriter.ml[97,3250+36]..[97,3250+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[97,3250+40]..[97,3250+42])
                                                      Pexp_construct "()" (src/rewriter.ml[97,3250+40]..[97,3250+42])
                                                      None
                                                ]
                                      <case>
                                        pattern (src/rewriter.ml[98,3293+10]..[98,3293+14])
                                          Ppat_variant "Sig"
                                          None
                                        expression (src/rewriter.ml[99,3311+12]..[103,3530+42])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/rewriter.ml[99,3311+16]..[99,3311+20])
                                                Ppat_var "psig" (src/rewriter.ml[99,3311+16]..[99,3311+20])
                                              expression (src/rewriter.ml[99,3311+23]..[99,3311+44])
                                                Pexp_apply
                                                expression (src/rewriter.ml[99,3311+23]..[99,3311+38])
                                                  Pexp_ident "Parse.interface" (src/rewriter.ml[99,3311+23]..[99,3311+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[99,3311+39]..[99,3311+44])
                                                      Pexp_ident "lexer" (src/rewriter.ml[99,3311+39]..[99,3311+44])
                                                ]
                                          ]
                                          expression (src/rewriter.ml[100,3359+12]..[103,3530+42])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/rewriter.ml[100,3359+16]..[100,3359+20])
                                                  Ppat_var "psig" (src/rewriter.ml[100,3359+16]..[100,3359+20])
                                                expression (src/rewriter.ml[100,3359+23]..[101,3447+37])
                                                  Pexp_apply
                                                  expression (src/rewriter.ml[100,3359+23]..[100,3359+45])
                                                    Pexp_ident "Pparse.apply_rewriters" (src/rewriter.ml[100,3359+23]..[100,3359+45])
                                                  [
                                                    <arg>
                                                    Labelled "tool_name"
                                                      expression (src/rewriter.ml[100,3359+77]..[100,3359+87])
                                                        Pexp_apply
                                                        expression (src/rewriter.ml[100,3359+77]..[100,3359+78])
                                                          Pexp_ident "!" (src/rewriter.ml[100,3359+77]..[100,3359+78])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (src/rewriter.ml[100,3359+78]..[100,3359+87])
                                                              Pexp_ident "tool_name" (src/rewriter.ml[100,3359+78]..[100,3359+87])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (src/rewriter.ml[101,3447+16]..[101,3447+32])
                                                        Pexp_construct "Pparse.Signature" (src/rewriter.ml[101,3447+16]..[101,3447+32])
                                                        None
                                                    <arg>
                                                    Nolabel
                                                      expression (src/rewriter.ml[101,3447+33]..[101,3447+37])
                                                        Pexp_ident "psig" (src/rewriter.ml[101,3447+33]..[101,3447+37])
                                                  ]
                                            ]
                                            expression (src/rewriter.ml[102,3488+12]..[103,3530+42])
                                              Pexp_sequence
                                              expression (src/rewriter.ml[102,3488+12]..[102,3488+40])
                                                Pexp_apply
                                                expression (src/rewriter.ml[102,3488+12]..[102,3488+31])
                                                  Pexp_ident "Pprintast.signature" (src/rewriter.ml[102,3488+12]..[102,3488+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[102,3488+32]..[102,3488+35])
                                                      Pexp_ident "fmt" (src/rewriter.ml[102,3488+32]..[102,3488+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[102,3488+36]..[102,3488+40])
                                                      Pexp_ident "psig" (src/rewriter.ml[102,3488+36]..[102,3488+40])
                                                ]
                                              expression (src/rewriter.ml[103,3530+12]..[103,3530+42])
                                                Pexp_apply
                                                expression (src/rewriter.ml[103,3530+12]..[103,3530+35])
                                                  Pexp_ident "Format.pp_print_newline" (src/rewriter.ml[103,3530+12]..[103,3530+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[103,3530+36]..[103,3530+39])
                                                      Pexp_ident "fmt" (src/rewriter.ml[103,3530+36]..[103,3530+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (src/rewriter.ml[103,3530+40]..[103,3530+42])
                                                      Pexp_construct "()" (src/rewriter.ml[103,3530+40]..[103,3530+42])
                                                      None
                                                ]
                                    ]
                          ]
                    ]
                  [
                    <case>
                      pattern (src/rewriter.ml[104,3574+7]..[104,3574+10])
                        Ppat_var "exn" (src/rewriter.ml[104,3574+7]..[104,3574+10])
                      expression (src/rewriter.ml[105,3588+4]..[106,3644+10])
                        Pexp_sequence
                        expression (src/rewriter.ml[105,3588+4]..[105,3588+54])
                          Pexp_apply
                          expression (src/rewriter.ml[105,3588+4]..[105,3588+29])
                            Pexp_ident "Location.report_exception" (src/rewriter.ml[105,3588+4]..[105,3588+29])
                          [
                            <arg>
                            Nolabel
                              expression (src/rewriter.ml[105,3588+30]..[105,3588+50])
                                Pexp_ident "Format.err_formatter" (src/rewriter.ml[105,3588+30]..[105,3588+50])
                            <arg>
                            Nolabel
                              expression (src/rewriter.ml[105,3588+51]..[105,3588+54])
                                Pexp_ident "exn" (src/rewriter.ml[105,3588+51]..[105,3588+54])
                          ]
                        expression (src/rewriter.ml[106,3644+4]..[106,3644+10])
                          Pexp_apply
                          expression (src/rewriter.ml[106,3644+4]..[106,3644+8])
                            Pexp_ident "exit" (src/rewriter.ml[106,3644+4]..[106,3644+8])
                          [
                            <arg>
                            Nolabel
                              expression (src/rewriter.ml[106,3644+9]..[106,3644+10])
                                Pexp_constant PConst_int (2,None)
                          ]
                  ]
    ]
]

let inputs : ([ `Struct  | `Sig ] * [ `String  | `Path ] * string) list ref =
  ref []
let output_file : string ref = ref "-"
let tool_name = ref "ocamlc"
let args =
  let open Arg in
    align
      [("-ppx",
         (String ((fun s -> Clflags.all_ppx := (s :: (!Clflags.all_ppx))))),
         "<cmd> Invoke <cmd> as a ppx preprocessor");
      ("-str",
        (String ((fun s -> inputs := ((`Struct, `String, s) :: (!inputs))))),
        "<str> Parse <str> as a structure");
      ("-sig",
        (String ((fun s -> inputs := ((`Sig, `String, s) :: (!inputs))))),
        "<str> Parse <str> as a signature");
      ("-impl",
        (String ((fun s -> inputs := ((`Struct, `Path, s) :: (!inputs))))),
        "<file> Parse <file> as an implementation (specify - for stdin)");
      ("-intf",
        (String ((fun s -> inputs := ((`Sig, `Path, s) :: (!inputs))))),
        "<file> Parse <file> as an interface (specify - for stdin)");
      ("-o", (Set_string output_file),
        "<file> Write result into <file> (stdout by default)");
      ("-tool-name", (Set_string tool_name),
        "<str> Set tool name to <str> (ocamlc by default)");
      ("-I",
        (String
           ((fun s -> Clflags.include_dirs := (s :: (!Clflags.include_dirs))))),
        "<dir> Add <dir> to the list of include directories");
      ("-open",
        (String
           ((fun s -> Clflags.open_modules := (s :: (!Clflags.open_modules))))),
        "<module> Add <module> to the list of opened modules");
      ("-for-pack", (String ((fun s -> Clflags.for_package := (Some s)))),
        "<ident> Preprocess code as if it will be packed inside <ident>");
      ("-g", (Set Clflags.debug),
        " Request debug information from preprocessor")]
let anon_arg s =
  match !Clflags.all_ppx with
  | [] -> Clflags.all_ppx := (s :: (!Clflags.all_ppx))
  | _ -> inputs := ((`Struct, `Path, s) :: (!inputs))
let usage_msg =
  Printf.sprintf
    "Usage: %s [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin."
    (Sys.argv.(0))
let wrap_open fn file =
  try fn file with | Sys_error msg -> (prerr_endline msg; exit 1)
let make_lexer source_kind source =
  match (source_kind, source) with
  | (`String, _) ->
      (Location.input_name := "//toplevel//"; Lexing.from_string source)
  | (`Path, "-") ->
      (Location.input_name := "//toplevel//"; Lexing.from_channel stdin)
  | (`Path, _) ->
      (Location.input_name := source;
       Lexing.from_channel (wrap_open open_in source))
let () =
  Arg.parse args anon_arg usage_msg;
  if (!Clflags.all_ppx) = [] then (Arg.usage args usage_msg; exit 1);
  if (!inputs) = [] then inputs := [(`Struct, `Path, "-")];
  (let fmt =
     match !output_file with
     | "-" -> Format.std_formatter
     | file -> Format.formatter_of_out_channel (wrap_open open_out file) in
   try
     (!inputs) |>
       (List.iter
          (fun (ast_kind, source_kind, source) ->
             let lexer = make_lexer source_kind source in
             match ast_kind with
             | `Struct ->
                 let pstr = Parse.implementation lexer in
                 let pstr =
                   Pparse.apply_rewriters ~tool_name:(!tool_name)
                     Pparse.Structure pstr in
                 (Pprintast.structure fmt pstr;
                  Format.pp_print_newline fmt ())
             | `Sig ->
                 let psig = Parse.interface lexer in
                 let psig =
                   Pparse.apply_rewriters ~tool_name:(!tool_name)
                     Pparse.Signature psig in
                 (Pprintast.signature fmt psig;
                  Format.pp_print_newline fmt ())))
   with | exn -> (Location.report_exception Format.err_formatter exn; exit 2))
[
  structure_item (src/rewriter.ml[5,205+0]..src/rewriter.ml[5,205+82])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[5,205+4]..src/rewriter.ml[5,205+10])
          Tpat_constraint
          core_type (src/rewriter.ml[5,205+13]..src/rewriter.ml[5,205+73]) ghost
            Ttyp_poly
            core_type (src/rewriter.ml[5,205+13]..src/rewriter.ml[5,205+73])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/rewriter.ml[5,205+13]..src/rewriter.ml[5,205+69])
                  Ttyp_constr "list/9!"
                  [
                    core_type (src/rewriter.ml[5,205+14]..src/rewriter.ml[5,205+63])
                      Ttyp_tuple
                      [
                        core_type (src/rewriter.ml[5,205+14]..src/rewriter.ml[5,205+32])
                          Ttyp_variant closed=Closed
                          [
                            Ttag "Struct" true
                              []
                            Ttag "Sig" true
                              []
                          ]
                          None
                        core_type (src/rewriter.ml[5,205+35]..src/rewriter.ml[5,205+54])
                          Ttyp_variant closed=Closed
                          [
                            Ttag "String" true
                              []
                            Ttag "Path" true
                              []
                          ]
                          None
                        core_type (src/rewriter.ml[5,205+57]..src/rewriter.ml[5,205+63])
                          Ttyp_constr "string/15!"
                          []
                      ]
                  ]
              ]
          pattern (src/rewriter.ml[5,205+4]..src/rewriter.ml[5,205+10])
            Tpat_var "inputs/80"
        expression (src/rewriter.ml[5,205+76]..src/rewriter.ml[5,205+82])
          Texp_constraint
          core_type (src/rewriter.ml[5,205+13]..src/rewriter.ml[5,205+73])
            Ttyp_constr "Stdlib!.ref"
            [
              core_type (src/rewriter.ml[5,205+13]..src/rewriter.ml[5,205+69])
                Ttyp_constr "list/9!"
                [
                  core_type (src/rewriter.ml[5,205+14]..src/rewriter.ml[5,205+63])
                    Ttyp_tuple
                    [
                      core_type (src/rewriter.ml[5,205+14]..src/rewriter.ml[5,205+32])
                        Ttyp_variant closed=Closed
                        [
                          Ttag "Struct" true
                            []
                          Ttag "Sig" true
                            []
                        ]
                        None
                      core_type (src/rewriter.ml[5,205+35]..src/rewriter.ml[5,205+54])
                        Ttyp_variant closed=Closed
                        [
                          Ttag "String" true
                            []
                          Ttag "Path" true
                            []
                        ]
                        None
                      core_type (src/rewriter.ml[5,205+57]..src/rewriter.ml[5,205+63])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
            ]
            Texp_apply
            expression (src/rewriter.ml[5,205+76]..src/rewriter.ml[5,205+79])
              Texp_ident "Stdlib!.ref"
            [
              <arg>
                Nolabel
                expression (src/rewriter.ml[5,205+80]..src/rewriter.ml[5,205+82])
                  Texp_construct "[]"
                  []
            ]
    ]
  structure_item (src/rewriter.ml[6,288+0]..src/rewriter.ml[6,288+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[6,288+4]..src/rewriter.ml[6,288+15])
          Tpat_constraint
          core_type (src/rewriter.ml[6,288+18]..src/rewriter.ml[6,288+28]) ghost
            Ttyp_poly
            core_type (src/rewriter.ml[6,288+18]..src/rewriter.ml[6,288+28])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (src/rewriter.ml[6,288+18]..src/rewriter.ml[6,288+24])
                  Ttyp_constr "string/15!"
                  []
              ]
          pattern (src/rewriter.ml[6,288+4]..src/rewriter.ml[6,288+15])
            Tpat_var "output_file/81"
        expression (src/rewriter.ml[6,288+31]..src/rewriter.ml[6,288+38])
          Texp_constraint
          core_type (src/rewriter.ml[6,288+18]..src/rewriter.ml[6,288+28])
            Ttyp_constr "Stdlib!.ref"
            [
              core_type (src/rewriter.ml[6,288+18]..src/rewriter.ml[6,288+24])
                Ttyp_constr "string/15!"
                []
            ]
            Texp_apply
            expression (src/rewriter.ml[6,288+31]..src/rewriter.ml[6,288+34])
              Texp_ident "Stdlib!.ref"
            [
              <arg>
                Nolabel
                expression (src/rewriter.ml[6,288+35]..src/rewriter.ml[6,288+38])
                  Texp_constant Const_string("-",None)
            ]
    ]
  structure_item (src/rewriter.ml[7,327+0]..src/rewriter.ml[7,327+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[7,327+4]..src/rewriter.ml[7,327+13])
          Tpat_var "tool_name/82"
        expression (src/rewriter.ml[7,327+16]..src/rewriter.ml[7,327+28])
          Texp_apply
          expression (src/rewriter.ml[7,327+16]..src/rewriter.ml[7,327+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/rewriter.ml[7,327+20]..src/rewriter.ml[7,327+28])
                Texp_constant Const_string("ocamlc",None)
          ]
    ]
  structure_item (src/rewriter.ml[9,357+0]..src/rewriter.ml[44,1715+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[9,357+4]..src/rewriter.ml[9,357+8])
          Tpat_var "args/83"
        expression (src/rewriter.ml[10,368+2]..src/rewriter.ml[44,1715+3])
          Texp_open Fresh
          module_expr (src/rewriter.ml[10,368+11]..src/rewriter.ml[10,368+14])
            Tmod_ident "Stdlib!.Arg"
          expression (src/rewriter.ml[11,386+2]..src/rewriter.ml[44,1715+3])
            Texp_apply
            expression (src/rewriter.ml[11,386+2]..src/rewriter.ml[11,386+7])
              Texp_ident "Stdlib!.Arg.align"
            [
              <arg>
                Optional "limit"
                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Texp_construct "None"
                  []
              <arg>
                Nolabel
                expression (src/rewriter.ml[11,386+8]..src/rewriter.ml[44,1715+3])
                  Texp_construct "::"
                  [
                    expression (src/rewriter.ml[12,396+4]..src/rewriter.ml[13,468+46])
                      Texp_tuple
                      [
                        expression (src/rewriter.ml[12,396+4]..src/rewriter.ml[12,396+10])
                          Texp_constant Const_string("-ppx",None)
                        expression (src/rewriter.ml[12,396+12]..src/rewriter.ml[12,396+70])
                          Texp_construct "String"
                          [
                            expression (src/rewriter.ml[12,396+19]..src/rewriter.ml[12,396+70])
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/rewriter.ml[12,396+24]..src/rewriter.ml[12,396+25])
                                    Tpat_var "s/119"
                                  expression (src/rewriter.ml[12,396+29]..src/rewriter.ml[12,396+69])
                                    Texp_apply
                                    expression (src/rewriter.ml[12,396+45]..src/rewriter.ml[12,396+47])
                                      Texp_ident "Stdlib!.:="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/rewriter.ml[12,396+29]..src/rewriter.ml[12,396+44])
                                          Texp_ident "Clflags!.all_ppx"
                                      <arg>
                                        Nolabel
                                        expression (src/rewriter.ml[12,396+48]..src/rewriter.ml[12,396+69])
                                          Texp_construct "::"
                                          [
                                            expression (src/rewriter.ml[12,396+48]..src/rewriter.ml[12,396+49])
                                              Texp_ident "s/119"
                                            expression (src/rewriter.ml[12,396+53]..src/rewriter.ml[12,396+69])
                                              Texp_apply
                                              expression (src/rewriter.ml[12,396+53]..src/rewriter.ml[12,396+54])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/rewriter.ml[12,396+54]..src/rewriter.ml[12,396+69])
                                                    Texp_ident "Clflags!.all_ppx"
                                              ]
                                          ]
                                    ]
                              ]
                          ]
                        expression (src/rewriter.ml[13,468+4]..src/rewriter.ml[13,468+46])
                          Texp_constant Const_string("<cmd> Invoke <cmd> as a ppx preprocessor",None)
                      ]
                    expression (src/rewriter.ml[15,517+4]..src/rewriter.ml[44,1715+3]) ghost
                      Texp_construct "::"
                      [
                        expression (src/rewriter.ml[15,517+4]..src/rewriter.ml[16,591+38])
                          Texp_tuple
                          [
                            expression (src/rewriter.ml[15,517+4]..src/rewriter.ml[15,517+10])
                              Texp_constant Const_string("-str",None)
                            expression (src/rewriter.ml[15,517+12]..src/rewriter.ml[15,517+72])
                              Texp_construct "String"
                              [
                                expression (src/rewriter.ml[15,517+19]..src/rewriter.ml[15,517+72])
                                  Texp_function
                                  Nolabel
                                  [
                                    <case>
                                      pattern (src/rewriter.ml[15,517+24]..src/rewriter.ml[15,517+25])
                                        Tpat_var "s/125"
                                      expression (src/rewriter.ml[15,517+29]..src/rewriter.ml[15,517+71])
                                        Texp_apply
                                        expression (src/rewriter.ml[15,517+36]..src/rewriter.ml[15,517+38])
                                          Texp_ident "Stdlib!.:="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/rewriter.ml[15,517+29]..src/rewriter.ml[15,517+35])
                                              Texp_ident "inputs/80"
                                          <arg>
                                            Nolabel
                                            expression (src/rewriter.ml[15,517+39]..src/rewriter.ml[15,517+71])
                                              Texp_construct "::"
                                              [
                                                expression (src/rewriter.ml[15,517+39]..src/rewriter.ml[15,517+60])
                                                  Texp_tuple
                                                  [
                                                    expression (src/rewriter.ml[15,517+40]..src/rewriter.ml[15,517+47])
                                                      Texp_variant "Struct"
                                                      None
                                                    expression (src/rewriter.ml[15,517+49]..src/rewriter.ml[15,517+56])
                                                      Texp_variant "String"
                                                      None
                                                    expression (src/rewriter.ml[15,517+58]..src/rewriter.ml[15,517+59])
                                                      Texp_ident "s/125"
                                                  ]
                                                expression (src/rewriter.ml[15,517+64]..src/rewriter.ml[15,517+71])
                                                  Texp_apply
                                                  expression (src/rewriter.ml[15,517+64]..src/rewriter.ml[15,517+65])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/rewriter.ml[15,517+65]..src/rewriter.ml[15,517+71])
                                                        Texp_ident "inputs/80"
                                                  ]
                                              ]
                                        ]
                                  ]
                              ]
                            expression (src/rewriter.ml[16,591+4]..src/rewriter.ml[16,591+38])
                              Texp_constant Const_string("<str> Parse <str> as a structure",None)
                          ]
                        expression (src/rewriter.ml[18,632+4]..src/rewriter.ml[44,1715+3]) ghost
                          Texp_construct "::"
                          [
                            expression (src/rewriter.ml[18,632+4]..src/rewriter.ml[19,703+38])
                              Texp_tuple
                              [
                                expression (src/rewriter.ml[18,632+4]..src/rewriter.ml[18,632+10])
                                  Texp_constant Const_string("-sig",None)
                                expression (src/rewriter.ml[18,632+12]..src/rewriter.ml[18,632+69])
                                  Texp_construct "String"
                                  [
                                    expression (src/rewriter.ml[18,632+19]..src/rewriter.ml[18,632+69])
                                      Texp_function
                                      Nolabel
                                      [
                                        <case>
                                          pattern (src/rewriter.ml[18,632+24]..src/rewriter.ml[18,632+25])
                                            Tpat_var "s/126"
                                          expression (src/rewriter.ml[18,632+29]..src/rewriter.ml[18,632+68])
                                            Texp_apply
                                            expression (src/rewriter.ml[18,632+36]..src/rewriter.ml[18,632+38])
                                              Texp_ident "Stdlib!.:="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/rewriter.ml[18,632+29]..src/rewriter.ml[18,632+35])
                                                  Texp_ident "inputs/80"
                                              <arg>
                                                Nolabel
                                                expression (src/rewriter.ml[18,632+39]..src/rewriter.ml[18,632+68])
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/rewriter.ml[18,632+39]..src/rewriter.ml[18,632+57])
                                                      Texp_tuple
                                                      [
                                                        expression (src/rewriter.ml[18,632+40]..src/rewriter.ml[18,632+44])
                                                          Texp_variant "Sig"
                                                          None
                                                        expression (src/rewriter.ml[18,632+46]..src/rewriter.ml[18,632+53])
                                                          Texp_variant "String"
                                                          None
                                                        expression (src/rewriter.ml[18,632+55]..src/rewriter.ml[18,632+56])
                                                          Texp_ident "s/126"
                                                      ]
                                                    expression (src/rewriter.ml[18,632+61]..src/rewriter.ml[18,632+68])
                                                      Texp_apply
                                                      expression (src/rewriter.ml[18,632+61]..src/rewriter.ml[18,632+62])
                                                        Texp_ident "Stdlib!.!"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/rewriter.ml[18,632+62]..src/rewriter.ml[18,632+68])
                                                            Texp_ident "inputs/80"
                                                      ]
                                                  ]
                                            ]
                                      ]
                                  ]
                                expression (src/rewriter.ml[19,703+4]..src/rewriter.ml[19,703+38])
                                  Texp_constant Const_string("<str> Parse <str> as a signature",None)
                              ]
                            expression (src/rewriter.ml[21,744+4]..src/rewriter.ml[44,1715+3]) ghost
                              Texp_construct "::"
                              [
                                expression (src/rewriter.ml[21,744+4]..src/rewriter.ml[22,817+68])
                                  Texp_tuple
                                  [
                                    expression (src/rewriter.ml[21,744+4]..src/rewriter.ml[21,744+11])
                                      Texp_constant Const_string("-impl",None)
                                    expression (src/rewriter.ml[21,744+13]..src/rewriter.ml[21,744+71])
                                      Texp_construct "String"
                                      [
                                        expression (src/rewriter.ml[21,744+20]..src/rewriter.ml[21,744+71])
                                          Texp_function
                                          Nolabel
                                          [
                                            <case>
                                              pattern (src/rewriter.ml[21,744+25]..src/rewriter.ml[21,744+26])
                                                Tpat_var "s/127"
                                              expression (src/rewriter.ml[21,744+30]..src/rewriter.ml[21,744+70])
                                                Texp_apply
                                                expression (src/rewriter.ml[21,744+37]..src/rewriter.ml[21,744+39])
                                                  Texp_ident "Stdlib!.:="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/rewriter.ml[21,744+30]..src/rewriter.ml[21,744+36])
                                                      Texp_ident "inputs/80"
                                                  <arg>
                                                    Nolabel
                                                    expression (src/rewriter.ml[21,744+40]..src/rewriter.ml[21,744+70])
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/rewriter.ml[21,744+40]..src/rewriter.ml[21,744+59])
                                                          Texp_tuple
                                                          [
                                                            expression (src/rewriter.ml[21,744+41]..src/rewriter.ml[21,744+48])
                                                              Texp_variant "Struct"
                                                              None
                                                            expression (src/rewriter.ml[21,744+50]..src/rewriter.ml[21,744+55])
                                                              Texp_variant "Path"
                                                              None
                                                            expression (src/rewriter.ml[21,744+57]..src/rewriter.ml[21,744+58])
                                                              Texp_ident "s/127"
                                                          ]
                                                        expression (src/rewriter.ml[21,744+63]..src/rewriter.ml[21,744+70])
                                                          Texp_apply
                                                          expression (src/rewriter.ml[21,744+63]..src/rewriter.ml[21,744+64])
                                                            Texp_ident "Stdlib!.!"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/rewriter.ml[21,744+64]..src/rewriter.ml[21,744+70])
                                                                Texp_ident "inputs/80"
                                                          ]
                                                      ]
                                                ]
                                          ]
                                      ]
                                    expression (src/rewriter.ml[22,817+4]..src/rewriter.ml[22,817+68])
                                      Texp_constant Const_string("<file> Parse <file> as an implementation (specify - for stdin)",None)
                                  ]
                                expression (src/rewriter.ml[24,888+4]..src/rewriter.ml[44,1715+3]) ghost
                                  Texp_construct "::"
                                  [
                                    expression (src/rewriter.ml[24,888+4]..src/rewriter.ml[25,958+63])
                                      Texp_tuple
                                      [
                                        expression (src/rewriter.ml[24,888+4]..src/rewriter.ml[24,888+11])
                                          Texp_constant Const_string("-intf",None)
                                        expression (src/rewriter.ml[24,888+13]..src/rewriter.ml[24,888+68])
                                          Texp_construct "String"
                                          [
                                            expression (src/rewriter.ml[24,888+20]..src/rewriter.ml[24,888+68])
                                              Texp_function
                                              Nolabel
                                              [
                                                <case>
                                                  pattern (src/rewriter.ml[24,888+25]..src/rewriter.ml[24,888+26])
                                                    Tpat_var "s/128"
                                                  expression (src/rewriter.ml[24,888+30]..src/rewriter.ml[24,888+67])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[24,888+37]..src/rewriter.ml[24,888+39])
                                                      Texp_ident "Stdlib!.:="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[24,888+30]..src/rewriter.ml[24,888+36])
                                                          Texp_ident "inputs/80"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[24,888+40]..src/rewriter.ml[24,888+67])
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/rewriter.ml[24,888+40]..src/rewriter.ml[24,888+56])
                                                              Texp_tuple
                                                              [
                                                                expression (src/rewriter.ml[24,888+41]..src/rewriter.ml[24,888+45])
                                                                  Texp_variant "Sig"
                                                                  None
                                                                expression (src/rewriter.ml[24,888+47]..src/rewriter.ml[24,888+52])
                                                                  Texp_variant "Path"
                                                                  None
                                                                expression (src/rewriter.ml[24,888+54]..src/rewriter.ml[24,888+55])
                                                                  Texp_ident "s/128"
                                                              ]
                                                            expression (src/rewriter.ml[24,888+60]..src/rewriter.ml[24,888+67])
                                                              Texp_apply
                                                              expression (src/rewriter.ml[24,888+60]..src/rewriter.ml[24,888+61])
                                                                Texp_ident "Stdlib!.!"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/rewriter.ml[24,888+61]..src/rewriter.ml[24,888+67])
                                                                    Texp_ident "inputs/80"
                                                              ]
                                                          ]
                                                    ]
                                              ]
                                          ]
                                        expression (src/rewriter.ml[25,958+4]..src/rewriter.ml[25,958+63])
                                          Texp_constant Const_string("<file> Parse <file> as an interface (specify - for stdin)",None)
                                      ]
                                    expression (src/rewriter.ml[27,1024+4]..src/rewriter.ml[44,1715+3]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (src/rewriter.ml[27,1024+4]..src/rewriter.ml[28,1058+57])
                                          Texp_tuple
                                          [
                                            expression (src/rewriter.ml[27,1024+4]..src/rewriter.ml[27,1024+8])
                                              Texp_constant Const_string("-o",None)
                                            expression (src/rewriter.ml[27,1024+10]..src/rewriter.ml[27,1024+32])
                                              Texp_construct "Set_string"
                                              [
                                                expression (src/rewriter.ml[27,1024+21]..src/rewriter.ml[27,1024+32])
                                                  Texp_ident "output_file/81"
                                              ]
                                            expression (src/rewriter.ml[28,1058+4]..src/rewriter.ml[28,1058+57])
                                              Texp_constant Const_string("<file> Write result into <file> (stdout by default)",None)
                                          ]
                                        expression (src/rewriter.ml[30,1118+4]..src/rewriter.ml[44,1715+3]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (src/rewriter.ml[30,1118+4]..src/rewriter.ml[31,1158+54])
                                              Texp_tuple
                                              [
                                                expression (src/rewriter.ml[30,1118+4]..src/rewriter.ml[30,1118+16])
                                                  Texp_constant Const_string("-tool-name",None)
                                                expression (src/rewriter.ml[30,1118+18]..src/rewriter.ml[30,1118+38])
                                                  Texp_construct "Set_string"
                                                  [
                                                    expression (src/rewriter.ml[30,1118+29]..src/rewriter.ml[30,1118+38])
                                                      Texp_ident "tool_name/82"
                                                  ]
                                                expression (src/rewriter.ml[31,1158+4]..src/rewriter.ml[31,1158+54])
                                                  Texp_constant Const_string("<str> Set tool name to <str> (ocamlc by default)",None)
                                              ]
                                            expression (src/rewriter.ml[33,1215+4]..src/rewriter.ml[44,1715+3]) ghost
                                              Texp_construct "::"
                                              [
                                                expression (src/rewriter.ml[33,1215+4]..src/rewriter.ml[34,1295+56])
                                                  Texp_tuple
                                                  [
                                                    expression (src/rewriter.ml[33,1215+4]..src/rewriter.ml[33,1215+8])
                                                      Texp_constant Const_string("-I",None)
                                                    expression (src/rewriter.ml[33,1215+10]..src/rewriter.ml[33,1215+78])
                                                      Texp_construct "String"
                                                      [
                                                        expression (src/rewriter.ml[33,1215+17]..src/rewriter.ml[33,1215+78])
                                                          Texp_function
                                                          Nolabel
                                                          [
                                                            <case>
                                                              pattern (src/rewriter.ml[33,1215+22]..src/rewriter.ml[33,1215+23])
                                                                Tpat_var "s/129"
                                                              expression (src/rewriter.ml[33,1215+27]..src/rewriter.ml[33,1215+77])
                                                                Texp_apply
                                                                expression (src/rewriter.ml[33,1215+48]..src/rewriter.ml[33,1215+50])
                                                                  Texp_ident "Stdlib!.:="
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/rewriter.ml[33,1215+27]..src/rewriter.ml[33,1215+47])
                                                                      Texp_ident "Clflags!.include_dirs"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (src/rewriter.ml[33,1215+51]..src/rewriter.ml[33,1215+77])
                                                                      Texp_construct "::"
                                                                      [
                                                                        expression (src/rewriter.ml[33,1215+51]..src/rewriter.ml[33,1215+52])
                                                                          Texp_ident "s/129"
                                                                        expression (src/rewriter.ml[33,1215+56]..src/rewriter.ml[33,1215+77])
                                                                          Texp_apply
                                                                          expression (src/rewriter.ml[33,1215+56]..src/rewriter.ml[33,1215+57])
                                                                            Texp_ident "Stdlib!.!"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/rewriter.ml[33,1215+57]..src/rewriter.ml[33,1215+77])
                                                                                Texp_ident "Clflags!.include_dirs"
                                                                          ]
                                                                      ]
                                                                ]
                                                          ]
                                                      ]
                                                    expression (src/rewriter.ml[34,1295+4]..src/rewriter.ml[34,1295+56])
                                                      Texp_constant Const_string("<dir> Add <dir> to the list of include directories",None)
                                                  ]
                                                expression (src/rewriter.ml[36,1354+4]..src/rewriter.ml[44,1715+3]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (src/rewriter.ml[36,1354+4]..src/rewriter.ml[37,1437+57])
                                                      Texp_tuple
                                                      [
                                                        expression (src/rewriter.ml[36,1354+4]..src/rewriter.ml[36,1354+11])
                                                          Texp_constant Const_string("-open",None)
                                                        expression (src/rewriter.ml[36,1354+13]..src/rewriter.ml[36,1354+81])
                                                          Texp_construct "String"
                                                          [
                                                            expression (src/rewriter.ml[36,1354+20]..src/rewriter.ml[36,1354+81])
                                                              Texp_function
                                                              Nolabel
                                                              [
                                                                <case>
                                                                  pattern (src/rewriter.ml[36,1354+25]..src/rewriter.ml[36,1354+26])
                                                                    Tpat_var "s/130"
                                                                  expression (src/rewriter.ml[36,1354+30]..src/rewriter.ml[36,1354+80])
                                                                    Texp_apply
                                                                    expression (src/rewriter.ml[36,1354+51]..src/rewriter.ml[36,1354+53])
                                                                      Texp_ident "Stdlib!.:="
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/rewriter.ml[36,1354+30]..src/rewriter.ml[36,1354+50])
                                                                          Texp_ident "Clflags!.open_modules"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (src/rewriter.ml[36,1354+54]..src/rewriter.ml[36,1354+80])
                                                                          Texp_construct "::"
                                                                          [
                                                                            expression (src/rewriter.ml[36,1354+54]..src/rewriter.ml[36,1354+55])
                                                                              Texp_ident "s/130"
                                                                            expression (src/rewriter.ml[36,1354+59]..src/rewriter.ml[36,1354+80])
                                                                              Texp_apply
                                                                              expression (src/rewriter.ml[36,1354+59]..src/rewriter.ml[36,1354+60])
                                                                                Texp_ident "Stdlib!.!"
                                                                              [
                                                                                <arg>
                                                                                  Nolabel
                                                                                  expression (src/rewriter.ml[36,1354+60]..src/rewriter.ml[36,1354+80])
                                                                                    Texp_ident "Clflags!.open_modules"
                                                                              ]
                                                                          ]
                                                                    ]
                                                              ]
                                                          ]
                                                        expression (src/rewriter.ml[37,1437+4]..src/rewriter.ml[37,1437+57])
                                                          Texp_constant Const_string("<module> Add <module> to the list of opened modules",None)
                                                      ]
                                                    expression (src/rewriter.ml[39,1497+4]..src/rewriter.ml[44,1715+3]) ghost
                                                      Texp_construct "::"
                                                      [
                                                        expression (src/rewriter.ml[39,1497+4]..src/rewriter.ml[40,1563+68])
                                                          Texp_tuple
                                                          [
                                                            expression (src/rewriter.ml[39,1497+4]..src/rewriter.ml[39,1497+15])
                                                              Texp_constant Const_string("-for-pack",None)
                                                            expression (src/rewriter.ml[39,1497+17]..src/rewriter.ml[39,1497+64])
                                                              Texp_construct "String"
                                                              [
                                                                expression (src/rewriter.ml[39,1497+24]..src/rewriter.ml[39,1497+64])
                                                                  Texp_function
                                                                  Nolabel
                                                                  [
                                                                    <case>
                                                                      pattern (src/rewriter.ml[39,1497+29]..src/rewriter.ml[39,1497+30])
                                                                        Tpat_var "s/131"
                                                                      expression (src/rewriter.ml[39,1497+34]..src/rewriter.ml[39,1497+63])
                                                                        Texp_apply
                                                                        expression (src/rewriter.ml[39,1497+54]..src/rewriter.ml[39,1497+56])
                                                                          Texp_ident "Stdlib!.:="
                                                                        [
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/rewriter.ml[39,1497+34]..src/rewriter.ml[39,1497+53])
                                                                              Texp_ident "Clflags!.for_package"
                                                                          <arg>
                                                                            Nolabel
                                                                            expression (src/rewriter.ml[39,1497+57]..src/rewriter.ml[39,1497+63])
                                                                              Texp_construct "Some"
                                                                              [
                                                                                expression (src/rewriter.ml[39,1497+62]..src/rewriter.ml[39,1497+63])
                                                                                  Texp_ident "s/131"
                                                                              ]
                                                                        ]
                                                                  ]
                                                              ]
                                                            expression (src/rewriter.ml[40,1563+4]..src/rewriter.ml[40,1563+68])
                                                              Texp_constant Const_string("<ident> Preprocess code as if it will be packed inside <ident>",None)
                                                          ]
                                                        expression (src/rewriter.ml[42,1634+4]..src/rewriter.ml[44,1715+3]) ghost
                                                          Texp_construct "::"
                                                          [
                                                            expression (src/rewriter.ml[42,1634+4]..src/rewriter.ml[43,1663+50])
                                                              Texp_tuple
                                                              [
                                                                expression (src/rewriter.ml[42,1634+4]..src/rewriter.ml[42,1634+8])
                                                                  Texp_constant Const_string("-g",None)
                                                                expression (src/rewriter.ml[42,1634+10]..src/rewriter.ml[42,1634+27])
                                                                  Texp_construct "Set"
                                                                  [
                                                                    expression (src/rewriter.ml[42,1634+14]..src/rewriter.ml[42,1634+27])
                                                                      Texp_ident "Clflags!.debug"
                                                                  ]
                                                                expression (src/rewriter.ml[43,1663+4]..src/rewriter.ml[43,1663+50])
                                                                  Texp_constant Const_string(" Request debug information from preprocessor",None)
                                                              ]
                                                            expression (src/rewriter.ml[44,1715+2]..src/rewriter.ml[44,1715+3]) ghost
                                                              Texp_construct "[]"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                  ]
            ]
    ]
  structure_item (src/rewriter.ml[46,1720+0]..src/rewriter.ml[49,1818+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[46,1720+4]..src/rewriter.ml[46,1720+12])
          Tpat_var "anon_arg/132"
        expression (src/rewriter.ml[46,1720+13]..src/rewriter.ml[49,1818+50]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/rewriter.ml[46,1720+13]..src/rewriter.ml[46,1720+14])
                Tpat_var "s/134"
              expression (src/rewriter.ml[47,1737+2]..src/rewriter.ml[49,1818+50])
                Texp_match
                expression (src/rewriter.ml[47,1737+8]..src/rewriter.ml[47,1737+24])
                  Texp_apply
                  expression (src/rewriter.ml[47,1737+8]..src/rewriter.ml[47,1737+9])
                    Texp_ident "Stdlib!.!"
                  [
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[47,1737+9]..src/rewriter.ml[47,1737+24])
                        Texp_ident "Clflags!.all_ppx"
                  ]
                [
                  <case>
                    pattern (src/rewriter.ml[48,1767+4]..src/rewriter.ml[48,1767+6])
                      Tpat_construct "[]"
                      []
                    expression (src/rewriter.ml[48,1767+10]..src/rewriter.ml[48,1767+50])
                      Texp_apply
                      expression (src/rewriter.ml[48,1767+26]..src/rewriter.ml[48,1767+28])
                        Texp_ident "Stdlib!.:="
                      [
                        <arg>
                          Nolabel
                          expression (src/rewriter.ml[48,1767+10]..src/rewriter.ml[48,1767+25])
                            Texp_ident "Clflags!.all_ppx"
                        <arg>
                          Nolabel
                          expression (src/rewriter.ml[48,1767+29]..src/rewriter.ml[48,1767+50])
                            Texp_construct "::"
                            [
                              expression (src/rewriter.ml[48,1767+29]..src/rewriter.ml[48,1767+30])
                                Texp_ident "s/134"
                              expression (src/rewriter.ml[48,1767+34]..src/rewriter.ml[48,1767+50])
                                Texp_apply
                                expression (src/rewriter.ml[48,1767+34]..src/rewriter.ml[48,1767+35])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/rewriter.ml[48,1767+35]..src/rewriter.ml[48,1767+50])
                                      Texp_ident "Clflags!.all_ppx"
                                ]
                            ]
                      ]
                  <case>
                    pattern (src/rewriter.ml[49,1818+4]..src/rewriter.ml[49,1818+5])
                      Tpat_any
                    expression (src/rewriter.ml[49,1818+10]..src/rewriter.ml[49,1818+50])
                      Texp_apply
                      expression (src/rewriter.ml[49,1818+17]..src/rewriter.ml[49,1818+19])
                        Texp_ident "Stdlib!.:="
                      [
                        <arg>
                          Nolabel
                          expression (src/rewriter.ml[49,1818+10]..src/rewriter.ml[49,1818+16])
                            Texp_ident "inputs/80"
                        <arg>
                          Nolabel
                          expression (src/rewriter.ml[49,1818+20]..src/rewriter.ml[49,1818+50])
                            Texp_construct "::"
                            [
                              expression (src/rewriter.ml[49,1818+20]..src/rewriter.ml[49,1818+39])
                                Texp_tuple
                                [
                                  expression (src/rewriter.ml[49,1818+21]..src/rewriter.ml[49,1818+28])
                                    Texp_variant "Struct"
                                    None
                                  expression (src/rewriter.ml[49,1818+30]..src/rewriter.ml[49,1818+35])
                                    Texp_variant "Path"
                                    None
                                  expression (src/rewriter.ml[49,1818+37]..src/rewriter.ml[49,1818+38])
                                    Texp_ident "s/134"
                                ]
                              expression (src/rewriter.ml[49,1818+43]..src/rewriter.ml[49,1818+50])
                                Texp_apply
                                expression (src/rewriter.ml[49,1818+43]..src/rewriter.ml[49,1818+44])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/rewriter.ml[49,1818+44]..src/rewriter.ml[49,1818+50])
                                      Texp_ident "inputs/80"
                                ]
                            ]
                      ]
                ]
          ]
    ]
  structure_item (src/rewriter.ml[51,1870+0]..src/rewriter.ml[55,2027+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[51,1870+4]..src/rewriter.ml[51,1870+13])
          Tpat_var "usage_msg/135"
        expression (src/rewriter.ml[52,1886+2]..src/rewriter.ml[55,2027+16])
          Texp_apply
          expression (src/rewriter.ml[52,1886+2]..src/rewriter.ml[52,1886+16])
            Texp_ident "Stdlib!.Printf.sprintf"
          [
            <arg>
              Nolabel
              expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56])
                Texp_construct "CamlinternalFormatBasics.Format"
                [
                  expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                    Texp_construct "CamlinternalFormatBasics.String_literal"
                    [
                      expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                        Texp_constant Const_string("Usage: ",None)
                      expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                        Texp_construct "CamlinternalFormatBasics.String"
                        [
                          expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                            Texp_construct "CamlinternalFormatBasics.No_padding"
                            []
                          expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                                Texp_constant Const_string(" [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin.",None)
                              expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                []
                            ]
                        ]
                    ]
                  expression (src/rewriter.ml[53,1903+4]..src/rewriter.ml[54,1970+56]) ghost
                    Texp_constant Const_string("Usage: %s [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin.",None)
                ]
            <arg>
              Nolabel
              expression (src/rewriter.ml[55,2027+4]..src/rewriter.ml[55,2027+16])
                Texp_apply
                expression (src/rewriter.ml[55,2027+4]..src/rewriter.ml[55,2027+16]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/rewriter.ml[55,2027+4]..src/rewriter.ml[55,2027+12])
                      Texp_ident "Stdlib!.Sys.argv"
                  <arg>
                    Nolabel
                    expression (src/rewriter.ml[55,2027+14]..src/rewriter.ml[55,2027+15])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (src/rewriter.ml[57,2045+0]..src/rewriter.ml[61,2131+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[57,2045+4]..src/rewriter.ml[57,2045+13])
          Tpat_var "wrap_open/295"
        expression (src/rewriter.ml[57,2045+14]..src/rewriter.ml[61,2131+10]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/rewriter.ml[57,2045+14]..src/rewriter.ml[57,2045+16])
                Tpat_var "fn/297"
              expression (src/rewriter.ml[57,2045+17]..src/rewriter.ml[61,2131+10]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/rewriter.ml[57,2045+17]..src/rewriter.ml[57,2045+21])
                      Tpat_var "file/298"
                    expression (src/rewriter.ml[58,2069+2]..src/rewriter.ml[61,2131+10])
                      Texp_try
                      expression (src/rewriter.ml[58,2069+7]..src/rewriter.ml[58,2069+14])
                        Texp_apply
                        expression (src/rewriter.ml[58,2069+7]..src/rewriter.ml[58,2069+9])
                          Texp_ident "fn/297"
                        [
                          <arg>
                            Nolabel
                            expression (src/rewriter.ml[58,2069+10]..src/rewriter.ml[58,2069+14])
                              Texp_ident "file/298"
                        ]
                      [
                        <case>
                          pattern (src/rewriter.ml[59,2084+7]..src/rewriter.ml[59,2084+20])
                            Tpat_construct "Sys_error"
                            [
                              pattern (src/rewriter.ml[59,2084+17]..src/rewriter.ml[59,2084+20])
                                Tpat_var "msg/299"
                            ]
                          expression (src/rewriter.ml[60,2108+4]..src/rewriter.ml[61,2131+10])
                            Texp_sequence
                            expression (src/rewriter.ml[60,2108+4]..src/rewriter.ml[60,2108+21])
                              Texp_apply
                              expression (src/rewriter.ml[60,2108+4]..src/rewriter.ml[60,2108+17])
                                Texp_ident "Stdlib!.prerr_endline"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[60,2108+18]..src/rewriter.ml[60,2108+21])
                                    Texp_ident "msg/299"
                              ]
                            expression (src/rewriter.ml[61,2131+4]..src/rewriter.ml[61,2131+10])
                              Texp_apply
                              expression (src/rewriter.ml[61,2131+4]..src/rewriter.ml[61,2131+8])
                                Texp_ident "Stdlib!.exit"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[61,2131+9]..src/rewriter.ml[61,2131+10])
                                    Texp_constant Const_int 1
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/rewriter.ml[63,2143+0]..src/rewriter.ml[73,2455+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[63,2143+4]..src/rewriter.ml[63,2143+14])
          Tpat_var "make_lexer/300"
        expression (src/rewriter.ml[63,2143+15]..src/rewriter.ml[73,2455+52]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/rewriter.ml[63,2143+15]..src/rewriter.ml[63,2143+26])
                Tpat_var "source_kind/302"
              expression (src/rewriter.ml[63,2143+27]..src/rewriter.ml[73,2455+52]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/rewriter.ml[63,2143+27]..src/rewriter.ml[63,2143+33])
                      Tpat_var "source/303"
                    expression (src/rewriter.ml[64,2179+2]..src/rewriter.ml[73,2455+52])
                      Texp_match
                      expression (src/rewriter.ml[64,2179+8]..src/rewriter.ml[64,2179+27])
                        Texp_tuple
                        [
                          expression (src/rewriter.ml[64,2179+8]..src/rewriter.ml[64,2179+19])
                            Texp_ident "source_kind/302"
                          expression (src/rewriter.ml[64,2179+21]..src/rewriter.ml[64,2179+27])
                            Texp_ident "source/303"
                        ]
                      [
                        <case>
                          pattern (src/rewriter.ml[65,2212+4]..src/rewriter.ml[65,2212+14])
                            Tpat_tuple
                            [
                              pattern (src/rewriter.ml[65,2212+4]..src/rewriter.ml[65,2212+11])
                                Tpat_variant "String"
                                None
                              pattern (src/rewriter.ml[65,2212+13]..src/rewriter.ml[65,2212+14])
                                Tpat_any
                            ]
                          expression (src/rewriter.ml[66,2230+6]..src/rewriter.ml[67,2275+31])
                            Texp_sequence
                            expression (src/rewriter.ml[66,2230+6]..src/rewriter.ml[66,2230+43])
                              Texp_apply
                              expression (src/rewriter.ml[66,2230+26]..src/rewriter.ml[66,2230+28])
                                Texp_ident "Stdlib!.:="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[66,2230+6]..src/rewriter.ml[66,2230+25])
                                    Texp_ident "Location!.input_name"
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[66,2230+29]..src/rewriter.ml[66,2230+43])
                                    Texp_constant Const_string("//toplevel//",None)
                              ]
                            expression (src/rewriter.ml[67,2275+6]..src/rewriter.ml[67,2275+31])
                              Texp_apply
                              expression (src/rewriter.ml[67,2275+6]..src/rewriter.ml[67,2275+24])
                                Texp_ident "Stdlib!.Lexing.from_string"
                              [
                                <arg>
                                  Optional "with_positions"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[67,2275+25]..src/rewriter.ml[67,2275+31])
                                    Texp_ident "source/303"
                              ]
                        <case>
                          pattern (src/rewriter.ml[68,2307+4]..src/rewriter.ml[68,2307+14])
                            Tpat_tuple
                            [
                              pattern (src/rewriter.ml[68,2307+4]..src/rewriter.ml[68,2307+9])
                                Tpat_variant "Path"
                                None
                              pattern (src/rewriter.ml[68,2307+11]..src/rewriter.ml[68,2307+14])
                                Tpat_constant Const_string("-",None)
                            ]
                          expression (src/rewriter.ml[69,2325+6]..src/rewriter.ml[70,2370+31])
                            Texp_sequence
                            expression (src/rewriter.ml[69,2325+6]..src/rewriter.ml[69,2325+43])
                              Texp_apply
                              expression (src/rewriter.ml[69,2325+26]..src/rewriter.ml[69,2325+28])
                                Texp_ident "Stdlib!.:="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[69,2325+6]..src/rewriter.ml[69,2325+25])
                                    Texp_ident "Location!.input_name"
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[69,2325+29]..src/rewriter.ml[69,2325+43])
                                    Texp_constant Const_string("//toplevel//",None)
                              ]
                            expression (src/rewriter.ml[70,2370+6]..src/rewriter.ml[70,2370+31])
                              Texp_apply
                              expression (src/rewriter.ml[70,2370+6]..src/rewriter.ml[70,2370+25])
                                Texp_ident "Stdlib!.Lexing.from_channel"
                              [
                                <arg>
                                  Optional "with_positions"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[70,2370+26]..src/rewriter.ml[70,2370+31])
                                    Texp_ident "Stdlib!.stdin"
                              ]
                        <case>
                          pattern (src/rewriter.ml[71,2402+4]..src/rewriter.ml[71,2402+12])
                            Tpat_tuple
                            [
                              pattern (src/rewriter.ml[71,2402+4]..src/rewriter.ml[71,2402+9])
                                Tpat_variant "Path"
                                None
                              pattern (src/rewriter.ml[71,2402+11]..src/rewriter.ml[71,2402+12])
                                Tpat_any
                            ]
                          expression (src/rewriter.ml[72,2418+6]..src/rewriter.ml[73,2455+52])
                            Texp_sequence
                            expression (src/rewriter.ml[72,2418+6]..src/rewriter.ml[72,2418+35])
                              Texp_apply
                              expression (src/rewriter.ml[72,2418+26]..src/rewriter.ml[72,2418+28])
                                Texp_ident "Stdlib!.:="
                              [
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[72,2418+6]..src/rewriter.ml[72,2418+25])
                                    Texp_ident "Location!.input_name"
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[72,2418+29]..src/rewriter.ml[72,2418+35])
                                    Texp_ident "source/303"
                              ]
                            expression (src/rewriter.ml[73,2455+6]..src/rewriter.ml[73,2455+52])
                              Texp_apply
                              expression (src/rewriter.ml[73,2455+6]..src/rewriter.ml[73,2455+25])
                                Texp_ident "Stdlib!.Lexing.from_channel"
                              [
                                <arg>
                                  Optional "with_positions"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (src/rewriter.ml[73,2455+26]..src/rewriter.ml[73,2455+52])
                                    Texp_apply
                                    expression (src/rewriter.ml[73,2455+27]..src/rewriter.ml[73,2455+36])
                                      Texp_ident "wrap_open/295"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/rewriter.ml[73,2455+37]..src/rewriter.ml[73,2455+44])
                                          Texp_ident "Stdlib!.open_in"
                                      <arg>
                                        Nolabel
                                        expression (src/rewriter.ml[73,2455+45]..src/rewriter.ml[73,2455+51])
                                          Texp_ident "source/303"
                                    ]
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/rewriter.ml[75,2509+0]..src/rewriter.ml[106,3644+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/rewriter.ml[75,2509+4]..src/rewriter.ml[75,2509+6])
          Tpat_construct "()"
          []
        expression (src/rewriter.ml[76,2518+2]..src/rewriter.ml[106,3644+10])
          Texp_sequence
          expression (src/rewriter.ml[76,2518+2]..src/rewriter.ml[76,2518+35])
            Texp_apply
            expression (src/rewriter.ml[76,2518+2]..src/rewriter.ml[76,2518+11])
              Texp_ident "Stdlib!.Arg.parse"
            [
              <arg>
                Nolabel
                expression (src/rewriter.ml[76,2518+12]..src/rewriter.ml[76,2518+16])
                  Texp_ident "args/83"
              <arg>
                Nolabel
                expression (src/rewriter.ml[76,2518+17]..src/rewriter.ml[76,2518+25])
                  Texp_ident "anon_arg/132"
              <arg>
                Nolabel
                expression (src/rewriter.ml[76,2518+26]..src/rewriter.ml[76,2518+35])
                  Texp_ident "usage_msg/135"
            ]
          expression (src/rewriter.ml[77,2555+2]..src/rewriter.ml[106,3644+10])
            Texp_sequence
            expression (src/rewriter.ml[77,2555+2]..src/rewriter.ml[80,2634+5])
              Texp_ifthenelse
              expression (src/rewriter.ml[77,2555+5]..src/rewriter.ml[77,2555+26])
                Texp_apply
                expression (src/rewriter.ml[77,2555+22]..src/rewriter.ml[77,2555+23])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (src/rewriter.ml[77,2555+5]..src/rewriter.ml[77,2555+21])
                      Texp_apply
                      expression (src/rewriter.ml[77,2555+5]..src/rewriter.ml[77,2555+6])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (src/rewriter.ml[77,2555+6]..src/rewriter.ml[77,2555+21])
                            Texp_ident "Clflags!.all_ppx"
                      ]
                  <arg>
                    Nolabel
                    expression (src/rewriter.ml[77,2555+24]..src/rewriter.ml[77,2555+26])
                      Texp_construct "[]"
                      []
                ]
              expression (src/rewriter.ml[77,2555+32]..src/rewriter.ml[80,2634+5])
                Texp_sequence
                expression (src/rewriter.ml[78,2593+4]..src/rewriter.ml[78,2593+28])
                  Texp_apply
                  expression (src/rewriter.ml[78,2593+4]..src/rewriter.ml[78,2593+13])
                    Texp_ident "Stdlib!.Arg.usage"
                  [
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[78,2593+14]..src/rewriter.ml[78,2593+18])
                        Texp_ident "args/83"
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[78,2593+19]..src/rewriter.ml[78,2593+28])
                        Texp_ident "usage_msg/135"
                  ]
                expression (src/rewriter.ml[79,2623+4]..src/rewriter.ml[79,2623+10])
                  Texp_apply
                  expression (src/rewriter.ml[79,2623+4]..src/rewriter.ml[79,2623+8])
                    Texp_ident "Stdlib!.exit"
                  [
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[79,2623+9]..src/rewriter.ml[79,2623+10])
                        Texp_constant Const_int 1
                  ]
              None
            expression (src/rewriter.ml[81,2641+2]..src/rewriter.ml[106,3644+10])
              Texp_sequence
              expression (src/rewriter.ml[81,2641+2]..src/rewriter.ml[82,2664+35])
                Texp_ifthenelse
                expression (src/rewriter.ml[81,2641+5]..src/rewriter.ml[81,2641+17])
                  Texp_apply
                  expression (src/rewriter.ml[81,2641+13]..src/rewriter.ml[81,2641+14])
                    Texp_ident "Stdlib!.="
                  [
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[81,2641+5]..src/rewriter.ml[81,2641+12])
                        Texp_apply
                        expression (src/rewriter.ml[81,2641+5]..src/rewriter.ml[81,2641+6])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/rewriter.ml[81,2641+6]..src/rewriter.ml[81,2641+12])
                              Texp_ident "inputs/80"
                        ]
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[81,2641+15]..src/rewriter.ml[81,2641+17])
                        Texp_construct "[]"
                        []
                  ]
                expression (src/rewriter.ml[82,2664+4]..src/rewriter.ml[82,2664+35])
                  Texp_apply
                  expression (src/rewriter.ml[82,2664+11]..src/rewriter.ml[82,2664+13])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[82,2664+4]..src/rewriter.ml[82,2664+10])
                        Texp_ident "inputs/80"
                    <arg>
                      Nolabel
                      expression (src/rewriter.ml[82,2664+14]..src/rewriter.ml[82,2664+35])
                        Texp_construct "::"
                        [
                          expression (src/rewriter.ml[82,2664+15]..src/rewriter.ml[82,2664+34])
                            Texp_tuple
                            [
                              expression (src/rewriter.ml[82,2664+15]..src/rewriter.ml[82,2664+22])
                                Texp_variant "Struct"
                                None
                              expression (src/rewriter.ml[82,2664+24]..src/rewriter.ml[82,2664+29])
                                Texp_variant "Path"
                                None
                              expression (src/rewriter.ml[82,2664+31]..src/rewriter.ml[82,2664+34])
                                Texp_constant Const_string("-",None)
                            ]
                          expression (src/rewriter.ml[82,2664+34]..src/rewriter.ml[82,2664+35]) ghost
                            Texp_construct "[]"
                            []
                        ]
                  ]
                None
              expression (src/rewriter.ml[83,2701+2]..src/rewriter.ml[106,3644+10])
                Texp_let Nonrec
                [
                  <def>
                    pattern (src/rewriter.ml[83,2701+6]..src/rewriter.ml[83,2701+9])
                      Tpat_var "fmt/341"
                    expression (src/rewriter.ml[84,2713+4]..src/rewriter.ml[86,2776+71])
                      Texp_match
                      expression (src/rewriter.ml[84,2713+10]..src/rewriter.ml[84,2713+22])
                        Texp_apply
                        expression (src/rewriter.ml[84,2713+10]..src/rewriter.ml[84,2713+11])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (src/rewriter.ml[84,2713+11]..src/rewriter.ml[84,2713+22])
                              Texp_ident "output_file/81"
                        ]
                      [
                        <case>
                          pattern (src/rewriter.ml[85,2741+6]..src/rewriter.ml[85,2741+9])
                            Tpat_constant Const_string("-",None)
                          expression (src/rewriter.ml[85,2741+14]..src/rewriter.ml[85,2741+34])
                            Texp_ident "Stdlib!.Format.std_formatter"
                        <case>
                          pattern (src/rewriter.ml[86,2776+6]..src/rewriter.ml[86,2776+10])
                            Tpat_var "file/342"
                          expression (src/rewriter.ml[86,2776+14]..src/rewriter.ml[86,2776+71])
                            Texp_apply
                            expression (src/rewriter.ml[86,2776+14]..src/rewriter.ml[86,2776+45])
                              Texp_ident "Stdlib!.Format.formatter_of_out_channel"
                            [
                              <arg>
                                Nolabel
                                expression (src/rewriter.ml[86,2776+46]..src/rewriter.ml[86,2776+71])
                                  Texp_apply
                                  expression (src/rewriter.ml[86,2776+47]..src/rewriter.ml[86,2776+56])
                                    Texp_ident "wrap_open/295"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/rewriter.ml[86,2776+57]..src/rewriter.ml[86,2776+65])
                                        Texp_ident "Stdlib!.open_out"
                                    <arg>
                                      Nolabel
                                      expression (src/rewriter.ml[86,2776+66]..src/rewriter.ml[86,2776+70])
                                        Texp_ident "file/342"
                                  ]
                            ]
                      ]
                ]
                expression (src/rewriter.ml[88,2853+2]..src/rewriter.ml[106,3644+10])
                  Texp_try
                  expression (src/rewriter.ml[89,2859+4]..src/rewriter.ml[103,3530+43])
                    Texp_apply
                    expression (src/rewriter.ml[89,2859+12]..src/rewriter.ml[89,2859+14])
                      Texp_ident "Stdlib!.|>"
                    [
                      <arg>
                        Nolabel
                        expression (src/rewriter.ml[89,2859+4]..src/rewriter.ml[89,2859+11])
                          Texp_apply
                          expression (src/rewriter.ml[89,2859+4]..src/rewriter.ml[89,2859+5])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (src/rewriter.ml[89,2859+5]..src/rewriter.ml[89,2859+11])
                                Texp_ident "inputs/80"
                          ]
                      <arg>
                        Nolabel
                        expression (src/rewriter.ml[89,2859+15]..src/rewriter.ml[103,3530+43])
                          Texp_apply
                          expression (src/rewriter.ml[89,2859+15]..src/rewriter.ml[89,2859+24])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (src/rewriter.ml[89,2859+25]..src/rewriter.ml[103,3530+43])
                                Texp_function
                                Nolabel
                                [
                                  <case>
                                    pattern (src/rewriter.ml[89,2859+30]..src/rewriter.ml[89,2859+61])
                                      Tpat_tuple
                                      [
                                        pattern (src/rewriter.ml[89,2859+31]..src/rewriter.ml[89,2859+39])
                                          Tpat_var "ast_kind/579"
                                        pattern (src/rewriter.ml[89,2859+41]..src/rewriter.ml[89,2859+52])
                                          Tpat_var "source_kind/580"
                                        pattern (src/rewriter.ml[89,2859+54]..src/rewriter.ml[89,2859+60])
                                          Tpat_var "source/581"
                                      ]
                                    expression (src/rewriter.ml[90,2924+8]..src/rewriter.ml[103,3530+42])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (src/rewriter.ml[90,2924+12]..src/rewriter.ml[90,2924+17])
                                            Tpat_var "lexer/582"
                                          expression (src/rewriter.ml[90,2924+20]..src/rewriter.ml[90,2924+49])
                                            Texp_apply
                                            expression (src/rewriter.ml[90,2924+20]..src/rewriter.ml[90,2924+30])
                                              Texp_ident "make_lexer/300"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (src/rewriter.ml[90,2924+31]..src/rewriter.ml[90,2924+42])
                                                  Texp_ident "source_kind/580"
                                              <arg>
                                                Nolabel
                                                expression (src/rewriter.ml[90,2924+43]..src/rewriter.ml[90,2924+49])
                                                  Texp_ident "source/581"
                                            ]
                                      ]
                                      expression (src/rewriter.ml[91,2977+8]..src/rewriter.ml[103,3530+42])
                                        Texp_match
                                        expression (src/rewriter.ml[91,2977+14]..src/rewriter.ml[91,2977+22])
                                          Texp_ident "ast_kind/579"
                                        [
                                          <case>
                                            pattern (src/rewriter.ml[92,3005+10]..src/rewriter.ml[92,3005+17])
                                              Tpat_variant "Struct"
                                              None
                                            expression (src/rewriter.ml[93,3026+12]..src/rewriter.ml[97,3250+42])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/rewriter.ml[93,3026+16]..src/rewriter.ml[93,3026+20])
                                                    Tpat_var "pstr/583"
                                                  expression (src/rewriter.ml[93,3026+23]..src/rewriter.ml[93,3026+49])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[93,3026+23]..src/rewriter.ml[93,3026+43])
                                                      Texp_ident "Parse!.implementation"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[93,3026+44]..src/rewriter.ml[93,3026+49])
                                                          Texp_ident "lexer/582"
                                                    ]
                                              ]
                                              expression (src/rewriter.ml[94,3079+12]..src/rewriter.ml[97,3250+42])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/rewriter.ml[94,3079+16]..src/rewriter.ml[94,3079+20])
                                                      Tpat_var "pstr/656"
                                                    expression (src/rewriter.ml[94,3079+23]..src/rewriter.ml[95,3167+37])
                                                      Texp_apply
                                                      expression (src/rewriter.ml[94,3079+23]..src/rewriter.ml[94,3079+45])
                                                        Texp_ident "Pparse!.apply_rewriters"
                                                      [
                                                        <arg>
                                                          Optional "restore"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Labelled "tool_name"
                                                          expression (src/rewriter.ml[94,3079+77]..src/rewriter.ml[94,3079+87])
                                                            Texp_apply
                                                            expression (src/rewriter.ml[94,3079+77]..src/rewriter.ml[94,3079+78])
                                                              Texp_ident "Stdlib!.!"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/rewriter.ml[94,3079+78]..src/rewriter.ml[94,3079+87])
                                                                  Texp_ident "tool_name/82"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/rewriter.ml[95,3167+16]..src/rewriter.ml[95,3167+32])
                                                            Texp_construct "Pparse.Structure"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (src/rewriter.ml[95,3167+33]..src/rewriter.ml[95,3167+37])
                                                            Texp_ident "pstr/583"
                                                      ]
                                                ]
                                                expression (src/rewriter.ml[96,3208+12]..src/rewriter.ml[97,3250+42])
                                                  Texp_sequence
                                                  expression (src/rewriter.ml[96,3208+12]..src/rewriter.ml[96,3208+40])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[96,3208+12]..src/rewriter.ml[96,3208+31])
                                                      Texp_ident "Pprintast!.structure"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[96,3208+32]..src/rewriter.ml[96,3208+35])
                                                          Texp_ident "fmt/341"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[96,3208+36]..src/rewriter.ml[96,3208+40])
                                                          Texp_ident "pstr/656"
                                                    ]
                                                  expression (src/rewriter.ml[97,3250+12]..src/rewriter.ml[97,3250+42])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[97,3250+12]..src/rewriter.ml[97,3250+35])
                                                      Texp_ident "Stdlib!.Format.pp_print_newline"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[97,3250+36]..src/rewriter.ml[97,3250+39])
                                                          Texp_ident "fmt/341"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[97,3250+40]..src/rewriter.ml[97,3250+42])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                          <case>
                                            pattern (src/rewriter.ml[98,3293+10]..src/rewriter.ml[98,3293+14])
                                              Tpat_variant "Sig"
                                              None
                                            expression (src/rewriter.ml[99,3311+12]..src/rewriter.ml[103,3530+42])
                                              Texp_let Nonrec
                                              [
                                                <def>
                                                  pattern (src/rewriter.ml[99,3311+16]..src/rewriter.ml[99,3311+20])
                                                    Tpat_var "psig/661"
                                                  expression (src/rewriter.ml[99,3311+23]..src/rewriter.ml[99,3311+44])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[99,3311+23]..src/rewriter.ml[99,3311+38])
                                                      Texp_ident "Parse!.interface"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[99,3311+39]..src/rewriter.ml[99,3311+44])
                                                          Texp_ident "lexer/582"
                                                    ]
                                              ]
                                              expression (src/rewriter.ml[100,3359+12]..src/rewriter.ml[103,3530+42])
                                                Texp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (src/rewriter.ml[100,3359+16]..src/rewriter.ml[100,3359+20])
                                                      Tpat_var "psig/662"
                                                    expression (src/rewriter.ml[100,3359+23]..src/rewriter.ml[101,3447+37])
                                                      Texp_apply
                                                      expression (src/rewriter.ml[100,3359+23]..src/rewriter.ml[100,3359+45])
                                                        Texp_ident "Pparse!.apply_rewriters"
                                                      [
                                                        <arg>
                                                          Optional "restore"
                                                          expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                            Texp_construct "None"
                                                            []
                                                        <arg>
                                                          Labelled "tool_name"
                                                          expression (src/rewriter.ml[100,3359+77]..src/rewriter.ml[100,3359+87])
                                                            Texp_apply
                                                            expression (src/rewriter.ml[100,3359+77]..src/rewriter.ml[100,3359+78])
                                                              Texp_ident "Stdlib!.!"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (src/rewriter.ml[100,3359+78]..src/rewriter.ml[100,3359+87])
                                                                  Texp_ident "tool_name/82"
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (src/rewriter.ml[101,3447+16]..src/rewriter.ml[101,3447+32])
                                                            Texp_construct "Pparse.Signature"
                                                            []
                                                        <arg>
                                                          Nolabel
                                                          expression (src/rewriter.ml[101,3447+33]..src/rewriter.ml[101,3447+37])
                                                            Texp_ident "psig/661"
                                                      ]
                                                ]
                                                expression (src/rewriter.ml[102,3488+12]..src/rewriter.ml[103,3530+42])
                                                  Texp_sequence
                                                  expression (src/rewriter.ml[102,3488+12]..src/rewriter.ml[102,3488+40])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[102,3488+12]..src/rewriter.ml[102,3488+31])
                                                      Texp_ident "Pprintast!.signature"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[102,3488+32]..src/rewriter.ml[102,3488+35])
                                                          Texp_ident "fmt/341"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[102,3488+36]..src/rewriter.ml[102,3488+40])
                                                          Texp_ident "psig/662"
                                                    ]
                                                  expression (src/rewriter.ml[103,3530+12]..src/rewriter.ml[103,3530+42])
                                                    Texp_apply
                                                    expression (src/rewriter.ml[103,3530+12]..src/rewriter.ml[103,3530+35])
                                                      Texp_ident "Stdlib!.Format.pp_print_newline"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[103,3530+36]..src/rewriter.ml[103,3530+39])
                                                          Texp_ident "fmt/341"
                                                      <arg>
                                                        Nolabel
                                                        expression (src/rewriter.ml[103,3530+40]..src/rewriter.ml[103,3530+42])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                        ]
                                ]
                          ]
                    ]
                  [
                    <case>
                      pattern (src/rewriter.ml[104,3574+7]..src/rewriter.ml[104,3574+10])
                        Tpat_var "exn/664"
                      expression (src/rewriter.ml[105,3588+4]..src/rewriter.ml[106,3644+10])
                        Texp_sequence
                        expression (src/rewriter.ml[105,3588+4]..src/rewriter.ml[105,3588+54])
                          Texp_apply
                          expression (src/rewriter.ml[105,3588+4]..src/rewriter.ml[105,3588+29])
                            Texp_ident "Location!.report_exception"
                          [
                            <arg>
                              Nolabel
                              expression (src/rewriter.ml[105,3588+30]..src/rewriter.ml[105,3588+50])
                                Texp_ident "Stdlib!.Format.err_formatter"
                            <arg>
                              Nolabel
                              expression (src/rewriter.ml[105,3588+51]..src/rewriter.ml[105,3588+54])
                                Texp_ident "exn/664"
                          ]
                        expression (src/rewriter.ml[106,3644+4]..src/rewriter.ml[106,3644+10])
                          Texp_apply
                          expression (src/rewriter.ml[106,3644+4]..src/rewriter.ml[106,3644+8])
                            Texp_ident "Stdlib!.exit"
                          [
                            <arg>
                              Nolabel
                              expression (src/rewriter.ml[106,3644+9]..src/rewriter.ml[106,3644+10])
                                Texp_constant Const_int 2
                          ]
                  ]
    ]
]

(seq
  (let (inputs/80 = (makemutable 0 0a))
    (setfield_ptr(root-init) 0 (global Rewriter!) inputs/80))
  (let (output_file/81 = (makemutable 0 "-"))
    (setfield_ptr(root-init) 1 (global Rewriter!) output_file/81))
  (let (tool_name/82 = (makemutable 0 "ocamlc"))
    (setfield_ptr(root-init) 2 (global Rewriter!) tool_name/82))
  (let
    (args/83 =
       (apply (field 10 (global Stdlib__arg!)) 0a
         (makeblock 0
           (makeblock 0 "-ppx"
             (makeblock 4
               (function s/119
                 (setfield_ptr 0 (field 33 (global Clflags!))
                   (makeblock 0 s/119 (field 0 (field 33 (global Clflags!)))))))
             "<cmd> Invoke <cmd> as a ppx preprocessor")
           (makeblock 0
             (makeblock 0 "-str"
               (makeblock 4
                 (function s/125
                   (setfield_ptr 0 (field 0 (global Rewriter!))
                     (makeblock 0 (makeblock 0 -976376203a -976970511a s/125)
                       (field 0 (field 0 (global Rewriter!)))))))
               "<str> Parse <str> as a structure")
             (makeblock 0
               (makeblock 0 "-sig"
                 (makeblock 4
                   (function s/126
                     (setfield_ptr 0 (field 0 (global Rewriter!))
                       (makeblock 0 (makeblock 0 4151025a -976970511a s/126)
                         (field 0 (field 0 (global Rewriter!)))))))
                 "<str> Parse <str> as a signature")
               (makeblock 0
                 (makeblock 0 "-impl"
                   (makeblock 4
                     (function s/127
                       (setfield_ptr 0 (field 0 (global Rewriter!))
                         (makeblock 0
                           (makeblock 0 -976376203a 892015045a s/127)
                           (field 0 (field 0 (global Rewriter!)))))))
                   "<file> Parse <file> as an implementation (specify - for stdin)")
                 (makeblock 0
                   (makeblock 0 "-intf"
                     (makeblock 4
                       (function s/128
                         (setfield_ptr 0 (field 0 (global Rewriter!))
                           (makeblock 0
                             (makeblock 0 4151025a 892015045a s/128)
                             (field 0 (field 0 (global Rewriter!)))))))
                     "<file> Parse <file> as an interface (specify - for stdin)")
                   (makeblock 0
                     (makeblock 0 "-o"
                       (makeblock 5 (field 1 (global Rewriter!)))
                       "<file> Write result into <file> (stdout by default)")
                     (makeblock 0
                       (makeblock 0 "-tool-name"
                         (makeblock 5 (field 2 (global Rewriter!)))
                         "<str> Set tool name to <str> (ocamlc by default)")
                       (makeblock 0
                         (makeblock 0 "-I"
                           (makeblock 4
                             (function s/129
                               (setfield_ptr 0 (field 12 (global Clflags!))
                                 (makeblock 0 s/129
                                   (field 0 (field 12 (global Clflags!)))))))
                           "<dir> Add <dir> to the list of include directories")
                         (makeblock 0
                           (makeblock 0 "-open"
                             (makeblock 4
                               (function s/130
                                 (setfield_ptr 0 (field 31 (global Clflags!))
                                   (makeblock 0 s/130
                                     (field 0 (field 31 (global Clflags!)))))))
                             "<module> Add <module> to the list of opened modules")
                           (makeblock 0
                             (makeblock 0 "-for-pack"
                               (makeblock 4
                                 (function s/131
                                   (setfield_ptr 0
                                     (field 59 (global Clflags!))
                                     (makeblock 0 s/131))))
                               "<ident> Preprocess code as if it will be packed inside <ident>")
                             (makeblock 0
                               (makeblock 0 "-g"
                                 (makeblock 2 (field 16 (global Clflags!)))
                                 " Request debug information from preprocessor")
                               0a)))))))))))))
    (setfield_ptr(root-init) 3 (global Rewriter!) args/83))
  (let
    (anon_arg/132 =
       (function s/134
         (let (*match*/971 = (field 0 (field 33 (global Clflags!))))
           (catch
             (if *match*/971 (exit 1)
               (setfield_ptr 0 (field 33 (global Clflags!))
                 (makeblock 0 s/134 (field 0 (field 33 (global Clflags!))))))
            with (1)
             (setfield_ptr 0 (field 0 (global Rewriter!))
               (makeblock 0 (makeblock 0 -976376203a 892015045a s/134)
                 (field 0 (field 0 (global Rewriter!)))))))))
    (setfield_ptr(root-init) 4 (global Rewriter!) anon_arg/132))
  (let
    (usage_msg/135 =
       (apply (field 3 (global Stdlib__printf!))
         [0:
          [11:
           "Usage: "
           [2:
            0a
            [11:
             " [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin."
             0a]]]
          "Usage: %s [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin."]
         (array.get[addr] (caml_sys_argv 0a) 0)))
    (setfield_ptr(root-init) 5 (global Rewriter!) usage_msg/135))
  (let
    (wrap_open/295 =
       (function fn/297 file/298
         (try (apply fn/297 file/298) with exn/1234
           (catch
             (let (tag/1235 =a (field 0 exn/1234))
               (if (== tag/1235 (field 10 (global Stdlib!)))
                 (let (msg/299 =a (field 1 exn/1234))
                   (seq (apply (field 52 (global Stdlib!)) msg/299)
                     (apply (field 98 (global Stdlib!)) 1)))
                 (exit 2)))
            with (2) (reraise exn/1234)))))
    (setfield_ptr(root-init) 6 (global Rewriter!) wrap_open/295))
  (let
    (make_lexer/300 =
       (function source_kind/302 source/303
         (let (*match*/1236 = source_kind/302 *match*/1237 = source/303)
           (if (>= *match*/1236 892015045)
             (catch
               (stringswitch *match*/1237
                case "-":
                 (seq
                   (setfield_ptr 0 (field 11 (global Location!))
                     "//toplevel//")
                   (apply (field 1 (global Stdlib__lexing!)) 0a
                     (field 37 (global Stdlib!))))
                default: (exit 3))
              with (3)
               (seq (setfield_ptr 0 (field 11 (global Location!)) source/303)
                 (apply (field 1 (global Stdlib__lexing!)) 0a
                   (apply (field 6 (global Rewriter!))
                     (field 78 (global Stdlib!)) source/303))))
             (seq
               (setfield_ptr 0 (field 11 (global Location!)) "//toplevel//")
               (apply (field 2 (global Stdlib__lexing!)) 0a source/303))))))
    (setfield_ptr(root-init) 7 (global Rewriter!) make_lexer/300))
  (let
    (*match*/1243 =
       (seq
         (apply (field 0 (global Stdlib__arg!)) (field 3 (global Rewriter!))
           (field 4 (global Rewriter!)) (field 5 (global Rewriter!)))
         (if (== (field 0 (field 33 (global Clflags!))) 0a)
           (seq
             (apply (field 8 (global Stdlib__arg!))
               (field 3 (global Rewriter!)) (field 5 (global Rewriter!)))
             (apply (field 98 (global Stdlib!)) 1))
           0a)
         (if (== (field 0 (field 0 (global Rewriter!))) 0a)
           (setfield_ptr 0 (field 0 (global Rewriter!))
             [0: [0: -976376203a 892015045a "-"] 0a])
           0a)
         (let
           (fmt/341 =
              (let (file/342 = (field 0 (field 1 (global Rewriter!))))
                (catch
                  (stringswitch file/342
                   case "-": (field 104 (global Stdlib__format!))
                   default: (exit 6))
                 with (6)
                  (apply (field 103 (global Stdlib__format!))
                    (apply (field 6 (global Rewriter!))
                      (field 59 (global Stdlib!)) file/342)))))
           (try
             (revapply (field 0 (field 0 (global Rewriter!)))
               (apply (field 14 (global Stdlib__list!))
                 (function (param/1238, param/1239, param/1240)
                   (let
                     (source/581 =a param/1240
                      source_kind/580 =a param/1239
                      ast_kind/579 =a param/1238
                      lexer/582 =
                        (apply (field 7 (global Rewriter!)) source_kind/580
                          source/581))
                     (if (>= ast_kind/579 4151025)
                       (let
                         (psig/661 =
                            (apply (field 1 (global Parse!)) lexer/582)
                          psig/662 =
                            (apply (field 6 (global Pparse!)) 0a
                              (field 0 (field 2 (global Rewriter!))) 1a
                              psig/661))
                         (seq
                           (apply (field 5 (global Pprintast!)) fmt/341
                             psig/662)
                           (apply (field 37 (global Stdlib__format!)) fmt/341
                             0a)))
                       (let
                         (pstr/583 =
                            (apply (field 0 (global Parse!)) lexer/582)
                          pstr/656 =
                            (apply (field 6 (global Pparse!)) 0a
                              (field 0 (field 2 (global Rewriter!))) 0a
                              pstr/583))
                         (seq
                           (apply (field 6 (global Pprintast!)) fmt/341
                             pstr/656)
                           (apply (field 37 (global Stdlib__format!)) fmt/341
                             0a))))))))
            with exn/664
             (seq
               (apply (field 52 (global Location!))
                 (field 105 (global Stdlib__format!)) exn/664)
               (apply (field 98 (global Stdlib!)) 2))))))
    0a)
  0a)
(seq
  (let (inputs/80 = (makemutable 0 0a))
    (setfield_ptr(root-init) 0 (global Rewriter!) inputs/80))
  (let (output_file/81 = (makemutable 0 "-"))
    (setfield_ptr(root-init) 1 (global Rewriter!) output_file/81))
  (let (tool_name/82 = (makemutable 0 "ocamlc"))
    (setfield_ptr(root-init) 2 (global Rewriter!) tool_name/82))
  (let
    (args/83 =
       (apply (field 10 (global Stdlib__arg!)) 0a
         (makeblock 0
           (makeblock 0 "-ppx"
             (makeblock 4
               (function s/119
                 (setfield_ptr 0 (field 33 (global Clflags!))
                   (makeblock 0 s/119 (field 0 (field 33 (global Clflags!)))))))
             "<cmd> Invoke <cmd> as a ppx preprocessor")
           (makeblock 0
             (makeblock 0 "-str"
               (makeblock 4
                 (function s/125
                   (setfield_ptr 0 (field 0 (global Rewriter!))
                     (makeblock 0 (makeblock 0 -976376203a -976970511a s/125)
                       (field 0 (field 0 (global Rewriter!)))))))
               "<str> Parse <str> as a structure")
             (makeblock 0
               (makeblock 0 "-sig"
                 (makeblock 4
                   (function s/126
                     (setfield_ptr 0 (field 0 (global Rewriter!))
                       (makeblock 0 (makeblock 0 4151025a -976970511a s/126)
                         (field 0 (field 0 (global Rewriter!)))))))
                 "<str> Parse <str> as a signature")
               (makeblock 0
                 (makeblock 0 "-impl"
                   (makeblock 4
                     (function s/127
                       (setfield_ptr 0 (field 0 (global Rewriter!))
                         (makeblock 0
                           (makeblock 0 -976376203a 892015045a s/127)
                           (field 0 (field 0 (global Rewriter!)))))))
                   "<file> Parse <file> as an implementation (specify - for stdin)")
                 (makeblock 0
                   (makeblock 0 "-intf"
                     (makeblock 4
                       (function s/128
                         (setfield_ptr 0 (field 0 (global Rewriter!))
                           (makeblock 0
                             (makeblock 0 4151025a 892015045a s/128)
                             (field 0 (field 0 (global Rewriter!)))))))
                     "<file> Parse <file> as an interface (specify - for stdin)")
                   (makeblock 0
                     (makeblock 0 "-o"
                       (makeblock 5 (field 1 (global Rewriter!)))
                       "<file> Write result into <file> (stdout by default)")
                     (makeblock 0
                       (makeblock 0 "-tool-name"
                         (makeblock 5 (field 2 (global Rewriter!)))
                         "<str> Set tool name to <str> (ocamlc by default)")
                       (makeblock 0
                         (makeblock 0 "-I"
                           (makeblock 4
                             (function s/129
                               (setfield_ptr 0 (field 12 (global Clflags!))
                                 (makeblock 0 s/129
                                   (field 0 (field 12 (global Clflags!)))))))
                           "<dir> Add <dir> to the list of include directories")
                         (makeblock 0
                           (makeblock 0 "-open"
                             (makeblock 4
                               (function s/130
                                 (setfield_ptr 0 (field 31 (global Clflags!))
                                   (makeblock 0 s/130
                                     (field 0 (field 31 (global Clflags!)))))))
                             "<module> Add <module> to the list of opened modules")
                           (makeblock 0
                             (makeblock 0 "-for-pack"
                               (makeblock 4
                                 (function s/131
                                   (setfield_ptr 0
                                     (field 59 (global Clflags!))
                                     (makeblock 0 s/131))))
                               "<ident> Preprocess code as if it will be packed inside <ident>")
                             (makeblock 0
                               (makeblock 0 "-g"
                                 (makeblock 2 (field 16 (global Clflags!)))
                                 " Request debug information from preprocessor")
                               0a)))))))))))))
    (setfield_ptr(root-init) 3 (global Rewriter!) args/83))
  (let
    (anon_arg/132 =
       (function s/134
         (let (*match*/971 = (field 0 (field 33 (global Clflags!))))
           (if *match*/971
             (setfield_ptr 0 (field 0 (global Rewriter!))
               (makeblock 0 (makeblock 0 -976376203a 892015045a s/134)
                 (field 0 (field 0 (global Rewriter!)))))
             (setfield_ptr 0 (field 33 (global Clflags!))
               (makeblock 0 s/134 (field 0 (field 33 (global Clflags!)))))))))
    (setfield_ptr(root-init) 4 (global Rewriter!) anon_arg/132))
  (let
    (usage_msg/135 =
       (apply (field 3 (global Stdlib__printf!))
         [0:
          [11:
           "Usage: "
           [2:
            0a
            [11:
             " [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin."
             0a]]]
          "Usage: %s [ppx-rewriter] [options...] [implementations...]\nIf no implementations are specified, parses stdin."]
         (array.get[addr] (caml_sys_argv 0a) 0)))
    (setfield_ptr(root-init) 5 (global Rewriter!) usage_msg/135))
  (let
    (wrap_open/295 =
       (function fn/297 file/298
         (try (apply fn/297 file/298) with exn/1234
           (if (== (field 0 exn/1234) (field 10 (global Stdlib!)))
             (seq (apply (field 52 (global Stdlib!)) (field 1 exn/1234))
               (apply (field 98 (global Stdlib!)) 1))
             (reraise exn/1234)))))
    (setfield_ptr(root-init) 6 (global Rewriter!) wrap_open/295))
  (let
    (make_lexer/300 =
       (function source_kind/302 source/303
         (if (>= source_kind/302 892015045)
           (stringswitch source/303
            case "-":
             (seq
               (setfield_ptr 0 (field 11 (global Location!)) "//toplevel//")
               (apply (field 1 (global Stdlib__lexing!)) 0a
                 (field 37 (global Stdlib!))))
            default:
             (seq (setfield_ptr 0 (field 11 (global Location!)) source/303)
               (apply (field 1 (global Stdlib__lexing!)) 0a
                 (apply (field 6 (global Rewriter!))
                   (field 78 (global Stdlib!)) source/303))))
           (seq (setfield_ptr 0 (field 11 (global Location!)) "//toplevel//")
             (apply (field 2 (global Stdlib__lexing!)) 0a source/303)))))
    (setfield_ptr(root-init) 7 (global Rewriter!) make_lexer/300))
  (let
    (*match*/1243 =
       (seq
         (apply (field 0 (global Stdlib__arg!)) (field 3 (global Rewriter!))
           (field 4 (global Rewriter!)) (field 5 (global Rewriter!)))
         (if (== (field 0 (field 33 (global Clflags!))) 0a)
           (seq
             (apply (field 8 (global Stdlib__arg!))
               (field 3 (global Rewriter!)) (field 5 (global Rewriter!)))
             (apply (field 98 (global Stdlib!)) 1))
           0a)
         (if (== (field 0 (field 0 (global Rewriter!))) 0a)
           (setfield_ptr 0 (field 0 (global Rewriter!))
             [0: [0: -976376203a 892015045a "-"] 0a])
           0a)
         (let
           (fmt/341 =
              (let (file/342 = (field 0 (field 1 (global Rewriter!))))
                (stringswitch file/342
                 case "-": (field 104 (global Stdlib__format!))
                 default:
                  (apply (field 103 (global Stdlib__format!))
                    (apply (field 6 (global Rewriter!))
                      (field 59 (global Stdlib!)) file/342)))))
           (try
             (apply (field 14 (global Stdlib__list!))
               (function (param/1238, param/1239, param/1240)
                 (let
                   (lexer/582 =
                      (apply (field 7 (global Rewriter!)) param/1239
                        param/1240))
                   (if (>= param/1238 4151025)
                     (let
                       (psig/661 =
                          (apply (field 1 (global Parse!)) lexer/582)
                        psig/662 =
                          (apply (field 6 (global Pparse!)) 0a
                            (field 0 (field 2 (global Rewriter!))) 1a
                            psig/661))
                       (seq
                         (apply (field 5 (global Pprintast!)) fmt/341
                           psig/662)
                         (apply (field 37 (global Stdlib__format!)) fmt/341
                           0a)))
                     (let
                       (pstr/583 =
                          (apply (field 0 (global Parse!)) lexer/582)
                        pstr/656 =
                          (apply (field 6 (global Pparse!)) 0a
                            (field 0 (field 2 (global Rewriter!))) 0a
                            pstr/583))
                       (seq
                         (apply (field 6 (global Pprintast!)) fmt/341
                           pstr/656)
                         (apply (field 37 (global Stdlib__format!)) fmt/341
                           0a))))))
               (field 0 (field 0 (global Rewriter!))))
            with exn/664
             (seq
               (apply (field 52 (global Location!))
                 (field 105 (global Stdlib__format!)) exn/664)
               (apply (field 98 (global Stdlib!)) 2))))))
    0a)
  0a)
