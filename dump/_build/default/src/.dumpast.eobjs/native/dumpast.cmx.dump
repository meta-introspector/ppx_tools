[
  structure_item (src/dumpast.ml[7,273+0]..[7,273+16])
    Pstr_open Fresh
    module_expr (src/dumpast.ml[7,273+5]..[7,273+16])
      Pmod_ident "Outcometree" (src/dumpast.ml[7,273+5]..[7,273+16])
  structure_item (src/dumpast.ml[9,291+0]..[9,291+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[9,291+4]..[9,291+8])
          Ppat_var "locs" (src/dumpast.ml[9,291+4]..[9,291+8])
        expression (src/dumpast.ml[9,291+11]..[9,291+56])
          Pexp_apply
          expression (src/dumpast.ml[9,291+11]..[9,291+14])
            Pexp_ident "ref" (src/dumpast.ml[9,291+11]..[9,291+14])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[9,291+15]..[9,291+56]) ghost
                Pexp_constraint
                expression (src/dumpast.ml[9,291+16]..[9,291+24])
                  Pexp_variant "Discard"
                  None
                core_type (src/dumpast.ml[9,291+27]..[9,291+55])
                  Ptyp_variant closed=Closed
                  [
                    Rtag "Discard" true
                      []
                    Rtag "Underscore" true
                      []
                    Rtag "Keep" true
                      []
                  ]
                  None
          ]
    ]
  structure_item (src/dumpast.ml[10,348+0]..[10,348+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[10,348+4]..[10,348+9])
          Ppat_var "attrs" (src/dumpast.ml[10,348+4]..[10,348+9])
        expression (src/dumpast.ml[10,348+12]..[10,348+78])
          Pexp_apply
          expression (src/dumpast.ml[10,348+12]..[10,348+15])
            Pexp_ident "ref" (src/dumpast.ml[10,348+12]..[10,348+15])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[10,348+16]..[10,348+78]) ghost
                Pexp_constraint
                expression (src/dumpast.ml[10,348+17]..[10,348+31])
                  Pexp_variant "Discard_empty"
                  None
                core_type (src/dumpast.ml[10,348+34]..[10,348+77])
                  Ptyp_variant closed=Closed
                  [
                    Rtag "Discard" true
                      []
                    Rtag "Underscore" true
                      []
                    Rtag "Keep" true
                      []
                    Rtag "Discard_empty" true
                      []
                  ]
                  None
          ]
    ]
  structure_item (src/dumpast.ml[12,428+0]..[31,1140+5])
    Pstr_class
    [
      class_declaration (src/dumpast.ml[12,428+0]..[31,1140+5])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "out_value_builder" (src/dumpast.ml[12,428+6]..[12,428+23])
        pci_expr =
          class_expr (src/dumpast.ml[13,454+2]..[31,1140+5])
            Pcl_structure
            class_structure
              pattern (src/dumpast.ml[13,454+8]..[13,454+8]) ghost
                Ppat_any
              [
                class_field (src/dumpast.ml[14,463+4]..[19,655+32])
                  Pcf_method Public
                    "record" (src/dumpast.ml[14,463+11]..[14,463+17])
                    Concrete Fresh
                    expression (src/dumpast.ml[14,463+18]..[19,655+32]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[14,463+18]..[19,655+32]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[14,463+18]..[14,463+32])
                          Ppat_constraint
                          pattern (src/dumpast.ml[14,463+19]..[14,463+22])
                            Ppat_var "_ty" (src/dumpast.ml[14,463+19]..[14,463+22])
                          core_type (src/dumpast.ml[14,463+25]..[14,463+31])
                            Ptyp_constr "string" (src/dumpast.ml[14,463+25]..[14,463+31])
                            []
                        expression (src/dumpast.ml[14,463+33]..[19,655+32]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/dumpast.ml[14,463+33]..[14,463+34])
                            Ppat_var "x" (src/dumpast.ml[14,463+33]..[14,463+34])
                          expression (src/dumpast.ml[15,500+6]..[19,655+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (src/dumpast.ml[15,500+10]..[15,500+11])
                                  Ppat_var "x" (src/dumpast.ml[15,500+10]..[15,500+11])
                                expression (src/dumpast.ml[16,514+8]..[16,514+72])
                                  Pexp_apply
                                  expression (src/dumpast.ml[16,514+8]..[16,514+19])
                                    Pexp_ident "List.filter" (src/dumpast.ml[16,514+8]..[16,514+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dumpast.ml[16,514+20]..[16,514+70])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (src/dumpast.ml[16,514+30]..[16,514+48])
                                              Ppat_tuple
                                              [
                                                pattern (src/dumpast.ml[16,514+31]..[16,514+32])
                                                  Ppat_any
                                                pattern (src/dumpast.ml[16,514+34]..[16,514+47])
                                                  Ppat_construct "Oval_ellipsis" (src/dumpast.ml[16,514+34]..[16,514+47])
                                                  None
                                              ]
                                            expression (src/dumpast.ml[16,514+52]..[16,514+57])
                                              Pexp_construct "false" (src/dumpast.ml[16,514+52]..[16,514+57])
                                              None
                                          <case>
                                            pattern (src/dumpast.ml[16,514+60]..[16,514+61])
                                              Ppat_any
                                            expression (src/dumpast.ml[16,514+65]..[16,514+69])
                                              Pexp_construct "true" (src/dumpast.ml[16,514+65]..[16,514+69])
                                              None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (src/dumpast.ml[16,514+71]..[16,514+72])
                                        Pexp_ident "x" (src/dumpast.ml[16,514+71]..[16,514+72])
                                  ]
                            ]
                            expression (src/dumpast.ml[18,596+6]..[19,655+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (src/dumpast.ml[18,596+10]..[18,596+11])
                                    Ppat_var "f" (src/dumpast.ml[18,596+10]..[18,596+11])
                                  expression (src/dumpast.ml[18,596+12]..[18,596+55]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/dumpast.ml[18,596+12]..[18,596+18])
                                      Ppat_tuple
                                      [
                                        pattern (src/dumpast.ml[18,596+13]..[18,596+14])
                                          Ppat_var "l" (src/dumpast.ml[18,596+13]..[18,596+14])
                                        pattern (src/dumpast.ml[18,596+16]..[18,596+17])
                                          Ppat_var "s" (src/dumpast.ml[18,596+16]..[18,596+17])
                                      ]
                                    expression (src/dumpast.ml[18,596+21]..[18,596+55])
                                      Pexp_tuple
                                      [
                                        expression (src/dumpast.ml[18,596+21]..[18,596+52])
                                          Pexp_construct "Oide_ident" (src/dumpast.ml[18,596+21]..[18,596+31])
                                          Some
                                            expression (src/dumpast.ml[18,596+32]..[18,596+52])
                                              Pexp_record
                                              [
                                                "printed_name" (src/dumpast.ml[18,596+34]..[18,596+46])
                                                  expression (src/dumpast.ml[18,596+49]..[18,596+50])
                                                    Pexp_ident "l" (src/dumpast.ml[18,596+49]..[18,596+50])
                                              ]
                                              None
                                        expression (src/dumpast.ml[18,596+54]..[18,596+55])
                                          Pexp_ident "s" (src/dumpast.ml[18,596+54]..[18,596+55])
                                      ]
                              ]
                              expression (src/dumpast.ml[19,655+6]..[19,655+32])
                                Pexp_construct "Oval_record" (src/dumpast.ml[19,655+6]..[19,655+17])
                                Some
                                  expression (src/dumpast.ml[19,655+18]..[19,655+32])
                                    Pexp_apply
                                    expression (src/dumpast.ml[19,655+19]..[19,655+27])
                                      Pexp_ident "List.map" (src/dumpast.ml[19,655+19]..[19,655+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (src/dumpast.ml[19,655+28]..[19,655+29])
                                          Pexp_ident "f" (src/dumpast.ml[19,655+28]..[19,655+29])
                                      <arg>
                                      Nolabel
                                        expression (src/dumpast.ml[19,655+30]..[19,655+31])
                                          Pexp_ident "x" (src/dumpast.ml[19,655+30]..[19,655+31])
                                    ]
                      None
                class_field (src/dumpast.ml[20,688+4]..[21,733+59])
                  Pcf_method Public
                    "constr" (src/dumpast.ml[20,688+11]..[20,688+17])
                    Concrete Fresh
                    expression (src/dumpast.ml[20,688+18]..[21,733+59]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[20,688+18]..[21,733+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[20,688+18]..[20,688+32])
                          Ppat_constraint
                          pattern (src/dumpast.ml[20,688+19]..[20,688+22])
                            Ppat_var "_ty" (src/dumpast.ml[20,688+19]..[20,688+22])
                          core_type (src/dumpast.ml[20,688+25]..[20,688+31])
                            Ptyp_constr "string" (src/dumpast.ml[20,688+25]..[20,688+31])
                            []
                        expression (src/dumpast.ml[20,688+33]..[21,733+59]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (src/dumpast.ml[20,688+33]..[20,688+42])
                            Ppat_tuple
                            [
                              pattern (src/dumpast.ml[20,688+34]..[20,688+35])
                                Ppat_var "c" (src/dumpast.ml[20,688+34]..[20,688+35])
                              pattern (src/dumpast.ml[20,688+37]..[20,688+41])
                                Ppat_var "args" (src/dumpast.ml[20,688+37]..[20,688+41])
                            ]
                          expression (src/dumpast.ml[21,733+8]..[21,733+59])
                            Pexp_construct "Oval_constr" (src/dumpast.ml[21,733+8]..[21,733+19])
                            Some
                              expression (src/dumpast.ml[21,733+20]..[21,733+59])
                                Pexp_tuple
                                [
                                  expression (src/dumpast.ml[21,733+21]..[21,733+52])
                                    Pexp_construct "Oide_ident" (src/dumpast.ml[21,733+21]..[21,733+31])
                                    Some
                                      expression (src/dumpast.ml[21,733+32]..[21,733+52])
                                        Pexp_record
                                        [
                                          "printed_name" (src/dumpast.ml[21,733+34]..[21,733+46])
                                            expression (src/dumpast.ml[21,733+49]..[21,733+50])
                                              Pexp_ident "c" (src/dumpast.ml[21,733+49]..[21,733+50])
                                        ]
                                        None
                                  expression (src/dumpast.ml[21,733+54]..[21,733+58])
                                    Pexp_ident "args" (src/dumpast.ml[21,733+54]..[21,733+58])
                                ]
                      None
                class_field (src/dumpast.ml[22,793+4]..[22,793+31])
                  Pcf_method Public
                    "list" (src/dumpast.ml[22,793+11]..[22,793+15])
                    Concrete Fresh
                    expression (src/dumpast.ml[22,793+16]..[22,793+31]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[22,793+16]..[22,793+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[22,793+16]..[22,793+17])
                          Ppat_var "x" (src/dumpast.ml[22,793+16]..[22,793+17])
                        expression (src/dumpast.ml[22,793+20]..[22,793+31])
                          Pexp_construct "Oval_list" (src/dumpast.ml[22,793+20]..[22,793+29])
                          Some
                            expression (src/dumpast.ml[22,793+30]..[22,793+31])
                              Pexp_ident "x" (src/dumpast.ml[22,793+30]..[22,793+31])
                      None
                class_field (src/dumpast.ml[23,825+4]..[23,825+48])
                  Pcf_method Public
                    "array" (src/dumpast.ml[23,825+11]..[23,825+16])
                    Concrete Fresh
                    expression (src/dumpast.ml[23,825+17]..[23,825+48]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[23,825+17]..[23,825+48]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[23,825+17]..[23,825+18])
                          Ppat_var "x" (src/dumpast.ml[23,825+17]..[23,825+18])
                        expression (src/dumpast.ml[23,825+21]..[23,825+48])
                          Pexp_construct "Oval_list" (src/dumpast.ml[23,825+21]..[23,825+30])
                          Some
                            expression (src/dumpast.ml[23,825+31]..[23,825+48])
                              Pexp_apply
                              expression (src/dumpast.ml[23,825+32]..[23,825+45])
                                Pexp_ident "Array.to_list" (src/dumpast.ml[23,825+32]..[23,825+45])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[23,825+46]..[23,825+47])
                                    Pexp_ident "x" (src/dumpast.ml[23,825+46]..[23,825+47])
                              ]
                      None
                class_field (src/dumpast.ml[24,874+4]..[24,874+33])
                  Pcf_method Public
                    "tuple" (src/dumpast.ml[24,874+11]..[24,874+16])
                    Concrete Fresh
                    expression (src/dumpast.ml[24,874+17]..[24,874+33]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[24,874+17]..[24,874+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[24,874+17]..[24,874+18])
                          Ppat_var "x" (src/dumpast.ml[24,874+17]..[24,874+18])
                        expression (src/dumpast.ml[24,874+21]..[24,874+33])
                          Pexp_construct "Oval_tuple" (src/dumpast.ml[24,874+21]..[24,874+31])
                          Some
                            expression (src/dumpast.ml[24,874+32]..[24,874+33])
                              Pexp_ident "x" (src/dumpast.ml[24,874+32]..[24,874+33])
                      None
                class_field (src/dumpast.ml[25,908+4]..[25,908+29])
                  Pcf_method Public
                    "int" (src/dumpast.ml[25,908+11]..[25,908+14])
                    Concrete Fresh
                    expression (src/dumpast.ml[25,908+15]..[25,908+29]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[25,908+15]..[25,908+29]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[25,908+15]..[25,908+16])
                          Ppat_var "x" (src/dumpast.ml[25,908+15]..[25,908+16])
                        expression (src/dumpast.ml[25,908+19]..[25,908+29])
                          Pexp_construct "Oval_int" (src/dumpast.ml[25,908+19]..[25,908+27])
                          Some
                            expression (src/dumpast.ml[25,908+28]..[25,908+29])
                              Pexp_ident "x" (src/dumpast.ml[25,908+28]..[25,908+29])
                      None
                class_field (src/dumpast.ml[26,938+4]..[26,938+59])
                  Pcf_method Public
                    "string" (src/dumpast.ml[26,938+11]..[26,938+17])
                    Concrete Fresh
                    expression (src/dumpast.ml[26,938+18]..[26,938+59]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[26,938+18]..[26,938+59]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[26,938+18]..[26,938+19])
                          Ppat_var "x" (src/dumpast.ml[26,938+18]..[26,938+19])
                        expression (src/dumpast.ml[26,938+22]..[26,938+59])
                          Pexp_construct "Oval_string" (src/dumpast.ml[26,938+22]..[26,938+33])
                          Some
                            expression (src/dumpast.ml[26,938+34]..[26,938+59])
                              Pexp_tuple
                              [
                                expression (src/dumpast.ml[26,938+35]..[26,938+36])
                                  Pexp_ident "x" (src/dumpast.ml[26,938+35]..[26,938+36])
                                expression (src/dumpast.ml[26,938+38]..[26,938+45])
                                  Pexp_ident "max_int" (src/dumpast.ml[26,938+38]..[26,938+45])
                                expression (src/dumpast.ml[26,938+47]..[26,938+58])
                                  Pexp_construct "Ostr_string" (src/dumpast.ml[26,938+47]..[26,938+58])
                                  None
                              ]
                      None
                class_field (src/dumpast.ml[27,998+4]..[27,998+31])
                  Pcf_method Public
                    "char" (src/dumpast.ml[27,998+11]..[27,998+15])
                    Concrete Fresh
                    expression (src/dumpast.ml[27,998+16]..[27,998+31]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[27,998+16]..[27,998+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[27,998+16]..[27,998+17])
                          Ppat_var "x" (src/dumpast.ml[27,998+16]..[27,998+17])
                        expression (src/dumpast.ml[27,998+20]..[27,998+31])
                          Pexp_construct "Oval_char" (src/dumpast.ml[27,998+20]..[27,998+29])
                          Some
                            expression (src/dumpast.ml[27,998+30]..[27,998+31])
                              Pexp_ident "x" (src/dumpast.ml[27,998+30]..[27,998+31])
                      None
                class_field (src/dumpast.ml[28,1030+4]..[28,1030+33])
                  Pcf_method Public
                    "int32" (src/dumpast.ml[28,1030+11]..[28,1030+16])
                    Concrete Fresh
                    expression (src/dumpast.ml[28,1030+17]..[28,1030+33]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[28,1030+17]..[28,1030+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[28,1030+17]..[28,1030+18])
                          Ppat_var "x" (src/dumpast.ml[28,1030+17]..[28,1030+18])
                        expression (src/dumpast.ml[28,1030+21]..[28,1030+33])
                          Pexp_construct "Oval_int32" (src/dumpast.ml[28,1030+21]..[28,1030+31])
                          Some
                            expression (src/dumpast.ml[28,1030+32]..[28,1030+33])
                              Pexp_ident "x" (src/dumpast.ml[28,1030+32]..[28,1030+33])
                      None
                class_field (src/dumpast.ml[29,1064+4]..[29,1064+33])
                  Pcf_method Public
                    "int64" (src/dumpast.ml[29,1064+11]..[29,1064+16])
                    Concrete Fresh
                    expression (src/dumpast.ml[29,1064+17]..[29,1064+33]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[29,1064+17]..[29,1064+33]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[29,1064+17]..[29,1064+18])
                          Ppat_var "x" (src/dumpast.ml[29,1064+17]..[29,1064+18])
                        expression (src/dumpast.ml[29,1064+21]..[29,1064+33])
                          Pexp_construct "Oval_int64" (src/dumpast.ml[29,1064+21]..[29,1064+31])
                          Some
                            expression (src/dumpast.ml[29,1064+32]..[29,1064+33])
                              Pexp_ident "x" (src/dumpast.ml[29,1064+32]..[29,1064+33])
                      None
                class_field (src/dumpast.ml[30,1098+4]..[30,1098+41])
                  Pcf_method Public
                    "nativeint" (src/dumpast.ml[30,1098+11]..[30,1098+20])
                    Concrete Fresh
                    expression (src/dumpast.ml[30,1098+21]..[30,1098+41]) ghost
                      Pexp_poly
                      expression (src/dumpast.ml[30,1098+21]..[30,1098+41]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (src/dumpast.ml[30,1098+21]..[30,1098+22])
                          Ppat_var "x" (src/dumpast.ml[30,1098+21]..[30,1098+22])
                        expression (src/dumpast.ml[30,1098+25]..[30,1098+41])
                          Pexp_construct "Oval_nativeint" (src/dumpast.ml[30,1098+25]..[30,1098+39])
                          Some
                            expression (src/dumpast.ml[30,1098+40]..[30,1098+41])
                              Pexp_ident "x" (src/dumpast.ml[30,1098+40]..[30,1098+41])
                      None
              ]
    ]
  structure_item (src/dumpast.ml[33,1147+0]..[48,1671+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[33,1147+4]..[33,1147+8])
          Ppat_var "lift" (src/dumpast.ml[33,1147+4]..[33,1147+8])
        expression (src/dumpast.ml[34,1158+2]..[48,1671+5])
          Pexp_object
          class_structure
            pattern (src/dumpast.ml[34,1158+8]..[34,1158+8]) ghost
              Ppat_any
            [
              class_field (src/dumpast.ml[35,1167+4]..[35,1167+42])
                Pcf_inherit Fresh
                  class_expr (src/dumpast.ml[35,1167+12]..[35,1167+33])
                    Pcl_constr "Ast_lifter.lifter" (src/dumpast.ml[35,1167+16]..[35,1167+33])
                    [
                      core_type (src/dumpast.ml[35,1167+13]..[35,1167+14])
                        Ptyp_any
                    ]
                  Some
                    "super" (src/dumpast.ml[35,1167+37]..[35,1167+42])
              class_field (src/dumpast.ml[36,1210+4]..[36,1210+29])
                Pcf_inherit Fresh
                  class_expr (src/dumpast.ml[36,1210+12]..[36,1210+29])
                    Pcl_constr "out_value_builder" (src/dumpast.ml[36,1210+12]..[36,1210+29])
                    []
                  None
              class_field (src/dumpast.ml[37,1240+4]..[41,1367+42])
                Pcf_method Public
                  "lift_Location_t" (src/dumpast.ml[37,1240+12]..[37,1240+27])
                  Concrete Override
                  expression (src/dumpast.ml[37,1240+28]..[41,1367+42]) ghost
                    Pexp_poly
                    expression (src/dumpast.ml[37,1240+28]..[41,1367+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/dumpast.ml[37,1240+28]..[37,1240+29])
                        Ppat_var "l" (src/dumpast.ml[37,1240+28]..[37,1240+29])
                      expression (src/dumpast.ml[38,1272+6]..[41,1367+42])
                        Pexp_match
                        expression (src/dumpast.ml[38,1272+12]..[38,1272+17])
                          Pexp_apply
                          expression (src/dumpast.ml[38,1272+12]..[38,1272+13])
                            Pexp_ident "!" (src/dumpast.ml[38,1272+12]..[38,1272+13])
                          [
                            <arg>
                            Nolabel
                              expression (src/dumpast.ml[38,1272+13]..[38,1272+17])
                                Pexp_ident "locs" (src/dumpast.ml[38,1272+13]..[38,1272+17])
                          ]
                        [
                          <case>
                            pattern (src/dumpast.ml[39,1295+8]..[39,1295+16])
                              Ppat_variant "Discard"
                              None
                            expression (src/dumpast.ml[39,1295+20]..[39,1295+33])
                              Pexp_construct "Oval_ellipsis" (src/dumpast.ml[39,1295+20]..[39,1295+33])
                              None
                          <case>
                            pattern (src/dumpast.ml[40,1329+8]..[40,1329+19])
                              Ppat_variant "Underscore"
                              None
                            expression (src/dumpast.ml[40,1329+23]..[40,1329+37])
                              Pexp_construct "Oval_stuff" (src/dumpast.ml[40,1329+23]..[40,1329+33])
                              Some
                                expression (src/dumpast.ml[40,1329+34]..[40,1329+37])
                                  Pexp_constant PConst_string("_",None)
                          <case>
                            pattern (src/dumpast.ml[41,1367+8]..[41,1367+13])
                              Ppat_variant "Keep"
                              None
                            expression (src/dumpast.ml[41,1367+17]..[41,1367+42])
                              Pexp_apply
                              expression (src/dumpast.ml[41,1367+17]..[41,1367+40])
                                Pexp_send "lift_Location_t"
                                expression (src/dumpast.ml[41,1367+17]..[41,1367+22])
                                  Pexp_ident "super" (src/dumpast.ml[41,1367+17]..[41,1367+22])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[41,1367+41]..[41,1367+42])
                                    Pexp_ident "l" (src/dumpast.ml[41,1367+41]..[41,1367+42])
                              ]
                        ]
                    None
              class_field (src/dumpast.ml[42,1410+4]..[47,1625+45])
                Pcf_method Public
                  "lift_Parsetree_attributes" (src/dumpast.ml[42,1410+12]..[42,1410+37])
                  Concrete Override
                  expression (src/dumpast.ml[42,1410+38]..[47,1625+45]) ghost
                    Pexp_poly
                    expression (src/dumpast.ml[42,1410+38]..[47,1625+45]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (src/dumpast.ml[42,1410+38]..[42,1410+39])
                        Ppat_var "l" (src/dumpast.ml[42,1410+38]..[42,1410+39])
                      expression (src/dumpast.ml[43,1452+6]..[47,1625+45])
                        Pexp_match
                        expression (src/dumpast.ml[43,1452+12]..[43,1452+21])
                          Pexp_tuple
                          [
                            expression (src/dumpast.ml[43,1452+12]..[43,1452+18])
                              Pexp_apply
                              expression (src/dumpast.ml[43,1452+12]..[43,1452+13])
                                Pexp_ident "!" (src/dumpast.ml[43,1452+12]..[43,1452+13])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[43,1452+13]..[43,1452+18])
                                    Pexp_ident "attrs" (src/dumpast.ml[43,1452+13]..[43,1452+18])
                              ]
                            expression (src/dumpast.ml[43,1452+20]..[43,1452+21])
                              Pexp_ident "l" (src/dumpast.ml[43,1452+20]..[43,1452+21])
                          ]
                        [
                          <case>
                            pattern (src/dumpast.ml[44,1479+8]..[44,1479+40])
                              Ppat_or
                              pattern (src/dumpast.ml[44,1479+8]..[44,1479+19])
                                Ppat_tuple
                                [
                                  pattern (src/dumpast.ml[44,1479+8]..[44,1479+16])
                                    Ppat_variant "Discard"
                                    None
                                  pattern (src/dumpast.ml[44,1479+18]..[44,1479+19])
                                    Ppat_any
                                ]
                              pattern (src/dumpast.ml[44,1479+22]..[44,1479+40])
                                Ppat_tuple
                                [
                                  pattern (src/dumpast.ml[44,1479+22]..[44,1479+36])
                                    Ppat_variant "Discard_empty"
                                    None
                                  pattern (src/dumpast.ml[44,1479+38]..[44,1479+40])
                                    Ppat_construct "[]" (src/dumpast.ml[44,1479+38]..[44,1479+40])
                                    None
                                ]
                            expression (src/dumpast.ml[44,1479+44]..[44,1479+57])
                              Pexp_construct "Oval_ellipsis" (src/dumpast.ml[44,1479+44]..[44,1479+57])
                              None
                          <case>
                            pattern (src/dumpast.ml[45,1537+8]..[45,1537+22])
                              Ppat_tuple
                              [
                                pattern (src/dumpast.ml[45,1537+8]..[45,1537+19])
                                  Ppat_variant "Underscore"
                                  None
                                pattern (src/dumpast.ml[45,1537+21]..[45,1537+22])
                                  Ppat_any
                              ]
                            expression (src/dumpast.ml[45,1537+26]..[45,1537+40])
                              Pexp_construct "Oval_stuff" (src/dumpast.ml[45,1537+26]..[45,1537+36])
                              Some
                                expression (src/dumpast.ml[45,1537+37]..[45,1537+40])
                                  Pexp_constant PConst_string("_",None)
                          <case>
                            pattern (src/dumpast.ml[46,1578+8]..[46,1578+43])
                              Ppat_or
                              pattern (src/dumpast.ml[46,1578+8]..[46,1578+16])
                                Ppat_tuple
                                [
                                  pattern (src/dumpast.ml[46,1578+8]..[46,1578+13])
                                    Ppat_variant "Keep"
                                    None
                                  pattern (src/dumpast.ml[46,1578+15]..[46,1578+16])
                                    Ppat_any
                                ]
                              pattern (src/dumpast.ml[46,1578+19]..[46,1578+43])
                                Ppat_tuple
                                [
                                  pattern (src/dumpast.ml[46,1578+20]..[46,1578+34])
                                    Ppat_variant "Discard_empty"
                                    None
                                  pattern (src/dumpast.ml[46,1578+36]..[46,1578+42])
                                    Ppat_construct "::" (src/dumpast.ml[46,1578+38]..[46,1578+40])
                                    Some
                                      pattern (src/dumpast.ml[46,1578+36]..[46,1578+42]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (src/dumpast.ml[46,1578+36]..[46,1578+37])
                                            Ppat_any
                                          pattern (src/dumpast.ml[46,1578+41]..[46,1578+42])
                                            Ppat_any
                                        ]
                                ]
                            expression (src/dumpast.ml[47,1625+10]..[47,1625+45])
                              Pexp_apply
                              expression (src/dumpast.ml[47,1625+10]..[47,1625+43])
                                Pexp_send "lift_Parsetree_attributes"
                                expression (src/dumpast.ml[47,1625+10]..[47,1625+15])
                                  Pexp_ident "super" (src/dumpast.ml[47,1625+10]..[47,1625+15])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[47,1625+44]..[47,1625+45])
                                    Pexp_ident "l" (src/dumpast.ml[47,1625+44]..[47,1625+45])
                              ]
                        ]
                    None
            ]
    ]
  structure_item (src/dumpast.ml[50,1678+0]..[52,1755+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[50,1678+4]..[50,1678+8])
          Ppat_var "show" (src/dumpast.ml[50,1678+4]..[50,1678+8])
        expression (src/dumpast.ml[50,1678+9]..[52,1755+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/dumpast.ml[50,1678+9]..[50,1678+15])
            Ppat_var "lifter" (src/dumpast.ml[50,1678+9]..[50,1678+15])
          expression (src/dumpast.ml[50,1678+16]..[52,1755+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (src/dumpast.ml[50,1678+16]..[50,1678+21])
              Ppat_var "parse" (src/dumpast.ml[50,1678+16]..[50,1678+21])
            expression (src/dumpast.ml[50,1678+22]..[52,1755+64]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (src/dumpast.ml[50,1678+22]..[50,1678+23])
                Ppat_var "s" (src/dumpast.ml[50,1678+22]..[50,1678+23])
              expression (src/dumpast.ml[51,1704+2]..[52,1755+64])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (src/dumpast.ml[51,1704+6]..[51,1704+7])
                      Ppat_var "v" (src/dumpast.ml[51,1704+6]..[51,1704+7])
                    expression (src/dumpast.ml[51,1704+10]..[51,1704+47])
                      Pexp_apply
                      expression (src/dumpast.ml[51,1704+10]..[51,1704+16])
                        Pexp_ident "lifter" (src/dumpast.ml[51,1704+10]..[51,1704+16])
                      [
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[51,1704+17]..[51,1704+47])
                            Pexp_apply
                            expression (src/dumpast.ml[51,1704+18]..[51,1704+23])
                              Pexp_ident "parse" (src/dumpast.ml[51,1704+18]..[51,1704+23])
                            [
                              <arg>
                              Nolabel
                                expression (src/dumpast.ml[51,1704+24]..[51,1704+46])
                                  Pexp_apply
                                  expression (src/dumpast.ml[51,1704+25]..[51,1704+43])
                                    Pexp_ident "Lexing.from_string" (src/dumpast.ml[51,1704+25]..[51,1704+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dumpast.ml[51,1704+44]..[51,1704+45])
                                        Pexp_ident "s" (src/dumpast.ml[51,1704+44]..[51,1704+45])
                                  ]
                            ]
                      ]
                ]
                expression (src/dumpast.ml[52,1755+2]..[52,1755+64])
                  Pexp_apply
                  expression (src/dumpast.ml[52,1755+2]..[52,1755+15])
                    Pexp_ident "Format.printf" (src/dumpast.ml[52,1755+2]..[52,1755+15])
                  [
                    <arg>
                    Nolabel
                      expression (src/dumpast.ml[52,1755+16]..[52,1755+42])
                        Pexp_constant PConst_string("%s@.==>@.%a@.=========@.",None)
                    <arg>
                    Nolabel
                      expression (src/dumpast.ml[52,1755+43]..[52,1755+44])
                        Pexp_ident "s" (src/dumpast.ml[52,1755+43]..[52,1755+44])
                    <arg>
                    Nolabel
                      expression (src/dumpast.ml[52,1755+45]..[52,1755+62])
                        Pexp_apply
                        expression (src/dumpast.ml[52,1755+45]..[52,1755+46])
                          Pexp_ident "!" (src/dumpast.ml[52,1755+45]..[52,1755+46])
                        [
                          <arg>
                          Nolabel
                            expression (src/dumpast.ml[52,1755+46]..[52,1755+62])
                              Pexp_ident "Oprint.out_value" (src/dumpast.ml[52,1755+46]..[52,1755+62])
                        ]
                    <arg>
                    Nolabel
                      expression (src/dumpast.ml[52,1755+63]..[52,1755+64])
                        Pexp_ident "v" (src/dumpast.ml[52,1755+63]..[52,1755+64])
                  ]
    ]
  structure_item (src/dumpast.ml[54,1821+0]..[54,1821+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[54,1821+4]..[54,1821+13])
          Ppat_var "show_expr" (src/dumpast.ml[54,1821+4]..[54,1821+13])
        expression (src/dumpast.ml[54,1821+16]..[54,1821+72])
          Pexp_apply
          expression (src/dumpast.ml[54,1821+16]..[54,1821+20])
            Pexp_ident "show" (src/dumpast.ml[54,1821+16]..[54,1821+20])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[54,1821+21]..[54,1821+55])
                Pexp_send "lift_Parsetree_expression"
                expression (src/dumpast.ml[54,1821+22]..[54,1821+26])
                  Pexp_ident "lift" (src/dumpast.ml[54,1821+22]..[54,1821+26])
            <arg>
            Nolabel
              expression (src/dumpast.ml[54,1821+56]..[54,1821+72])
                Pexp_ident "Parse.expression" (src/dumpast.ml[54,1821+56]..[54,1821+72])
          ]
    ]
  structure_item (src/dumpast.ml[55,1894+0]..[55,1894+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[55,1894+4]..[55,1894+12])
          Ppat_var "show_pat" (src/dumpast.ml[55,1894+4]..[55,1894+12])
        expression (src/dumpast.ml[55,1894+15]..[55,1894+65])
          Pexp_apply
          expression (src/dumpast.ml[55,1894+15]..[55,1894+19])
            Pexp_ident "show" (src/dumpast.ml[55,1894+15]..[55,1894+19])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[55,1894+20]..[55,1894+51])
                Pexp_send "lift_Parsetree_pattern"
                expression (src/dumpast.ml[55,1894+21]..[55,1894+25])
                  Pexp_ident "lift" (src/dumpast.ml[55,1894+21]..[55,1894+25])
            <arg>
            Nolabel
              expression (src/dumpast.ml[55,1894+52]..[55,1894+65])
                Pexp_ident "Parse.pattern" (src/dumpast.ml[55,1894+52]..[55,1894+65])
          ]
    ]
  structure_item (src/dumpast.ml[56,1960+0]..[56,1960+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[56,1960+4]..[56,1960+12])
          Ppat_var "show_typ" (src/dumpast.ml[56,1960+4]..[56,1960+12])
        expression (src/dumpast.ml[56,1960+15]..[56,1960+69])
          Pexp_apply
          expression (src/dumpast.ml[56,1960+15]..[56,1960+19])
            Pexp_ident "show" (src/dumpast.ml[56,1960+15]..[56,1960+19])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[56,1960+20]..[56,1960+53])
                Pexp_send "lift_Parsetree_core_type"
                expression (src/dumpast.ml[56,1960+21]..[56,1960+25])
                  Pexp_ident "lift" (src/dumpast.ml[56,1960+21]..[56,1960+25])
            <arg>
            Nolabel
              expression (src/dumpast.ml[56,1960+54]..[56,1960+69])
                Pexp_ident "Parse.core_type" (src/dumpast.ml[56,1960+54]..[56,1960+69])
          ]
    ]
  structure_item (src/dumpast.ml[58,2031+0]..[70,2525+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[58,2031+4]..[58,2031+13])
          Ppat_var "show_file" (src/dumpast.ml[58,2031+4]..[58,2031+13])
        expression (src/dumpast.ml[58,2031+14]..[70,2525+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (src/dumpast.ml[58,2031+14]..[58,2031+16])
            Ppat_var "fn" (src/dumpast.ml[58,2031+14]..[58,2031+16])
          expression (src/dumpast.ml[59,2050+2]..[70,2525+65])
            Pexp_sequence
            expression (src/dumpast.ml[59,2050+2]..[59,2050+66])
              Pexp_apply
              expression (src/dumpast.ml[59,2050+2]..[59,2050+17])
                Pexp_ident "Compenv.readenv" (src/dumpast.ml[59,2050+2]..[59,2050+17])
              [
                <arg>
                Nolabel
                  expression (src/dumpast.ml[59,2050+18]..[59,2050+38])
                    Pexp_ident "Format.err_formatter" (src/dumpast.ml[59,2050+18]..[59,2050+38])
                <arg>
                Nolabel
                  expression (src/dumpast.ml[59,2050+39]..[59,2050+66])
                    Pexp_construct "Compenv.Before_compile" (src/dumpast.ml[59,2050+40]..[59,2050+62])
                    Some
                      expression (src/dumpast.ml[59,2050+63]..[59,2050+65])
                        Pexp_ident "fn" (src/dumpast.ml[59,2050+63]..[59,2050+65])
              ]
            expression (src/dumpast.ml[60,2118+2]..[70,2525+65])
              Pexp_let Nonrec
              [
                <def>
                  pattern (src/dumpast.ml[60,2118+6]..[60,2118+7])
                    Ppat_var "v" (src/dumpast.ml[60,2118+6]..[60,2118+7])
                  expression (src/dumpast.ml[61,2128+4]..[68,2448+71])
                    Pexp_ifthenelse
                    expression (src/dumpast.ml[61,2128+7]..[61,2128+38])
                      Pexp_apply
                      expression (src/dumpast.ml[61,2128+7]..[61,2128+28])
                        Pexp_ident "Filename.check_suffix" (src/dumpast.ml[61,2128+7]..[61,2128+28])
                      [
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[61,2128+29]..[61,2128+31])
                            Pexp_ident "fn" (src/dumpast.ml[61,2128+29]..[61,2128+31])
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[61,2128+32]..[61,2128+38])
                            Pexp_constant PConst_string(".mli",None)
                      ]
                    expression (src/dumpast.ml[62,2172+6]..[63,2237+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (src/dumpast.ml[62,2172+10]..[62,2172+13])
                            Ppat_var "ast" (src/dumpast.ml[62,2172+10]..[62,2172+13])
                          expression (src/dumpast.ml[62,2172+16]..[62,2172+61])
                            Pexp_apply
                            expression (src/dumpast.ml[62,2172+16]..[62,2172+38])
                              Pexp_ident "Pparse.parse_interface" (src/dumpast.ml[62,2172+16]..[62,2172+38])
                            [
                              <arg>
                              Labelled "tool_name"
                                expression (src/dumpast.ml[62,2172+50]..[62,2172+58])
                                  Pexp_constant PConst_string("ocamlc",None)
                              <arg>
                              Nolabel
                                expression (src/dumpast.ml[62,2172+59]..[62,2172+61])
                                  Pexp_ident "fn" (src/dumpast.ml[62,2172+59]..[62,2172+61])
                            ]
                      ]
                      expression (src/dumpast.ml[63,2237+6]..[63,2237+41])
                        Pexp_apply
                        expression (src/dumpast.ml[63,2237+6]..[63,2237+37])
                          Pexp_send "lift_Parsetree_signature"
                          expression (src/dumpast.ml[63,2237+6]..[63,2237+10])
                            Pexp_ident "lift" (src/dumpast.ml[63,2237+6]..[63,2237+10])
                        [
                          <arg>
                          Nolabel
                            expression (src/dumpast.ml[63,2237+38]..[63,2237+41])
                              Pexp_ident "ast" (src/dumpast.ml[63,2237+38]..[63,2237+41])
                        ]
                    Some
                      expression (src/dumpast.ml[64,2279+9]..[68,2448+71])
                        Pexp_ifthenelse
                        expression (src/dumpast.ml[64,2279+12]..[64,2279+42])
                          Pexp_apply
                          expression (src/dumpast.ml[64,2279+12]..[64,2279+33])
                            Pexp_ident "Filename.check_suffix" (src/dumpast.ml[64,2279+12]..[64,2279+33])
                          [
                            <arg>
                            Nolabel
                              expression (src/dumpast.ml[64,2279+34]..[64,2279+36])
                                Pexp_ident "fn" (src/dumpast.ml[64,2279+34]..[64,2279+36])
                            <arg>
                            Nolabel
                              expression (src/dumpast.ml[64,2279+37]..[64,2279+42])
                                Pexp_constant PConst_string(".ml",None)
                          ]
                        expression (src/dumpast.ml[65,2327+6]..[66,2397+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (src/dumpast.ml[65,2327+10]..[65,2327+13])
                                Ppat_var "ast" (src/dumpast.ml[65,2327+10]..[65,2327+13])
                              expression (src/dumpast.ml[65,2327+16]..[65,2327+66])
                                Pexp_apply
                                expression (src/dumpast.ml[65,2327+16]..[65,2327+43])
                                  Pexp_ident "Pparse.parse_implementation" (src/dumpast.ml[65,2327+16]..[65,2327+43])
                                [
                                  <arg>
                                  Labelled "tool_name"
                                    expression (src/dumpast.ml[65,2327+55]..[65,2327+63])
                                      Pexp_constant PConst_string("ocamlc",None)
                                  <arg>
                                  Nolabel
                                    expression (src/dumpast.ml[65,2327+64]..[65,2327+66])
                                      Pexp_ident "fn" (src/dumpast.ml[65,2327+64]..[65,2327+66])
                                ]
                          ]
                          expression (src/dumpast.ml[66,2397+6]..[66,2397+41])
                            Pexp_apply
                            expression (src/dumpast.ml[66,2397+6]..[66,2397+37])
                              Pexp_send "lift_Parsetree_structure"
                              expression (src/dumpast.ml[66,2397+6]..[66,2397+10])
                                Pexp_ident "lift" (src/dumpast.ml[66,2397+6]..[66,2397+10])
                            [
                              <arg>
                              Nolabel
                                expression (src/dumpast.ml[66,2397+38]..[66,2397+41])
                                  Pexp_ident "ast" (src/dumpast.ml[66,2397+38]..[66,2397+41])
                            ]
                        Some
                          expression (src/dumpast.ml[68,2448+6]..[68,2448+71])
                            Pexp_apply
                            expression (src/dumpast.ml[68,2448+6]..[68,2448+14])
                              Pexp_ident "failwith" (src/dumpast.ml[68,2448+6]..[68,2448+14])
                            [
                              <arg>
                              Nolabel
                                expression (src/dumpast.ml[68,2448+15]..[68,2448+71])
                                  Pexp_apply
                                  expression (src/dumpast.ml[68,2448+16]..[68,2448+30])
                                    Pexp_ident "Printf.sprintf" (src/dumpast.ml[68,2448+16]..[68,2448+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (src/dumpast.ml[68,2448+31]..[68,2448+67])
                                        Pexp_constant PConst_string("Don't know what to do with file %s",None)
                                    <arg>
                                    Nolabel
                                      expression (src/dumpast.ml[68,2448+68]..[68,2448+70])
                                        Pexp_ident "fn" (src/dumpast.ml[68,2448+68]..[68,2448+70])
                                  ]
                            ]
              ]
              expression (src/dumpast.ml[70,2525+2]..[70,2525+65])
                Pexp_apply
                expression (src/dumpast.ml[70,2525+2]..[70,2525+15])
                  Pexp_ident "Format.printf" (src/dumpast.ml[70,2525+2]..[70,2525+15])
                [
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[70,2525+16]..[70,2525+42])
                      Pexp_constant PConst_string("%s@.==>@.%a@.=========@.",None)
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[70,2525+43]..[70,2525+45])
                      Pexp_ident "fn" (src/dumpast.ml[70,2525+43]..[70,2525+45])
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[70,2525+46]..[70,2525+63])
                      Pexp_apply
                      expression (src/dumpast.ml[70,2525+46]..[70,2525+47])
                        Pexp_ident "!" (src/dumpast.ml[70,2525+46]..[70,2525+47])
                      [
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[70,2525+47]..[70,2525+63])
                            Pexp_ident "Oprint.out_value" (src/dumpast.ml[70,2525+47]..[70,2525+63])
                      ]
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[70,2525+64]..[70,2525+65])
                      Pexp_ident "v" (src/dumpast.ml[70,2525+64]..[70,2525+65])
                ]
    ]
  structure_item (src/dumpast.ml[72,2592+0]..[110,3858+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[72,2592+4]..[72,2592+8])
          Ppat_var "args" (src/dumpast.ml[72,2592+4]..[72,2592+8])
        expression (src/dumpast.ml[73,2603+2]..[110,3858+3])
          Pexp_open Fresh
          module_expr (src/dumpast.ml[73,2603+11]..[73,2603+14])
            Pmod_ident "Arg" (src/dumpast.ml[73,2603+11]..[73,2603+14])
          expression (src/dumpast.ml[74,2621+2]..[110,3858+3])
            Pexp_construct "::" (src/dumpast.ml[75,2625+4]..[110,3858+3]) ghost
            Some
              expression (src/dumpast.ml[75,2625+4]..[110,3858+3]) ghost
                Pexp_tuple
                [
                  expression (src/dumpast.ml[75,2625+4]..[76,2653+44])
                    Pexp_tuple
                    [
                      expression (src/dumpast.ml[75,2625+4]..[75,2625+8])
                        Pexp_constant PConst_string("-e",None)
                      expression (src/dumpast.ml[75,2625+10]..[75,2625+26])
                        Pexp_construct "String" (src/dumpast.ml[75,2625+10]..[75,2625+16])
                        Some
                          expression (src/dumpast.ml[75,2625+17]..[75,2625+26])
                            Pexp_ident "show_expr" (src/dumpast.ml[75,2625+17]..[75,2625+26])
                      expression (src/dumpast.ml[76,2653+4]..[76,2653+44])
                        Pexp_constant PConst_string("<expr> Dump AST for expression <expr>.",None)
                    ]
                  expression (src/dumpast.ml[78,2700+4]..[110,3858+3]) ghost
                    Pexp_construct "::" (src/dumpast.ml[78,2700+4]..[110,3858+3]) ghost
                    Some
                      expression (src/dumpast.ml[78,2700+4]..[110,3858+3]) ghost
                        Pexp_tuple
                        [
                          expression (src/dumpast.ml[78,2700+4]..[79,2727+39])
                            Pexp_tuple
                            [
                              expression (src/dumpast.ml[78,2700+4]..[78,2700+8])
                                Pexp_constant PConst_string("-p",None)
                              expression (src/dumpast.ml[78,2700+10]..[78,2700+25])
                                Pexp_construct "String" (src/dumpast.ml[78,2700+10]..[78,2700+16])
                                Some
                                  expression (src/dumpast.ml[78,2700+17]..[78,2700+25])
                                    Pexp_ident "show_pat" (src/dumpast.ml[78,2700+17]..[78,2700+25])
                              expression (src/dumpast.ml[79,2727+4]..[79,2727+39])
                                Pexp_constant PConst_string("<pat> Dump AST for pattern <pat>.",None)
                            ]
                          expression (src/dumpast.ml[81,2769+4]..[110,3858+3]) ghost
                            Pexp_construct "::" (src/dumpast.ml[81,2769+4]..[110,3858+3]) ghost
                            Some
                              expression (src/dumpast.ml[81,2769+4]..[110,3858+3]) ghost
                                Pexp_tuple
                                [
                                  expression (src/dumpast.ml[81,2769+4]..[82,2796+47])
                                    Pexp_tuple
                                    [
                                      expression (src/dumpast.ml[81,2769+4]..[81,2769+8])
                                        Pexp_constant PConst_string("-t",None)
                                      expression (src/dumpast.ml[81,2769+10]..[81,2769+25])
                                        Pexp_construct "String" (src/dumpast.ml[81,2769+10]..[81,2769+16])
                                        Some
                                          expression (src/dumpast.ml[81,2769+17]..[81,2769+25])
                                            Pexp_ident "show_typ" (src/dumpast.ml[81,2769+17]..[81,2769+25])
                                      expression (src/dumpast.ml[82,2796+4]..[82,2796+47])
                                        Pexp_constant PConst_string("<typ> Dump AST for type expression <typ>.",None)
                                    ]
                                  expression (src/dumpast.ml[84,2846+4]..[110,3858+3]) ghost
                                    Pexp_construct "::" (src/dumpast.ml[84,2846+4]..[110,3858+3]) ghost
                                    Some
                                      expression (src/dumpast.ml[84,2846+4]..[110,3858+3]) ghost
                                        Pexp_tuple
                                        [
                                          expression (src/dumpast.ml[84,2846+4]..[85,2901+42])
                                            Pexp_tuple
                                            [
                                              expression (src/dumpast.ml[84,2846+4]..[84,2846+18])
                                                Pexp_constant PConst_string("-loc_discard",None)
                                              expression (src/dumpast.ml[84,2846+20]..[84,2846+53])
                                                Pexp_construct "Unit" (src/dumpast.ml[84,2846+20]..[84,2846+24])
                                                Some
                                                  expression (src/dumpast.ml[84,2846+25]..[84,2846+53])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (src/dumpast.ml[84,2846+30]..[84,2846+32])
                                                      Ppat_construct "()" (src/dumpast.ml[84,2846+30]..[84,2846+32])
                                                      None
                                                    expression (src/dumpast.ml[84,2846+36]..[84,2846+52])
                                                      Pexp_apply
                                                      expression (src/dumpast.ml[84,2846+41]..[84,2846+43])
                                                        Pexp_ident ":=" (src/dumpast.ml[84,2846+41]..[84,2846+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dumpast.ml[84,2846+36]..[84,2846+40])
                                                            Pexp_ident "locs" (src/dumpast.ml[84,2846+36]..[84,2846+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (src/dumpast.ml[84,2846+44]..[84,2846+52])
                                                            Pexp_variant "Discard"
                                                            None
                                                      ]
                                              expression (src/dumpast.ml[85,2901+4]..[85,2901+42])
                                                Pexp_constant PConst_string("  Discard location fields. (default)",None)
                                            ]
                                          expression (src/dumpast.ml[87,2946+4]..[110,3858+3]) ghost
                                            Pexp_construct "::" (src/dumpast.ml[87,2946+4]..[110,3858+3]) ghost
                                            Some
                                              expression (src/dumpast.ml[87,2946+4]..[110,3858+3]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (src/dumpast.ml[87,2946+4]..[88,3007+39])
                                                    Pexp_tuple
                                                    [
                                                      expression (src/dumpast.ml[87,2946+4]..[87,2946+21])
                                                        Pexp_constant PConst_string("-loc_underscore",None)
                                                      expression (src/dumpast.ml[87,2946+23]..[87,2946+59])
                                                        Pexp_construct "Unit" (src/dumpast.ml[87,2946+23]..[87,2946+27])
                                                        Some
                                                          expression (src/dumpast.ml[87,2946+28]..[87,2946+59])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (src/dumpast.ml[87,2946+33]..[87,2946+35])
                                                              Ppat_construct "()" (src/dumpast.ml[87,2946+33]..[87,2946+35])
                                                              None
                                                            expression (src/dumpast.ml[87,2946+39]..[87,2946+58])
                                                              Pexp_apply
                                                              expression (src/dumpast.ml[87,2946+44]..[87,2946+46])
                                                                Pexp_ident ":=" (src/dumpast.ml[87,2946+44]..[87,2946+46])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dumpast.ml[87,2946+39]..[87,2946+43])
                                                                    Pexp_ident "locs" (src/dumpast.ml[87,2946+39]..[87,2946+43])
                                                                <arg>
                                                                Nolabel
                                                                  expression (src/dumpast.ml[87,2946+47]..[87,2946+58])
                                                                    Pexp_variant "Underscore"
                                                                    None
                                                              ]
                                                      expression (src/dumpast.ml[88,3007+4]..[88,3007+39])
                                                        Pexp_constant PConst_string("  Display '_' for location fields",None)
                                                    ]
                                                  expression (src/dumpast.ml[90,3049+4]..[110,3858+3]) ghost
                                                    Pexp_construct "::" (src/dumpast.ml[90,3049+4]..[110,3858+3]) ghost
                                                    Some
                                                      expression (src/dumpast.ml[90,3049+4]..[110,3858+3]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/dumpast.ml[90,3049+4]..[91,3098+45])
                                                            Pexp_tuple
                                                            [
                                                              expression (src/dumpast.ml[90,3049+4]..[90,3049+15])
                                                                Pexp_constant PConst_string("-loc_keep",None)
                                                              expression (src/dumpast.ml[90,3049+17]..[90,3049+47])
                                                                Pexp_construct "Unit" (src/dumpast.ml[90,3049+17]..[90,3049+21])
                                                                Some
                                                                  expression (src/dumpast.ml[90,3049+22]..[90,3049+47])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (src/dumpast.ml[90,3049+27]..[90,3049+29])
                                                                      Ppat_construct "()" (src/dumpast.ml[90,3049+27]..[90,3049+29])
                                                                      None
                                                                    expression (src/dumpast.ml[90,3049+33]..[90,3049+46])
                                                                      Pexp_apply
                                                                      expression (src/dumpast.ml[90,3049+38]..[90,3049+40])
Pexp_ident ":=" (src/dumpast.ml[90,3049+38]..[90,3049+40])
                                                                      [
<arg>
Nolabel
  expression (src/dumpast.ml[90,3049+33]..[90,3049+37])
    Pexp_ident "locs" (src/dumpast.ml[90,3049+33]..[90,3049+37])
<arg>
Nolabel
  expression (src/dumpast.ml[90,3049+41]..[90,3049+46])
    Pexp_variant "Keep"
    None
                                                                      ]
                                                              expression (src/dumpast.ml[91,3098+4]..[91,3098+45])
                                                                Pexp_constant PConst_string("  Display real value of location fields",None)
                                                            ]
                                                          expression (src/dumpast.ml[93,3146+4]..[110,3858+3]) ghost
                                                            Pexp_construct "::" (src/dumpast.ml[93,3146+4]..[110,3858+3]) ghost
                                                            Some
                                                              expression (src/dumpast.ml[93,3146+4]..[110,3858+3]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (src/dumpast.ml[93,3146+4]..[94,3216+49])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (src/dumpast.ml[93,3146+4]..[93,3146+26])
Pexp_constant PConst_string("-attrs_discard_empty",None)
                                                                      expression (src/dumpast.ml[93,3146+28]..[93,3146+68])
Pexp_construct "Unit" (src/dumpast.ml[93,3146+28]..[93,3146+32])
Some
  expression (src/dumpast.ml[93,3146+33]..[93,3146+68])
    Pexp_fun
    Nolabel
    None
    pattern (src/dumpast.ml[93,3146+38]..[93,3146+40])
      Ppat_construct "()" (src/dumpast.ml[93,3146+38]..[93,3146+40])
      None
    expression (src/dumpast.ml[93,3146+44]..[93,3146+67])
      Pexp_apply
      expression (src/dumpast.ml[93,3146+50]..[93,3146+52])
        Pexp_ident ":=" (src/dumpast.ml[93,3146+50]..[93,3146+52])
      [
        <arg>
        Nolabel
          expression (src/dumpast.ml[93,3146+44]..[93,3146+49])
            Pexp_ident "attrs" (src/dumpast.ml[93,3146+44]..[93,3146+49])
        <arg>
        Nolabel
          expression (src/dumpast.ml[93,3146+53]..[93,3146+67])
            Pexp_variant "Discard_empty"
            None
      ]
                                                                      expression (src/dumpast.ml[94,3216+4]..[94,3216+49])
Pexp_constant PConst_string("  Discard empty attribute fields. (default)",None)
                                                                    ]
                                                                  expression (src/dumpast.ml[96,3268+4]..[110,3858+3]) ghost
                                                                    Pexp_construct "::" (src/dumpast.ml[96,3268+4]..[110,3858+3]) ghost
                                                                    Some
                                                                      expression (src/dumpast.ml[96,3268+4]..[110,3858+3]) ghost
Pexp_tuple
[
  expression (src/dumpast.ml[96,3268+4]..[97,3326+37])
    Pexp_tuple
    [
      expression (src/dumpast.ml[96,3268+4]..[96,3268+20])
        Pexp_constant PConst_string("-attrs_discard",None)
      expression (src/dumpast.ml[96,3268+22]..[96,3268+56])
        Pexp_construct "Unit" (src/dumpast.ml[96,3268+22]..[96,3268+26])
        Some
          expression (src/dumpast.ml[96,3268+27]..[96,3268+56])
            Pexp_fun
            Nolabel
            None
            pattern (src/dumpast.ml[96,3268+32]..[96,3268+34])
              Ppat_construct "()" (src/dumpast.ml[96,3268+32]..[96,3268+34])
              None
            expression (src/dumpast.ml[96,3268+38]..[96,3268+55])
              Pexp_apply
              expression (src/dumpast.ml[96,3268+44]..[96,3268+46])
                Pexp_ident ":=" (src/dumpast.ml[96,3268+44]..[96,3268+46])
              [
                <arg>
                Nolabel
                  expression (src/dumpast.ml[96,3268+38]..[96,3268+43])
                    Pexp_ident "attrs" (src/dumpast.ml[96,3268+38]..[96,3268+43])
                <arg>
                Nolabel
                  expression (src/dumpast.ml[96,3268+47]..[96,3268+55])
                    Pexp_variant "Discard"
                    None
              ]
      expression (src/dumpast.ml[97,3326+4]..[97,3326+37])
        Pexp_constant PConst_string("  Discard all attribute fields.",None)
    ]
  expression (src/dumpast.ml[99,3366+4]..[110,3858+3]) ghost
    Pexp_construct "::" (src/dumpast.ml[99,3366+4]..[110,3858+3]) ghost
    Some
      expression (src/dumpast.ml[99,3366+4]..[110,3858+3]) ghost
        Pexp_tuple
        [
          expression (src/dumpast.ml[99,3366+4]..[100,3430+40])
            Pexp_tuple
            [
              expression (src/dumpast.ml[99,3366+4]..[99,3366+23])
                Pexp_constant PConst_string("-attrs_underscore",None)
              expression (src/dumpast.ml[99,3366+25]..[99,3366+62])
                Pexp_construct "Unit" (src/dumpast.ml[99,3366+25]..[99,3366+29])
                Some
                  expression (src/dumpast.ml[99,3366+30]..[99,3366+62])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (src/dumpast.ml[99,3366+35]..[99,3366+37])
                      Ppat_construct "()" (src/dumpast.ml[99,3366+35]..[99,3366+37])
                      None
                    expression (src/dumpast.ml[99,3366+41]..[99,3366+61])
                      Pexp_apply
                      expression (src/dumpast.ml[99,3366+47]..[99,3366+49])
                        Pexp_ident ":=" (src/dumpast.ml[99,3366+47]..[99,3366+49])
                      [
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[99,3366+41]..[99,3366+46])
                            Pexp_ident "attrs" (src/dumpast.ml[99,3366+41]..[99,3366+46])
                        <arg>
                        Nolabel
                          expression (src/dumpast.ml[99,3366+50]..[99,3366+61])
                            Pexp_variant "Underscore"
                            None
                      ]
              expression (src/dumpast.ml[100,3430+4]..[100,3430+40])
                Pexp_constant PConst_string("  Display '_' for attribute fields",None)
            ]
          expression (src/dumpast.ml[102,3473+4]..[110,3858+3]) ghost
            Pexp_construct "::" (src/dumpast.ml[102,3473+4]..[110,3858+3]) ghost
            Some
              expression (src/dumpast.ml[102,3473+4]..[110,3858+3]) ghost
                Pexp_tuple
                [
                  expression (src/dumpast.ml[102,3473+4]..[103,3525+46])
                    Pexp_tuple
                    [
                      expression (src/dumpast.ml[102,3473+4]..[102,3473+17])
                        Pexp_constant PConst_string("-attrs_keep",None)
                      expression (src/dumpast.ml[102,3473+19]..[102,3473+50])
                        Pexp_construct "Unit" (src/dumpast.ml[102,3473+19]..[102,3473+23])
                        Some
                          expression (src/dumpast.ml[102,3473+24]..[102,3473+50])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (src/dumpast.ml[102,3473+29]..[102,3473+31])
                              Ppat_construct "()" (src/dumpast.ml[102,3473+29]..[102,3473+31])
                              None
                            expression (src/dumpast.ml[102,3473+35]..[102,3473+49])
                              Pexp_apply
                              expression (src/dumpast.ml[102,3473+41]..[102,3473+43])
                                Pexp_ident ":=" (src/dumpast.ml[102,3473+41]..[102,3473+43])
                              [
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[102,3473+35]..[102,3473+40])
                                    Pexp_ident "attrs" (src/dumpast.ml[102,3473+35]..[102,3473+40])
                                <arg>
                                Nolabel
                                  expression (src/dumpast.ml[102,3473+44]..[102,3473+49])
                                    Pexp_variant "Keep"
                                    None
                              ]
                      expression (src/dumpast.ml[103,3525+4]..[103,3525+46])
                        Pexp_constant PConst_string("  Display real value of attribute fields",None)
                    ]
                  expression (src/dumpast.ml[105,3574+4]..[110,3858+3]) ghost
                    Pexp_construct "::" (src/dumpast.ml[105,3574+4]..[110,3858+3]) ghost
                    Some
                      expression (src/dumpast.ml[105,3574+4]..[110,3858+3]) ghost
                        Pexp_tuple
                        [
                          expression (src/dumpast.ml[105,3574+4]..[106,3639+60])
                            Pexp_tuple
                            [
                              expression (src/dumpast.ml[105,3574+4]..[105,3574+9])
                                Pexp_constant PConst_string("-pp",None)
                              expression (src/dumpast.ml[105,3574+11]..[105,3574+63])
                                Pexp_construct "Arg.String" (src/dumpast.ml[105,3574+11]..[105,3574+21])
                                Some
                                  expression (src/dumpast.ml[105,3574+22]..[105,3574+63])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (src/dumpast.ml[105,3574+27]..[105,3574+28])
                                      Ppat_var "s" (src/dumpast.ml[105,3574+27]..[105,3574+28])
                                    expression (src/dumpast.ml[105,3574+32]..[105,3574+62])
                                      Pexp_apply
                                      expression (src/dumpast.ml[105,3574+53]..[105,3574+55])
                                        Pexp_ident ":=" (src/dumpast.ml[105,3574+53]..[105,3574+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (src/dumpast.ml[105,3574+32]..[105,3574+52])
                                            Pexp_ident "Clflags.preprocessor" (src/dumpast.ml[105,3574+32]..[105,3574+52])
                                        <arg>
                                        Nolabel
                                          expression (src/dumpast.ml[105,3574+56]..[105,3574+62])
                                            Pexp_construct "Some" (src/dumpast.ml[105,3574+56]..[105,3574+60])
                                            Some
                                              expression (src/dumpast.ml[105,3574+61]..[105,3574+62])
                                                Pexp_ident "s" (src/dumpast.ml[105,3574+61]..[105,3574+62])
                                      ]
                              expression (src/dumpast.ml[106,3639+4]..[106,3639+60])
                                Pexp_constant PConst_string("<command>  Pipe sources through preprocessor <command>",None)
                            ]
                          expression (src/dumpast.ml[108,3702+4]..[110,3858+3]) ghost
                            Pexp_construct "::" (src/dumpast.ml[108,3702+4]..[110,3858+3]) ghost
                            Some
                              expression (src/dumpast.ml[108,3702+4]..[110,3858+3]) ghost
                                Pexp_tuple
                                [
                                  expression (src/dumpast.ml[108,3702+4]..[109,3782+74])
                                    Pexp_tuple
                                    [
                                      expression (src/dumpast.ml[108,3702+4]..[108,3702+10])
                                        Pexp_constant PConst_string("-ppx",None)
                                      expression (src/dumpast.ml[108,3702+12]..[108,3702+78])
                                        Pexp_construct "Arg.String" (src/dumpast.ml[108,3702+12]..[108,3702+22])
                                        Some
                                          expression (src/dumpast.ml[108,3702+23]..[108,3702+78])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (src/dumpast.ml[108,3702+28]..[108,3702+29])
                                              Ppat_var "s" (src/dumpast.ml[108,3702+28]..[108,3702+29])
                                            expression (src/dumpast.ml[108,3702+33]..[108,3702+77])
                                              Pexp_apply
                                              expression (src/dumpast.ml[108,3702+51]..[108,3702+53])
                                                Pexp_ident ":=" (src/dumpast.ml[108,3702+51]..[108,3702+53])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (src/dumpast.ml[108,3702+33]..[108,3702+50])
                                                    Pexp_ident "Compenv.first_ppx" (src/dumpast.ml[108,3702+33]..[108,3702+50])
                                                <arg>
                                                Nolabel
                                                  expression (src/dumpast.ml[108,3702+54]..[108,3702+77])
                                                    Pexp_construct "::" (src/dumpast.ml[108,3702+56]..[108,3702+58])
                                                    Some
                                                      expression (src/dumpast.ml[108,3702+54]..[108,3702+77]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (src/dumpast.ml[108,3702+54]..[108,3702+55])
                                                            Pexp_ident "s" (src/dumpast.ml[108,3702+54]..[108,3702+55])
                                                          expression (src/dumpast.ml[108,3702+59]..[108,3702+77])
                                                            Pexp_apply
                                                            expression (src/dumpast.ml[108,3702+59]..[108,3702+60])
                                                              Pexp_ident "!" (src/dumpast.ml[108,3702+59]..[108,3702+60])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (src/dumpast.ml[108,3702+60]..[108,3702+77])
                                                                  Pexp_ident "Compenv.first_ppx" (src/dumpast.ml[108,3702+60]..[108,3702+77])
                                                            ]
                                                        ]
                                              ]
                                      expression (src/dumpast.ml[109,3782+4]..[109,3782+74])
                                        Pexp_constant PConst_string("<command>  Pipe abstract syntax trees through preprocessor <command>",None)
                                    ]
                                  expression (src/dumpast.ml[110,3858+2]..[110,3858+3]) ghost
                                    Pexp_construct "[]" (src/dumpast.ml[110,3858+2]..[110,3858+3]) ghost
                                    None
                                ]
                        ]
                ]
        ]
]
                                                                ]
                                                        ]
                                                ]
                                        ]
                                ]
                        ]
                ]
    ]
  structure_item (src/dumpast.ml[113,3864+0]..[114,3876+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[113,3864+4]..[113,3864+9])
          Ppat_var "usage" (src/dumpast.ml[113,3864+4]..[113,3864+9])
        expression (src/dumpast.ml[114,3876+2]..[114,3876+63])
          Pexp_apply
          expression (src/dumpast.ml[114,3876+2]..[114,3876+16])
            Pexp_ident "Printf.sprintf" (src/dumpast.ml[114,3876+2]..[114,3876+16])
          [
            <arg>
            Nolabel
              expression (src/dumpast.ml[114,3876+17]..[114,3876+50])
                Pexp_constant PConst_string("%s [options] [.ml/.mli files]\n",None)
            <arg>
            Nolabel
              expression (src/dumpast.ml[114,3876+51]..[114,3876+63])
                Pexp_apply
                expression (src/dumpast.ml[114,3876+51]..[114,3876+63]) ghost
                  Pexp_ident "Array.get" (src/dumpast.ml[114,3876+51]..[114,3876+63]) ghost
                [
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[114,3876+51]..[114,3876+59])
                      Pexp_ident "Sys.argv" (src/dumpast.ml[114,3876+51]..[114,3876+59])
                  <arg>
                  Nolabel
                    expression (src/dumpast.ml[114,3876+61]..[114,3876+62])
                      Pexp_constant PConst_int (0,None)
                ]
          ]
    ]
  structure_item (src/dumpast.ml[116,3941+0]..[121,4123+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[116,3941+4]..[116,3941+6])
          Ppat_construct "()" (src/dumpast.ml[116,3941+4]..[116,3941+6])
          None
        expression (src/dumpast.ml[117,3950+2]..[121,4123+10])
          Pexp_sequence
          expression (src/dumpast.ml[117,3950+2]..[117,3950+58])
            Pexp_apply
            expression (src/dumpast.ml[117,3950+2]..[117,3950+17])
              Pexp_ident "Compenv.readenv" (src/dumpast.ml[117,3950+2]..[117,3950+17])
            [
              <arg>
              Nolabel
                expression (src/dumpast.ml[117,3950+18]..[117,3950+38])
                  Pexp_ident "Format.err_formatter" (src/dumpast.ml[117,3950+18]..[117,3950+38])
              <arg>
              Nolabel
                expression (src/dumpast.ml[117,3950+39]..[117,3950+58])
                  Pexp_construct "Compenv.Before_args" (src/dumpast.ml[117,3950+39]..[117,3950+58])
                  None
            ]
          expression (src/dumpast.ml[118,4010+2]..[121,4123+10])
            Pexp_try
            expression (src/dumpast.ml[118,4010+6]..[118,4010+48])
              Pexp_apply
              expression (src/dumpast.ml[118,4010+6]..[118,4010+15])
                Pexp_ident "Arg.parse" (src/dumpast.ml[118,4010+6]..[118,4010+15])
              [
                <arg>
                Nolabel
                  expression (src/dumpast.ml[118,4010+16]..[118,4010+32])
                    Pexp_apply
                    expression (src/dumpast.ml[118,4010+17]..[118,4010+26])
                      Pexp_ident "Arg.align" (src/dumpast.ml[118,4010+17]..[118,4010+26])
                    [
                      <arg>
                      Nolabel
                        expression (src/dumpast.ml[118,4010+27]..[118,4010+31])
                          Pexp_ident "args" (src/dumpast.ml[118,4010+27]..[118,4010+31])
                    ]
                <arg>
                Nolabel
                  expression (src/dumpast.ml[118,4010+33]..[118,4010+42])
                    Pexp_ident "show_file" (src/dumpast.ml[118,4010+33]..[118,4010+42])
                <arg>
                Nolabel
                  expression (src/dumpast.ml[118,4010+43]..[118,4010+48])
                    Pexp_ident "usage" (src/dumpast.ml[118,4010+43]..[118,4010+48])
              ]
            [
              <case>
                pattern (src/dumpast.ml[119,4059+7]..[119,4059+10])
                  Ppat_var "exn" (src/dumpast.ml[119,4059+7]..[119,4059+10])
                expression (src/dumpast.ml[120,4073+4]..[121,4123+10])
                  Pexp_sequence
                  expression (src/dumpast.ml[120,4073+4]..[120,4073+48])
                    Pexp_apply
                    expression (src/dumpast.ml[120,4073+4]..[120,4073+23])
                      Pexp_ident "Errors.report_error" (src/dumpast.ml[120,4073+4]..[120,4073+23])
                    [
                      <arg>
                      Nolabel
                        expression (src/dumpast.ml[120,4073+24]..[120,4073+44])
                          Pexp_ident "Format.err_formatter" (src/dumpast.ml[120,4073+24]..[120,4073+44])
                      <arg>
                      Nolabel
                        expression (src/dumpast.ml[120,4073+45]..[120,4073+48])
                          Pexp_ident "exn" (src/dumpast.ml[120,4073+45]..[120,4073+48])
                    ]
                  expression (src/dumpast.ml[121,4123+4]..[121,4123+10])
                    Pexp_apply
                    expression (src/dumpast.ml[121,4123+4]..[121,4123+8])
                      Pexp_ident "exit" (src/dumpast.ml[121,4123+4]..[121,4123+8])
                    [
                      <arg>
                      Nolabel
                        expression (src/dumpast.ml[121,4123+9]..[121,4123+10])
                          Pexp_constant PConst_int (2,None)
                    ]
            ]
    ]
]

open Outcometree
let locs = ref (`Discard : [ `Discard  | `Underscore  | `Keep ])
let attrs =
  ref
    (`Discard_empty : [ `Discard  | `Underscore  | `Keep  | `Discard_empty ])
class out_value_builder =
  object
    method record (_ty : string) x =
      let x =
        List.filter (function | (_, Oval_ellipsis) -> false | _ -> true) x in
      let f (l, s) = ((Oide_ident { printed_name = l }), s) in
      Oval_record (List.map f x)
    method constr (_ty : string) (c, args) =
      Oval_constr ((Oide_ident { printed_name = c }), args)
    method list x = Oval_list x
    method array x = Oval_list (Array.to_list x)
    method tuple x = Oval_tuple x
    method int x = Oval_int x
    method string x = Oval_string (x, max_int, Ostr_string)
    method char x = Oval_char x
    method int32 x = Oval_int32 x
    method int64 x = Oval_int64 x
    method nativeint x = Oval_nativeint x
  end
let lift =
  object
    inherit  [_] Ast_lifter.lifter as super
    inherit  out_value_builder
    method! lift_Location_t l =
      match !locs with
      | `Discard -> Oval_ellipsis
      | `Underscore -> Oval_stuff "_"
      | `Keep -> super#lift_Location_t l
    method! lift_Parsetree_attributes l =
      match ((!attrs), l) with
      | (`Discard, _)|(`Discard_empty, []) -> Oval_ellipsis
      | (`Underscore, _) -> Oval_stuff "_"
      | (`Keep, _)|(`Discard_empty, _::_) ->
          super#lift_Parsetree_attributes l
  end
let show lifter parse s =
  let v = lifter (parse (Lexing.from_string s)) in
  Format.printf "%s@.==>@.%a@.=========@." s (!Oprint.out_value) v
let show_expr = show lift#lift_Parsetree_expression Parse.expression
let show_pat = show lift#lift_Parsetree_pattern Parse.pattern
let show_typ = show lift#lift_Parsetree_core_type Parse.core_type
let show_file fn =
  Compenv.readenv Format.err_formatter (Compenv.Before_compile fn);
  (let v =
     if Filename.check_suffix fn ".mli"
     then
       let ast = Pparse.parse_interface ~tool_name:"ocamlc" fn in
       lift#lift_Parsetree_signature ast
     else
       if Filename.check_suffix fn ".ml"
       then
         (let ast = Pparse.parse_implementation ~tool_name:"ocamlc" fn in
          lift#lift_Parsetree_structure ast)
       else failwith (Printf.sprintf "Don't know what to do with file %s" fn) in
   Format.printf "%s@.==>@.%a@.=========@." fn (!Oprint.out_value) v)
let args =
  let open Arg in
    [("-e", (String show_expr), "<expr> Dump AST for expression <expr>.");
    ("-p", (String show_pat), "<pat> Dump AST for pattern <pat>.");
    ("-t", (String show_typ), "<typ> Dump AST for type expression <typ>.");
    ("-loc_discard", (Unit ((fun () -> locs := `Discard))),
      "  Discard location fields. (default)");
    ("-loc_underscore", (Unit ((fun () -> locs := `Underscore))),
      "  Display '_' for location fields");
    ("-loc_keep", (Unit ((fun () -> locs := `Keep))),
      "  Display real value of location fields");
    ("-attrs_discard_empty", (Unit ((fun () -> attrs := `Discard_empty))),
      "  Discard empty attribute fields. (default)");
    ("-attrs_discard", (Unit ((fun () -> attrs := `Discard))),
      "  Discard all attribute fields.");
    ("-attrs_underscore", (Unit ((fun () -> attrs := `Underscore))),
      "  Display '_' for attribute fields");
    ("-attrs_keep", (Unit ((fun () -> attrs := `Keep))),
      "  Display real value of attribute fields");
    ("-pp", (Arg.String ((fun s -> Clflags.preprocessor := (Some s)))),
      "<command>  Pipe sources through preprocessor <command>");
    ("-ppx",
      (Arg.String
         ((fun s -> Compenv.first_ppx := (s :: (!Compenv.first_ppx))))),
      "<command>  Pipe abstract syntax trees through preprocessor <command>")]
let usage = Printf.sprintf "%s [options] [.ml/.mli files]\n" (Sys.argv.(0))
let () =
  Compenv.readenv Format.err_formatter Compenv.Before_args;
  (try Arg.parse (Arg.align args) show_file usage
   with | exn -> (Errors.report_error Format.err_formatter exn; exit 2))
[
  structure_item (src/dumpast.ml[7,273+0]..src/dumpast.ml[7,273+16])
    Tstr_open Fresh
    module_expr (src/dumpast.ml[7,273+5]..src/dumpast.ml[7,273+16])
      Tmod_ident "Outcometree!"
  structure_item (src/dumpast.ml[9,291+0]..src/dumpast.ml[9,291+56])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[9,291+4]..src/dumpast.ml[9,291+8])
          Tpat_var "locs/98"
        expression (src/dumpast.ml[9,291+11]..src/dumpast.ml[9,291+56])
          Texp_apply
          expression (src/dumpast.ml[9,291+11]..src/dumpast.ml[9,291+14])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[9,291+16]..src/dumpast.ml[9,291+24])
                Texp_constraint
                core_type (src/dumpast.ml[9,291+27]..src/dumpast.ml[9,291+55])
                  Ttyp_variant closed=Closed
                  [
                    Ttag "Discard" true
                      []
                    Ttag "Underscore" true
                      []
                    Ttag "Keep" true
                      []
                  ]
                  None
                  Texp_variant "Discard"
                  None
          ]
    ]
  structure_item (src/dumpast.ml[10,348+0]..src/dumpast.ml[10,348+78])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[10,348+4]..src/dumpast.ml[10,348+9])
          Tpat_var "attrs/99"
        expression (src/dumpast.ml[10,348+12]..src/dumpast.ml[10,348+78])
          Texp_apply
          expression (src/dumpast.ml[10,348+12]..src/dumpast.ml[10,348+15])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[10,348+17]..src/dumpast.ml[10,348+31])
                Texp_constraint
                core_type (src/dumpast.ml[10,348+34]..src/dumpast.ml[10,348+77])
                  Ttyp_variant closed=Closed
                  [
                    Ttag "Discard" true
                      []
                    Ttag "Underscore" true
                      []
                    Ttag "Keep" true
                      []
                    Ttag "Discard_empty" true
                      []
                  ]
                  None
                  Texp_variant "Discard_empty"
                  None
          ]
    ]
  structure_item (src/dumpast.ml[12,428+0]..src/dumpast.ml[31,1140+5])
    Tstr_class
    [
      class_declaration (src/dumpast.ml[12,428+0]..src/dumpast.ml[31,1140+5])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "out_value_builder"
        pci_expr =
          class_expr (src/dumpast.ml[13,454+2]..src/dumpast.ml[31,1140+5])
            Tcl_structure
            class_structure
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-1/105"
                pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                  Tpat_alias "selfpat-*/104"
                  pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                    Tpat_any
              [
                class_field (src/dumpast.ml[14,463+4]..src/dumpast.ml[19,655+32])
                  Tcf_method "record" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[14,463+18]..src/dumpast.ml[19,655+32]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/123"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/122"
                          expression (src/dumpast.ml[14,463+18]..src/dumpast.ml[19,655+32]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[14,463+19]..src/dumpast.ml[14,463+22])
                                    Tpat_constraint
                                    core_type (src/dumpast.ml[14,463+25]..src/dumpast.ml[14,463+31])
                                      Ttyp_constr "string/15!"
                                      []
                                    pattern (src/dumpast.ml[14,463+19]..src/dumpast.ml[14,463+22])
                                      Tpat_alias "_ty/124"
                                      pattern (src/dumpast.ml[14,463+19]..src/dumpast.ml[14,463+22])
                                        Tpat_any
                                  expression (src/dumpast.ml[14,463+33]..src/dumpast.ml[19,655+32]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/dumpast.ml[14,463+33]..src/dumpast.ml[14,463+34])
                                          Tpat_var "x/125"
                                        expression (src/dumpast.ml[15,500+6]..src/dumpast.ml[19,655+32])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (src/dumpast.ml[15,500+10]..src/dumpast.ml[15,500+11])
                                                Tpat_var "x/126"
                                              expression (src/dumpast.ml[16,514+8]..src/dumpast.ml[16,514+72])
                                                Texp_apply
                                                expression (src/dumpast.ml[16,514+8]..src/dumpast.ml[16,514+19])
                                                  Texp_ident "Stdlib!.List.filter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (src/dumpast.ml[16,514+20]..src/dumpast.ml[16,514+70])
                                                      Texp_function
                                                      Nolabel
                                                      [
                                                        <case>
                                                          pattern (src/dumpast.ml[16,514+30]..src/dumpast.ml[16,514+48])
                                                            Tpat_tuple
                                                            [
                                                              pattern (src/dumpast.ml[16,514+31]..src/dumpast.ml[16,514+32])
                                                                Tpat_any
                                                              pattern (src/dumpast.ml[16,514+34]..src/dumpast.ml[16,514+47])
                                                                Tpat_construct "Oval_ellipsis"
                                                                []
                                                            ]
                                                          expression (src/dumpast.ml[16,514+52]..src/dumpast.ml[16,514+57])
                                                            Texp_construct "false"
                                                            []
                                                        <case>
                                                          pattern (src/dumpast.ml[16,514+60]..src/dumpast.ml[16,514+61])
                                                            Tpat_any
                                                          expression (src/dumpast.ml[16,514+65]..src/dumpast.ml[16,514+69])
                                                            Texp_construct "true"
                                                            []
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (src/dumpast.ml[16,514+71]..src/dumpast.ml[16,514+72])
                                                      Texp_ident "x/125"
                                                ]
                                          ]
                                          expression (src/dumpast.ml[18,596+6]..src/dumpast.ml[19,655+32])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (src/dumpast.ml[18,596+10]..src/dumpast.ml[18,596+11])
                                                  Tpat_var "f/187"
                                                expression (src/dumpast.ml[18,596+12]..src/dumpast.ml[18,596+55]) ghost
                                                  Texp_function
                                                  Nolabel
                                                  [
                                                    <case>
                                                      pattern (src/dumpast.ml[18,596+12]..src/dumpast.ml[18,596+18])
                                                        Tpat_tuple
                                                        [
                                                          pattern (src/dumpast.ml[18,596+13]..src/dumpast.ml[18,596+14])
                                                            Tpat_var "l/189"
                                                          pattern (src/dumpast.ml[18,596+16]..src/dumpast.ml[18,596+17])
                                                            Tpat_var "s/190"
                                                        ]
                                                      expression (src/dumpast.ml[18,596+21]..src/dumpast.ml[18,596+55])
                                                        Texp_tuple
                                                        [
                                                          expression (src/dumpast.ml[18,596+21]..src/dumpast.ml[18,596+52])
                                                            Texp_construct "Oide_ident"
                                                            [
                                                              expression (src/dumpast.ml[18,596+32]..src/dumpast.ml[18,596+52])
                                                                Texp_record
                                                                  fields =
                                                                    [
                                                                      "printed_name"
                                                                        expression (src/dumpast.ml[18,596+49]..src/dumpast.ml[18,596+50])
                                                                          Texp_ident "l/189"
                                                                    ]
                                                                  representation =
                                                                    Record_regular
                                                                  extended_expression =
                                                                    None
                                                            ]
                                                          expression (src/dumpast.ml[18,596+54]..src/dumpast.ml[18,596+55])
                                                            Texp_ident "s/190"
                                                        ]
                                                  ]
                                            ]
                                            expression (src/dumpast.ml[19,655+6]..src/dumpast.ml[19,655+32])
                                              Texp_construct "Oval_record"
                                              [
                                                expression (src/dumpast.ml[19,655+18]..src/dumpast.ml[19,655+32])
                                                  Texp_apply
                                                  expression (src/dumpast.ml[19,655+19]..src/dumpast.ml[19,655+27])
                                                    Texp_ident "Stdlib!.List.map"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dumpast.ml[19,655+28]..src/dumpast.ml[19,655+29])
                                                        Texp_ident "f/187"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dumpast.ml[19,655+30]..src/dumpast.ml[19,655+31])
                                                        Texp_ident "x/126"
                                                  ]
                                              ]
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[20,688+4]..src/dumpast.ml[21,733+59])
                  Tcf_method "constr" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[20,688+18]..src/dumpast.ml[21,733+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/193"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/192"
                          expression (src/dumpast.ml[20,688+18]..src/dumpast.ml[21,733+59]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[20,688+19]..src/dumpast.ml[20,688+22])
                                    Tpat_constraint
                                    core_type (src/dumpast.ml[20,688+25]..src/dumpast.ml[20,688+31])
                                      Ttyp_constr "string/15!"
                                      []
                                    pattern (src/dumpast.ml[20,688+19]..src/dumpast.ml[20,688+22])
                                      Tpat_alias "_ty/194"
                                      pattern (src/dumpast.ml[20,688+19]..src/dumpast.ml[20,688+22])
                                        Tpat_any
                                  expression (src/dumpast.ml[20,688+33]..src/dumpast.ml[21,733+59]) ghost
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/dumpast.ml[20,688+33]..src/dumpast.ml[20,688+42])
                                          Tpat_tuple
                                          [
                                            pattern (src/dumpast.ml[20,688+34]..src/dumpast.ml[20,688+35])
                                              Tpat_var "c/195"
                                            pattern (src/dumpast.ml[20,688+37]..src/dumpast.ml[20,688+41])
                                              Tpat_var "args/196"
                                          ]
                                        expression (src/dumpast.ml[21,733+8]..src/dumpast.ml[21,733+59])
                                          Texp_construct "Oval_constr"
                                          [
                                            expression (src/dumpast.ml[21,733+21]..src/dumpast.ml[21,733+52])
                                              Texp_construct "Oide_ident"
                                              [
                                                expression (src/dumpast.ml[21,733+32]..src/dumpast.ml[21,733+52])
                                                  Texp_record
                                                    fields =
                                                      [
                                                        "printed_name"
                                                          expression (src/dumpast.ml[21,733+49]..src/dumpast.ml[21,733+50])
                                                            Texp_ident "c/195"
                                                      ]
                                                    representation =
                                                      Record_regular
                                                    extended_expression =
                                                      None
                                              ]
                                            expression (src/dumpast.ml[21,733+54]..src/dumpast.ml[21,733+58])
                                              Texp_ident "args/196"
                                          ]
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[22,793+4]..src/dumpast.ml[22,793+31])
                  Tcf_method "list" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[22,793+16]..src/dumpast.ml[22,793+31]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/199"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/198"
                          expression (src/dumpast.ml[22,793+16]..src/dumpast.ml[22,793+31]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[22,793+16]..src/dumpast.ml[22,793+17])
                                    Tpat_var "x/200"
                                  expression (src/dumpast.ml[22,793+20]..src/dumpast.ml[22,793+31])
                                    Texp_construct "Oval_list"
                                    [
                                      expression (src/dumpast.ml[22,793+30]..src/dumpast.ml[22,793+31])
                                        Texp_ident "x/200"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[23,825+4]..src/dumpast.ml[23,825+48])
                  Tcf_method "array" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[23,825+17]..src/dumpast.ml[23,825+48]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/202"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/201"
                          expression (src/dumpast.ml[23,825+17]..src/dumpast.ml[23,825+48]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[23,825+17]..src/dumpast.ml[23,825+18])
                                    Tpat_var "x/203"
                                  expression (src/dumpast.ml[23,825+21]..src/dumpast.ml[23,825+48])
                                    Texp_construct "Oval_list"
                                    [
                                      expression (src/dumpast.ml[23,825+31]..src/dumpast.ml[23,825+48])
                                        Texp_apply
                                        expression (src/dumpast.ml[23,825+32]..src/dumpast.ml[23,825+45])
                                          Texp_ident "Stdlib!.Array.to_list"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dumpast.ml[23,825+46]..src/dumpast.ml[23,825+47])
                                              Texp_ident "x/203"
                                        ]
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[24,874+4]..src/dumpast.ml[24,874+33])
                  Tcf_method "tuple" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[24,874+17]..src/dumpast.ml[24,874+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/253"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/252"
                          expression (src/dumpast.ml[24,874+17]..src/dumpast.ml[24,874+33]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[24,874+17]..src/dumpast.ml[24,874+18])
                                    Tpat_var "x/254"
                                  expression (src/dumpast.ml[24,874+21]..src/dumpast.ml[24,874+33])
                                    Texp_construct "Oval_tuple"
                                    [
                                      expression (src/dumpast.ml[24,874+32]..src/dumpast.ml[24,874+33])
                                        Texp_ident "x/254"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[25,908+4]..src/dumpast.ml[25,908+29])
                  Tcf_method "int" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[25,908+15]..src/dumpast.ml[25,908+29]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/256"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/255"
                          expression (src/dumpast.ml[25,908+15]..src/dumpast.ml[25,908+29]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[25,908+15]..src/dumpast.ml[25,908+16])
                                    Tpat_var "x/257"
                                  expression (src/dumpast.ml[25,908+19]..src/dumpast.ml[25,908+29])
                                    Texp_construct "Oval_int"
                                    [
                                      expression (src/dumpast.ml[25,908+28]..src/dumpast.ml[25,908+29])
                                        Texp_ident "x/257"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[26,938+4]..src/dumpast.ml[26,938+59])
                  Tcf_method "string" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[26,938+18]..src/dumpast.ml[26,938+59]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/259"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/258"
                          expression (src/dumpast.ml[26,938+18]..src/dumpast.ml[26,938+59]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[26,938+18]..src/dumpast.ml[26,938+19])
                                    Tpat_var "x/260"
                                  expression (src/dumpast.ml[26,938+22]..src/dumpast.ml[26,938+59])
                                    Texp_construct "Oval_string"
                                    [
                                      expression (src/dumpast.ml[26,938+35]..src/dumpast.ml[26,938+36])
                                        Texp_ident "x/260"
                                      expression (src/dumpast.ml[26,938+38]..src/dumpast.ml[26,938+45])
                                        Texp_ident "Stdlib!.max_int"
                                      expression (src/dumpast.ml[26,938+47]..src/dumpast.ml[26,938+58])
                                        Texp_construct "Ostr_string"
                                        []
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[27,998+4]..src/dumpast.ml[27,998+31])
                  Tcf_method "char" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[27,998+16]..src/dumpast.ml[27,998+31]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/262"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/261"
                          expression (src/dumpast.ml[27,998+16]..src/dumpast.ml[27,998+31]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[27,998+16]..src/dumpast.ml[27,998+17])
                                    Tpat_var "x/263"
                                  expression (src/dumpast.ml[27,998+20]..src/dumpast.ml[27,998+31])
                                    Texp_construct "Oval_char"
                                    [
                                      expression (src/dumpast.ml[27,998+30]..src/dumpast.ml[27,998+31])
                                        Texp_ident "x/263"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[28,1030+4]..src/dumpast.ml[28,1030+33])
                  Tcf_method "int32" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[28,1030+17]..src/dumpast.ml[28,1030+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/265"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/264"
                          expression (src/dumpast.ml[28,1030+17]..src/dumpast.ml[28,1030+33]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[28,1030+17]..src/dumpast.ml[28,1030+18])
                                    Tpat_var "x/266"
                                  expression (src/dumpast.ml[28,1030+21]..src/dumpast.ml[28,1030+33])
                                    Texp_construct "Oval_int32"
                                    [
                                      expression (src/dumpast.ml[28,1030+32]..src/dumpast.ml[28,1030+33])
                                        Texp_ident "x/266"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[29,1064+4]..src/dumpast.ml[29,1064+33])
                  Tcf_method "int64" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[29,1064+17]..src/dumpast.ml[29,1064+33]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/268"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/267"
                          expression (src/dumpast.ml[29,1064+17]..src/dumpast.ml[29,1064+33]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[29,1064+17]..src/dumpast.ml[29,1064+18])
                                    Tpat_var "x/269"
                                  expression (src/dumpast.ml[29,1064+21]..src/dumpast.ml[29,1064+33])
                                    Texp_construct "Oval_int64"
                                    [
                                      expression (src/dumpast.ml[29,1064+32]..src/dumpast.ml[29,1064+33])
                                        Texp_ident "x/269"
                                    ]
                              ]
                      ]
                class_field (src/dumpast.ml[30,1098+4]..src/dumpast.ml[30,1098+41])
                  Tcf_method "nativeint" Public
                    Concrete Fresh
                    expression (src/dumpast.ml[30,1098+21]..src/dumpast.ml[30,1098+41]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                            Tpat_alias "self-1/271"
                            pattern (src/dumpast.ml[13,454+8]..src/dumpast.ml[13,454+8]) ghost
                              Tpat_var "self-*/270"
                          expression (src/dumpast.ml[30,1098+21]..src/dumpast.ml[30,1098+41]) ghost
                            Texp_poly
                            None
                              Texp_function
                              Nolabel
                              [
                                <case>
                                  pattern (src/dumpast.ml[30,1098+21]..src/dumpast.ml[30,1098+22])
                                    Tpat_var "x/272"
                                  expression (src/dumpast.ml[30,1098+25]..src/dumpast.ml[30,1098+41])
                                    Texp_construct "Oval_nativeint"
                                    [
                                      expression (src/dumpast.ml[30,1098+40]..src/dumpast.ml[30,1098+41])
                                        Texp_ident "x/272"
                                    ]
                              ]
                      ]
              ]
    ]
  structure_item (src/dumpast.ml[33,1147+0]..src/dumpast.ml[48,1671+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[33,1147+4]..src/dumpast.ml[33,1147+8])
          Tpat_var "lift/273"
        expression (src/dumpast.ml[34,1158+2]..src/dumpast.ml[48,1671+5])
          Texp_object          class_structure
            pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
              Tpat_alias "selfpat-2/275"
              pattern (_none_[0,0+-1].._none_[0,0+-1]) ghost
                Tpat_alias "selfpat-*/274"
                pattern (src/dumpast.ml[34,1158+8]..src/dumpast.ml[34,1158+8]) ghost
                  Tpat_any
            [
              class_field (src/dumpast.ml[35,1167+4]..src/dumpast.ml[35,1167+42])
                Tcf_inherit Fresh
                  class_expr (src/dumpast.ml[35,1167+12]..src/dumpast.ml[35,1167+33])
                    class_expr (src/dumpast.ml[35,1167+12]..src/dumpast.ml[35,1167+33])
                      Tcl_ident "Ast_lifter!.lifter"
                      [
                        core_type (src/dumpast.ml[35,1167+13]..src/dumpast.ml[35,1167+14])
                          Ttyp_any
                      ]
                  Some
                    "super"
              class_field (src/dumpast.ml[36,1210+4]..src/dumpast.ml[36,1210+29])
                Tcf_inherit Fresh
                  class_expr (src/dumpast.ml[36,1210+12]..src/dumpast.ml[36,1210+29])
                    class_expr (src/dumpast.ml[36,1210+12]..src/dumpast.ml[36,1210+29])
                      Tcl_ident "out_value_builder/103"
                      []
                  None
              class_field (src/dumpast.ml[37,1240+4]..src/dumpast.ml[41,1367+42])
                Tcf_method "lift_Location_t" Public
                  Concrete Override
                  expression (src/dumpast.ml[37,1240+28]..src/dumpast.ml[41,1367+42]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/dumpast.ml[34,1158+8]..src/dumpast.ml[34,1158+8]) ghost
                          Tpat_alias "self-2/562"
                          pattern (src/dumpast.ml[34,1158+8]..src/dumpast.ml[34,1158+8]) ghost
                            Tpat_var "self-*/561"
                        expression (src/dumpast.ml[37,1240+28]..src/dumpast.ml[41,1367+42]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/dumpast.ml[37,1240+28]..src/dumpast.ml[37,1240+29])
                                  Tpat_var "l/563"
                                expression (src/dumpast.ml[38,1272+6]..src/dumpast.ml[41,1367+42])
                                  Texp_match
                                  expression (src/dumpast.ml[38,1272+12]..src/dumpast.ml[38,1272+17])
                                    Texp_apply
                                    expression (src/dumpast.ml[38,1272+12]..src/dumpast.ml[38,1272+13])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/dumpast.ml[38,1272+13]..src/dumpast.ml[38,1272+17])
                                          Texp_ident "locs/98"
                                    ]
                                  [
                                    <case>
                                      pattern (src/dumpast.ml[39,1295+8]..src/dumpast.ml[39,1295+16])
                                        Tpat_variant "Discard"
                                        None
                                      expression (src/dumpast.ml[39,1295+20]..src/dumpast.ml[39,1295+33])
                                        Texp_construct "Oval_ellipsis"
                                        []
                                    <case>
                                      pattern (src/dumpast.ml[40,1329+8]..src/dumpast.ml[40,1329+19])
                                        Tpat_variant "Underscore"
                                        None
                                      expression (src/dumpast.ml[40,1329+23]..src/dumpast.ml[40,1329+37])
                                        Texp_construct "Oval_stuff"
                                        [
                                          expression (src/dumpast.ml[40,1329+34]..src/dumpast.ml[40,1329+37])
                                            Texp_constant Const_string("_",None)
                                        ]
                                    <case>
                                      pattern (src/dumpast.ml[41,1367+8]..src/dumpast.ml[41,1367+13])
                                        Tpat_variant "Keep"
                                        None
                                      expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+42])
                                        Texp_apply
                                        expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+40])
                                          Texp_send "lift_Location_t"
                                          expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+22])
                                            Texp_ident "super/454"
                                          Some
                                            expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+40])
                                              Texp_apply
                                              expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+40])
                                                Texp_ident "lift_Location_t/379"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/dumpast.ml[41,1367+17]..src/dumpast.ml[41,1367+22])
                                                    Texp_ident "self-2/562"
                                              ]
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dumpast.ml[41,1367+41]..src/dumpast.ml[41,1367+42])
                                              Texp_ident "l/563"
                                        ]
                                  ]
                            ]
                    ]
              class_field (src/dumpast.ml[42,1410+4]..src/dumpast.ml[47,1625+45])
                Tcf_method "lift_Parsetree_attributes" Public
                  Concrete Override
                  expression (src/dumpast.ml[42,1410+38]..src/dumpast.ml[47,1625+45]) ghost
                    Texp_function
                    Nolabel
                    [
                      <case>
                        pattern (src/dumpast.ml[34,1158+8]..src/dumpast.ml[34,1158+8]) ghost
                          Tpat_alias "self-2/580"
                          pattern (src/dumpast.ml[34,1158+8]..src/dumpast.ml[34,1158+8]) ghost
                            Tpat_var "self-*/579"
                        expression (src/dumpast.ml[42,1410+38]..src/dumpast.ml[47,1625+45]) ghost
                          Texp_poly
                          None
                            Texp_function
                            Nolabel
                            [
                              <case>
                                pattern (src/dumpast.ml[42,1410+38]..src/dumpast.ml[42,1410+39])
                                  Tpat_var "l/581"
                                expression (src/dumpast.ml[43,1452+6]..src/dumpast.ml[47,1625+45])
                                  Texp_match
                                  expression (src/dumpast.ml[43,1452+12]..src/dumpast.ml[43,1452+21])
                                    Texp_tuple
                                    [
                                      expression (src/dumpast.ml[43,1452+12]..src/dumpast.ml[43,1452+18])
                                        Texp_apply
                                        expression (src/dumpast.ml[43,1452+12]..src/dumpast.ml[43,1452+13])
                                          Texp_ident "Stdlib!.!"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dumpast.ml[43,1452+13]..src/dumpast.ml[43,1452+18])
                                              Texp_ident "attrs/99"
                                        ]
                                      expression (src/dumpast.ml[43,1452+20]..src/dumpast.ml[43,1452+21])
                                        Texp_ident "l/581"
                                    ]
                                  [
                                    <case>
                                      pattern (src/dumpast.ml[44,1479+8]..src/dumpast.ml[44,1479+40])
                                        Tpat_or
                                        pattern (src/dumpast.ml[44,1479+8]..src/dumpast.ml[44,1479+19])
                                          Tpat_tuple
                                          [
                                            pattern (src/dumpast.ml[44,1479+8]..src/dumpast.ml[44,1479+16])
                                              Tpat_variant "Discard"
                                              None
                                            pattern (src/dumpast.ml[44,1479+18]..src/dumpast.ml[44,1479+19])
                                              Tpat_any
                                          ]
                                        pattern (src/dumpast.ml[44,1479+22]..src/dumpast.ml[44,1479+40])
                                          Tpat_tuple
                                          [
                                            pattern (src/dumpast.ml[44,1479+22]..src/dumpast.ml[44,1479+36])
                                              Tpat_variant "Discard_empty"
                                              None
                                            pattern (src/dumpast.ml[44,1479+38]..src/dumpast.ml[44,1479+40])
                                              Tpat_construct "[]"
                                              []
                                          ]
                                      expression (src/dumpast.ml[44,1479+44]..src/dumpast.ml[44,1479+57])
                                        Texp_construct "Oval_ellipsis"
                                        []
                                    <case>
                                      pattern (src/dumpast.ml[45,1537+8]..src/dumpast.ml[45,1537+22])
                                        Tpat_tuple
                                        [
                                          pattern (src/dumpast.ml[45,1537+8]..src/dumpast.ml[45,1537+19])
                                            Tpat_variant "Underscore"
                                            None
                                          pattern (src/dumpast.ml[45,1537+21]..src/dumpast.ml[45,1537+22])
                                            Tpat_any
                                        ]
                                      expression (src/dumpast.ml[45,1537+26]..src/dumpast.ml[45,1537+40])
                                        Texp_construct "Oval_stuff"
                                        [
                                          expression (src/dumpast.ml[45,1537+37]..src/dumpast.ml[45,1537+40])
                                            Texp_constant Const_string("_",None)
                                        ]
                                    <case>
                                      pattern (src/dumpast.ml[46,1578+8]..src/dumpast.ml[46,1578+43])
                                        Tpat_or
                                        pattern (src/dumpast.ml[46,1578+8]..src/dumpast.ml[46,1578+16])
                                          Tpat_tuple
                                          [
                                            pattern (src/dumpast.ml[46,1578+8]..src/dumpast.ml[46,1578+13])
                                              Tpat_variant "Keep"
                                              None
                                            pattern (src/dumpast.ml[46,1578+15]..src/dumpast.ml[46,1578+16])
                                              Tpat_any
                                          ]
                                        pattern (src/dumpast.ml[46,1578+19]..src/dumpast.ml[46,1578+43])
                                          Tpat_tuple
                                          [
                                            pattern (src/dumpast.ml[46,1578+20]..src/dumpast.ml[46,1578+34])
                                              Tpat_variant "Discard_empty"
                                              None
                                            pattern (src/dumpast.ml[46,1578+36]..src/dumpast.ml[46,1578+42])
                                              Tpat_construct "::"
                                              [
                                                pattern (src/dumpast.ml[46,1578+36]..src/dumpast.ml[46,1578+37])
                                                  Tpat_any
                                                pattern (src/dumpast.ml[46,1578+41]..src/dumpast.ml[46,1578+42])
                                                  Tpat_any
                                              ]
                                          ]
                                      expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+45])
                                        Texp_apply
                                        expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+43])
                                          Texp_send "lift_Parsetree_attributes"
                                          expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+15])
                                            Texp_ident "super/454"
                                          Some
                                            expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+43])
                                              Texp_apply
                                              expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+43])
                                                Texp_ident "lift_Parsetree_attributes/382"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/dumpast.ml[47,1625+10]..src/dumpast.ml[47,1625+15])
                                                    Texp_ident "self-2/580"
                                              ]
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dumpast.ml[47,1625+44]..src/dumpast.ml[47,1625+45])
                                              Texp_ident "l/581"
                                        ]
                                  ]
                            ]
                    ]
            ]
    ]
  structure_item (src/dumpast.ml[50,1678+0]..src/dumpast.ml[52,1755+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[50,1678+4]..src/dumpast.ml[50,1678+8])
          Tpat_var "show/582"
        expression (src/dumpast.ml[50,1678+9]..src/dumpast.ml[52,1755+64]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/dumpast.ml[50,1678+9]..src/dumpast.ml[50,1678+15])
                Tpat_var "lifter/584"
              expression (src/dumpast.ml[50,1678+16]..src/dumpast.ml[52,1755+64]) ghost
                Texp_function
                Nolabel
                [
                  <case>
                    pattern (src/dumpast.ml[50,1678+16]..src/dumpast.ml[50,1678+21])
                      Tpat_var "parse/585"
                    expression (src/dumpast.ml[50,1678+22]..src/dumpast.ml[52,1755+64]) ghost
                      Texp_function
                      Nolabel
                      [
                        <case>
                          pattern (src/dumpast.ml[50,1678+22]..src/dumpast.ml[50,1678+23])
                            Tpat_var "s/586"
                          expression (src/dumpast.ml[51,1704+2]..src/dumpast.ml[52,1755+64])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (src/dumpast.ml[51,1704+6]..src/dumpast.ml[51,1704+7])
                                  Tpat_var "v/587"
                                expression (src/dumpast.ml[51,1704+10]..src/dumpast.ml[51,1704+47])
                                  Texp_apply
                                  expression (src/dumpast.ml[51,1704+10]..src/dumpast.ml[51,1704+16])
                                    Texp_ident "lifter/584"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (src/dumpast.ml[51,1704+17]..src/dumpast.ml[51,1704+47])
                                        Texp_apply
                                        expression (src/dumpast.ml[51,1704+18]..src/dumpast.ml[51,1704+23])
                                          Texp_ident "parse/585"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (src/dumpast.ml[51,1704+24]..src/dumpast.ml[51,1704+46])
                                              Texp_apply
                                              expression (src/dumpast.ml[51,1704+25]..src/dumpast.ml[51,1704+43])
                                                Texp_ident "Stdlib!.Lexing.from_string"
                                              [
                                                <arg>
                                                  Optional "with_positions"
                                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                                    Texp_construct "None"
                                                    []
                                                <arg>
                                                  Nolabel
                                                  expression (src/dumpast.ml[51,1704+44]..src/dumpast.ml[51,1704+45])
                                                    Texp_ident "s/586"
                                              ]
                                        ]
                                  ]
                            ]
                            expression (src/dumpast.ml[52,1755+2]..src/dumpast.ml[52,1755+64])
                              Texp_apply
                              expression (src/dumpast.ml[52,1755+2]..src/dumpast.ml[52,1755+15])
                                Texp_ident "Stdlib!.Format.printf"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                            [
                                              expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                []
                                              expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                    Texp_constant Const_string("==>",None)
                                                  expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                    [
                                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                        []
                                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Alpha"
                                                        [
                                                          expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                            [
                                                              expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                                []
                                                              expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                    Texp_constant Const_string("=========",None)
                                                                  expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                    [
                                                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                                        []
                                                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                        []
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                      expression (src/dumpast.ml[52,1755+16]..src/dumpast.ml[52,1755+42]) ghost
                                        Texp_constant Const_string("%s@.==>@.%a@.=========@.",None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[52,1755+43]..src/dumpast.ml[52,1755+44])
                                    Texp_ident "s/586"
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[52,1755+45]..src/dumpast.ml[52,1755+62])
                                    Texp_apply
                                    expression (src/dumpast.ml[52,1755+45]..src/dumpast.ml[52,1755+46])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (src/dumpast.ml[52,1755+46]..src/dumpast.ml[52,1755+62])
                                          Texp_ident "Oprint!.out_value"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[52,1755+63]..src/dumpast.ml[52,1755+64])
                                    Texp_ident "v/587"
                              ]
                      ]
                ]
          ]
    ]
  structure_item (src/dumpast.ml[54,1821+0]..src/dumpast.ml[54,1821+72])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[54,1821+4]..src/dumpast.ml[54,1821+13])
          Tpat_var "show_expr/803"
        expression (src/dumpast.ml[54,1821+16]..src/dumpast.ml[54,1821+72])
          Texp_apply
          expression (src/dumpast.ml[54,1821+16]..src/dumpast.ml[54,1821+20])
            Texp_ident "show/582"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[54,1821+21]..src/dumpast.ml[54,1821+55])
                Texp_send "lift_Parsetree_expression"
                expression (src/dumpast.ml[54,1821+22]..src/dumpast.ml[54,1821+26])
                  Texp_ident "lift/273"
                None
            <arg>
              Nolabel
              expression (src/dumpast.ml[54,1821+56]..src/dumpast.ml[54,1821+72])
                Texp_ident "Parse!.expression"
          ]
    ]
  structure_item (src/dumpast.ml[55,1894+0]..src/dumpast.ml[55,1894+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[55,1894+4]..src/dumpast.ml[55,1894+12])
          Tpat_var "show_pat/804"
        expression (src/dumpast.ml[55,1894+15]..src/dumpast.ml[55,1894+65])
          Texp_apply
          expression (src/dumpast.ml[55,1894+15]..src/dumpast.ml[55,1894+19])
            Texp_ident "show/582"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[55,1894+20]..src/dumpast.ml[55,1894+51])
                Texp_send "lift_Parsetree_pattern"
                expression (src/dumpast.ml[55,1894+21]..src/dumpast.ml[55,1894+25])
                  Texp_ident "lift/273"
                None
            <arg>
              Nolabel
              expression (src/dumpast.ml[55,1894+52]..src/dumpast.ml[55,1894+65])
                Texp_ident "Parse!.pattern"
          ]
    ]
  structure_item (src/dumpast.ml[56,1960+0]..src/dumpast.ml[56,1960+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[56,1960+4]..src/dumpast.ml[56,1960+12])
          Tpat_var "show_typ/805"
        expression (src/dumpast.ml[56,1960+15]..src/dumpast.ml[56,1960+69])
          Texp_apply
          expression (src/dumpast.ml[56,1960+15]..src/dumpast.ml[56,1960+19])
            Texp_ident "show/582"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[56,1960+20]..src/dumpast.ml[56,1960+53])
                Texp_send "lift_Parsetree_core_type"
                expression (src/dumpast.ml[56,1960+21]..src/dumpast.ml[56,1960+25])
                  Texp_ident "lift/273"
                None
            <arg>
              Nolabel
              expression (src/dumpast.ml[56,1960+54]..src/dumpast.ml[56,1960+69])
                Texp_ident "Parse!.core_type"
          ]
    ]
  structure_item (src/dumpast.ml[58,2031+0]..src/dumpast.ml[70,2525+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[58,2031+4]..src/dumpast.ml[58,2031+13])
          Tpat_var "show_file/806"
        expression (src/dumpast.ml[58,2031+14]..src/dumpast.ml[70,2525+65]) ghost
          Texp_function
          Nolabel
          [
            <case>
              pattern (src/dumpast.ml[58,2031+14]..src/dumpast.ml[58,2031+16])
                Tpat_var "fn/808"
              expression (src/dumpast.ml[59,2050+2]..src/dumpast.ml[70,2525+65])
                Texp_sequence
                expression (src/dumpast.ml[59,2050+2]..src/dumpast.ml[59,2050+66])
                  Texp_apply
                  expression (src/dumpast.ml[59,2050+2]..src/dumpast.ml[59,2050+17])
                    Texp_ident "Compenv!.readenv"
                  [
                    <arg>
                      Nolabel
                      expression (src/dumpast.ml[59,2050+18]..src/dumpast.ml[59,2050+38])
                        Texp_ident "Stdlib!.Format.err_formatter"
                    <arg>
                      Nolabel
                      expression (src/dumpast.ml[59,2050+39]..src/dumpast.ml[59,2050+66])
                        Texp_construct "Compenv.Before_compile"
                        [
                          expression (src/dumpast.ml[59,2050+63]..src/dumpast.ml[59,2050+65])
                            Texp_ident "fn/808"
                        ]
                  ]
                expression (src/dumpast.ml[60,2118+2]..src/dumpast.ml[70,2525+65])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (src/dumpast.ml[60,2118+6]..src/dumpast.ml[60,2118+7])
                        Tpat_var "v/822"
                      expression (src/dumpast.ml[61,2128+4]..src/dumpast.ml[68,2448+71])
                        Texp_ifthenelse
                        expression (src/dumpast.ml[61,2128+7]..src/dumpast.ml[61,2128+38])
                          Texp_apply
                          expression (src/dumpast.ml[61,2128+7]..src/dumpast.ml[61,2128+28])
                            Texp_ident "Stdlib!.Filename.check_suffix"
                          [
                            <arg>
                              Nolabel
                              expression (src/dumpast.ml[61,2128+29]..src/dumpast.ml[61,2128+31])
                                Texp_ident "fn/808"
                            <arg>
                              Nolabel
                              expression (src/dumpast.ml[61,2128+32]..src/dumpast.ml[61,2128+38])
                                Texp_constant Const_string(".mli",None)
                          ]
                        expression (src/dumpast.ml[62,2172+6]..src/dumpast.ml[63,2237+41])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (src/dumpast.ml[62,2172+10]..src/dumpast.ml[62,2172+13])
                                Tpat_var "ast/845"
                              expression (src/dumpast.ml[62,2172+16]..src/dumpast.ml[62,2172+61])
                                Texp_apply
                                expression (src/dumpast.ml[62,2172+16]..src/dumpast.ml[62,2172+38])
                                  Texp_ident "Pparse!.parse_interface"
                                [
                                  <arg>
                                    Labelled "tool_name"
                                    expression (src/dumpast.ml[62,2172+50]..src/dumpast.ml[62,2172+58])
                                      Texp_constant Const_string("ocamlc",None)
                                  <arg>
                                    Nolabel
                                    expression (src/dumpast.ml[62,2172+59]..src/dumpast.ml[62,2172+61])
                                      Texp_ident "fn/808"
                                ]
                          ]
                          expression (src/dumpast.ml[63,2237+6]..src/dumpast.ml[63,2237+41])
                            Texp_apply
                            expression (src/dumpast.ml[63,2237+6]..src/dumpast.ml[63,2237+37])
                              Texp_send "lift_Parsetree_signature"
                              expression (src/dumpast.ml[63,2237+6]..src/dumpast.ml[63,2237+10])
                                Texp_ident "lift/273"
                              None
                            [
                              <arg>
                                Nolabel
                                expression (src/dumpast.ml[63,2237+38]..src/dumpast.ml[63,2237+41])
                                  Texp_ident "ast/845"
                            ]
                        Some
                          expression (src/dumpast.ml[64,2279+9]..src/dumpast.ml[68,2448+71])
                            Texp_ifthenelse
                            expression (src/dumpast.ml[64,2279+12]..src/dumpast.ml[64,2279+42])
                              Texp_apply
                              expression (src/dumpast.ml[64,2279+12]..src/dumpast.ml[64,2279+33])
                                Texp_ident "Stdlib!.Filename.check_suffix"
                              [
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[64,2279+34]..src/dumpast.ml[64,2279+36])
                                    Texp_ident "fn/808"
                                <arg>
                                  Nolabel
                                  expression (src/dumpast.ml[64,2279+37]..src/dumpast.ml[64,2279+42])
                                    Texp_constant Const_string(".ml",None)
                              ]
                            expression (src/dumpast.ml[65,2327+6]..src/dumpast.ml[66,2397+41])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (src/dumpast.ml[65,2327+10]..src/dumpast.ml[65,2327+13])
                                    Tpat_var "ast/849"
                                  expression (src/dumpast.ml[65,2327+16]..src/dumpast.ml[65,2327+66])
                                    Texp_apply
                                    expression (src/dumpast.ml[65,2327+16]..src/dumpast.ml[65,2327+43])
                                      Texp_ident "Pparse!.parse_implementation"
                                    [
                                      <arg>
                                        Labelled "tool_name"
                                        expression (src/dumpast.ml[65,2327+55]..src/dumpast.ml[65,2327+63])
                                          Texp_constant Const_string("ocamlc",None)
                                      <arg>
                                        Nolabel
                                        expression (src/dumpast.ml[65,2327+64]..src/dumpast.ml[65,2327+66])
                                          Texp_ident "fn/808"
                                    ]
                              ]
                              expression (src/dumpast.ml[66,2397+6]..src/dumpast.ml[66,2397+41])
                                Texp_apply
                                expression (src/dumpast.ml[66,2397+6]..src/dumpast.ml[66,2397+37])
                                  Texp_send "lift_Parsetree_structure"
                                  expression (src/dumpast.ml[66,2397+6]..src/dumpast.ml[66,2397+10])
                                    Texp_ident "lift/273"
                                  None
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/dumpast.ml[66,2397+38]..src/dumpast.ml[66,2397+41])
                                      Texp_ident "ast/849"
                                ]
                            Some
                              expression (src/dumpast.ml[68,2448+6]..src/dumpast.ml[68,2448+71])
                                Texp_apply
                                expression (src/dumpast.ml[68,2448+6]..src/dumpast.ml[68,2448+14])
                                  Texp_ident "Stdlib!.failwith"
                                [
                                  <arg>
                                    Nolabel
                                    expression (src/dumpast.ml[68,2448+15]..src/dumpast.ml[68,2448+71])
                                      Texp_apply
                                      expression (src/dumpast.ml[68,2448+16]..src/dumpast.ml[68,2448+30])
                                        Texp_ident "Stdlib!.Printf.sprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                    Texp_constant Const_string("Don't know what to do with file ",None)
                                                  expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String"
                                                    [
                                                      expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                        []
                                                      expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                              expression (src/dumpast.ml[68,2448+31]..src/dumpast.ml[68,2448+67]) ghost
                                                Texp_constant Const_string("Don't know what to do with file %s",None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (src/dumpast.ml[68,2448+68]..src/dumpast.ml[68,2448+70])
                                            Texp_ident "fn/808"
                                      ]
                                ]
                  ]
                  expression (src/dumpast.ml[70,2525+2]..src/dumpast.ml[70,2525+65])
                    Texp_apply
                    expression (src/dumpast.ml[70,2525+2]..src/dumpast.ml[70,2525+15])
                      Texp_ident "Stdlib!.Format.printf"
                    [
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                              Texp_construct "CamlinternalFormatBasics.String"
                              [
                                expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                  []
                                expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                  [
                                    expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                      []
                                    expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                          Texp_constant Const_string("==>",None)
                                        expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                          [
                                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                              []
                                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Alpha"
                                              [
                                                expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                  [
                                                    expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                      []
                                                    expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                          Texp_constant Const_string("=========",None)
                                                        expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                          [
                                                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Flush_newline"
                                                              []
                                                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                            expression (src/dumpast.ml[70,2525+16]..src/dumpast.ml[70,2525+42]) ghost
                              Texp_constant Const_string("%s@.==>@.%a@.=========@.",None)
                          ]
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[70,2525+43]..src/dumpast.ml[70,2525+45])
                          Texp_ident "fn/808"
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[70,2525+46]..src/dumpast.ml[70,2525+63])
                          Texp_apply
                          expression (src/dumpast.ml[70,2525+46]..src/dumpast.ml[70,2525+47])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (src/dumpast.ml[70,2525+47]..src/dumpast.ml[70,2525+63])
                                Texp_ident "Oprint!.out_value"
                          ]
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[70,2525+64]..src/dumpast.ml[70,2525+65])
                          Texp_ident "v/822"
                    ]
          ]
    ]
  structure_item (src/dumpast.ml[72,2592+0]..src/dumpast.ml[110,3858+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[72,2592+4]..src/dumpast.ml[72,2592+8])
          Tpat_var "args/861"
        expression (src/dumpast.ml[73,2603+2]..src/dumpast.ml[110,3858+3])
          Texp_open Fresh
          module_expr (src/dumpast.ml[73,2603+11]..src/dumpast.ml[73,2603+14])
            Tmod_ident "Stdlib!.Arg"
          expression (src/dumpast.ml[74,2621+2]..src/dumpast.ml[110,3858+3])
            Texp_construct "::"
            [
              expression (src/dumpast.ml[75,2625+4]..src/dumpast.ml[76,2653+44])
                Texp_tuple
                [
                  expression (src/dumpast.ml[75,2625+4]..src/dumpast.ml[75,2625+8])
                    Texp_constant Const_string("-e",None)
                  expression (src/dumpast.ml[75,2625+10]..src/dumpast.ml[75,2625+26])
                    Texp_construct "String"
                    [
                      expression (src/dumpast.ml[75,2625+17]..src/dumpast.ml[75,2625+26])
                        Texp_ident "show_expr/803"
                    ]
                  expression (src/dumpast.ml[76,2653+4]..src/dumpast.ml[76,2653+44])
                    Texp_constant Const_string("<expr> Dump AST for expression <expr>.",None)
                ]
              expression (src/dumpast.ml[78,2700+4]..src/dumpast.ml[110,3858+3]) ghost
                Texp_construct "::"
                [
                  expression (src/dumpast.ml[78,2700+4]..src/dumpast.ml[79,2727+39])
                    Texp_tuple
                    [
                      expression (src/dumpast.ml[78,2700+4]..src/dumpast.ml[78,2700+8])
                        Texp_constant Const_string("-p",None)
                      expression (src/dumpast.ml[78,2700+10]..src/dumpast.ml[78,2700+25])
                        Texp_construct "String"
                        [
                          expression (src/dumpast.ml[78,2700+17]..src/dumpast.ml[78,2700+25])
                            Texp_ident "show_pat/804"
                        ]
                      expression (src/dumpast.ml[79,2727+4]..src/dumpast.ml[79,2727+39])
                        Texp_constant Const_string("<pat> Dump AST for pattern <pat>.",None)
                    ]
                  expression (src/dumpast.ml[81,2769+4]..src/dumpast.ml[110,3858+3]) ghost
                    Texp_construct "::"
                    [
                      expression (src/dumpast.ml[81,2769+4]..src/dumpast.ml[82,2796+47])
                        Texp_tuple
                        [
                          expression (src/dumpast.ml[81,2769+4]..src/dumpast.ml[81,2769+8])
                            Texp_constant Const_string("-t",None)
                          expression (src/dumpast.ml[81,2769+10]..src/dumpast.ml[81,2769+25])
                            Texp_construct "String"
                            [
                              expression (src/dumpast.ml[81,2769+17]..src/dumpast.ml[81,2769+25])
                                Texp_ident "show_typ/805"
                            ]
                          expression (src/dumpast.ml[82,2796+4]..src/dumpast.ml[82,2796+47])
                            Texp_constant Const_string("<typ> Dump AST for type expression <typ>.",None)
                        ]
                      expression (src/dumpast.ml[84,2846+4]..src/dumpast.ml[110,3858+3]) ghost
                        Texp_construct "::"
                        [
                          expression (src/dumpast.ml[84,2846+4]..src/dumpast.ml[85,2901+42])
                            Texp_tuple
                            [
                              expression (src/dumpast.ml[84,2846+4]..src/dumpast.ml[84,2846+18])
                                Texp_constant Const_string("-loc_discard",None)
                              expression (src/dumpast.ml[84,2846+20]..src/dumpast.ml[84,2846+53])
                                Texp_construct "Unit"
                                [
                                  expression (src/dumpast.ml[84,2846+25]..src/dumpast.ml[84,2846+53])
                                    Texp_function
                                    Nolabel
                                    [
                                      <case>
                                        pattern (src/dumpast.ml[84,2846+30]..src/dumpast.ml[84,2846+32])
                                          Tpat_construct "()"
                                          []
                                        expression (src/dumpast.ml[84,2846+36]..src/dumpast.ml[84,2846+52])
                                          Texp_apply
                                          expression (src/dumpast.ml[84,2846+41]..src/dumpast.ml[84,2846+43])
                                            Texp_ident "Stdlib!.:="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (src/dumpast.ml[84,2846+36]..src/dumpast.ml[84,2846+40])
                                                Texp_ident "locs/98"
                                            <arg>
                                              Nolabel
                                              expression (src/dumpast.ml[84,2846+44]..src/dumpast.ml[84,2846+52])
                                                Texp_variant "Discard"
                                                None
                                          ]
                                    ]
                                ]
                              expression (src/dumpast.ml[85,2901+4]..src/dumpast.ml[85,2901+42])
                                Texp_constant Const_string("  Discard location fields. (default)",None)
                            ]
                          expression (src/dumpast.ml[87,2946+4]..src/dumpast.ml[110,3858+3]) ghost
                            Texp_construct "::"
                            [
                              expression (src/dumpast.ml[87,2946+4]..src/dumpast.ml[88,3007+39])
                                Texp_tuple
                                [
                                  expression (src/dumpast.ml[87,2946+4]..src/dumpast.ml[87,2946+21])
                                    Texp_constant Const_string("-loc_underscore",None)
                                  expression (src/dumpast.ml[87,2946+23]..src/dumpast.ml[87,2946+59])
                                    Texp_construct "Unit"
                                    [
                                      expression (src/dumpast.ml[87,2946+28]..src/dumpast.ml[87,2946+59])
                                        Texp_function
                                        Nolabel
                                        [
                                          <case>
                                            pattern (src/dumpast.ml[87,2946+33]..src/dumpast.ml[87,2946+35])
                                              Tpat_construct "()"
                                              []
                                            expression (src/dumpast.ml[87,2946+39]..src/dumpast.ml[87,2946+58])
                                              Texp_apply
                                              expression (src/dumpast.ml[87,2946+44]..src/dumpast.ml[87,2946+46])
                                                Texp_ident "Stdlib!.:="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (src/dumpast.ml[87,2946+39]..src/dumpast.ml[87,2946+43])
                                                    Texp_ident "locs/98"
                                                <arg>
                                                  Nolabel
                                                  expression (src/dumpast.ml[87,2946+47]..src/dumpast.ml[87,2946+58])
                                                    Texp_variant "Underscore"
                                                    None
                                              ]
                                        ]
                                    ]
                                  expression (src/dumpast.ml[88,3007+4]..src/dumpast.ml[88,3007+39])
                                    Texp_constant Const_string("  Display '_' for location fields",None)
                                ]
                              expression (src/dumpast.ml[90,3049+4]..src/dumpast.ml[110,3858+3]) ghost
                                Texp_construct "::"
                                [
                                  expression (src/dumpast.ml[90,3049+4]..src/dumpast.ml[91,3098+45])
                                    Texp_tuple
                                    [
                                      expression (src/dumpast.ml[90,3049+4]..src/dumpast.ml[90,3049+15])
                                        Texp_constant Const_string("-loc_keep",None)
                                      expression (src/dumpast.ml[90,3049+17]..src/dumpast.ml[90,3049+47])
                                        Texp_construct "Unit"
                                        [
                                          expression (src/dumpast.ml[90,3049+22]..src/dumpast.ml[90,3049+47])
                                            Texp_function
                                            Nolabel
                                            [
                                              <case>
                                                pattern (src/dumpast.ml[90,3049+27]..src/dumpast.ml[90,3049+29])
                                                  Tpat_construct "()"
                                                  []
                                                expression (src/dumpast.ml[90,3049+33]..src/dumpast.ml[90,3049+46])
                                                  Texp_apply
                                                  expression (src/dumpast.ml[90,3049+38]..src/dumpast.ml[90,3049+40])
                                                    Texp_ident "Stdlib!.:="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dumpast.ml[90,3049+33]..src/dumpast.ml[90,3049+37])
                                                        Texp_ident "locs/98"
                                                    <arg>
                                                      Nolabel
                                                      expression (src/dumpast.ml[90,3049+41]..src/dumpast.ml[90,3049+46])
                                                        Texp_variant "Keep"
                                                        None
                                                  ]
                                            ]
                                        ]
                                      expression (src/dumpast.ml[91,3098+4]..src/dumpast.ml[91,3098+45])
                                        Texp_constant Const_string("  Display real value of location fields",None)
                                    ]
                                  expression (src/dumpast.ml[93,3146+4]..src/dumpast.ml[110,3858+3]) ghost
                                    Texp_construct "::"
                                    [
                                      expression (src/dumpast.ml[93,3146+4]..src/dumpast.ml[94,3216+49])
                                        Texp_tuple
                                        [
                                          expression (src/dumpast.ml[93,3146+4]..src/dumpast.ml[93,3146+26])
                                            Texp_constant Const_string("-attrs_discard_empty",None)
                                          expression (src/dumpast.ml[93,3146+28]..src/dumpast.ml[93,3146+68])
                                            Texp_construct "Unit"
                                            [
                                              expression (src/dumpast.ml[93,3146+33]..src/dumpast.ml[93,3146+68])
                                                Texp_function
                                                Nolabel
                                                [
                                                  <case>
                                                    pattern (src/dumpast.ml[93,3146+38]..src/dumpast.ml[93,3146+40])
                                                      Tpat_construct "()"
                                                      []
                                                    expression (src/dumpast.ml[93,3146+44]..src/dumpast.ml[93,3146+67])
                                                      Texp_apply
                                                      expression (src/dumpast.ml[93,3146+50]..src/dumpast.ml[93,3146+52])
                                                        Texp_ident "Stdlib!.:="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dumpast.ml[93,3146+44]..src/dumpast.ml[93,3146+49])
                                                            Texp_ident "attrs/99"
                                                        <arg>
                                                          Nolabel
                                                          expression (src/dumpast.ml[93,3146+53]..src/dumpast.ml[93,3146+67])
                                                            Texp_variant "Discard_empty"
                                                            None
                                                      ]
                                                ]
                                            ]
                                          expression (src/dumpast.ml[94,3216+4]..src/dumpast.ml[94,3216+49])
                                            Texp_constant Const_string("  Discard empty attribute fields. (default)",None)
                                        ]
                                      expression (src/dumpast.ml[96,3268+4]..src/dumpast.ml[110,3858+3]) ghost
                                        Texp_construct "::"
                                        [
                                          expression (src/dumpast.ml[96,3268+4]..src/dumpast.ml[97,3326+37])
                                            Texp_tuple
                                            [
                                              expression (src/dumpast.ml[96,3268+4]..src/dumpast.ml[96,3268+20])
                                                Texp_constant Const_string("-attrs_discard",None)
                                              expression (src/dumpast.ml[96,3268+22]..src/dumpast.ml[96,3268+56])
                                                Texp_construct "Unit"
                                                [
                                                  expression (src/dumpast.ml[96,3268+27]..src/dumpast.ml[96,3268+56])
                                                    Texp_function
                                                    Nolabel
                                                    [
                                                      <case>
                                                        pattern (src/dumpast.ml[96,3268+32]..src/dumpast.ml[96,3268+34])
                                                          Tpat_construct "()"
                                                          []
                                                        expression (src/dumpast.ml[96,3268+38]..src/dumpast.ml[96,3268+55])
                                                          Texp_apply
                                                          expression (src/dumpast.ml[96,3268+44]..src/dumpast.ml[96,3268+46])
                                                            Texp_ident "Stdlib!.:="
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (src/dumpast.ml[96,3268+38]..src/dumpast.ml[96,3268+43])
                                                                Texp_ident "attrs/99"
                                                            <arg>
                                                              Nolabel
                                                              expression (src/dumpast.ml[96,3268+47]..src/dumpast.ml[96,3268+55])
                                                                Texp_variant "Discard"
                                                                None
                                                          ]
                                                    ]
                                                ]
                                              expression (src/dumpast.ml[97,3326+4]..src/dumpast.ml[97,3326+37])
                                                Texp_constant Const_string("  Discard all attribute fields.",None)
                                            ]
                                          expression (src/dumpast.ml[99,3366+4]..src/dumpast.ml[110,3858+3]) ghost
                                            Texp_construct "::"
                                            [
                                              expression (src/dumpast.ml[99,3366+4]..src/dumpast.ml[100,3430+40])
                                                Texp_tuple
                                                [
                                                  expression (src/dumpast.ml[99,3366+4]..src/dumpast.ml[99,3366+23])
                                                    Texp_constant Const_string("-attrs_underscore",None)
                                                  expression (src/dumpast.ml[99,3366+25]..src/dumpast.ml[99,3366+62])
                                                    Texp_construct "Unit"
                                                    [
                                                      expression (src/dumpast.ml[99,3366+30]..src/dumpast.ml[99,3366+62])
                                                        Texp_function
                                                        Nolabel
                                                        [
                                                          <case>
                                                            pattern (src/dumpast.ml[99,3366+35]..src/dumpast.ml[99,3366+37])
                                                              Tpat_construct "()"
                                                              []
                                                            expression (src/dumpast.ml[99,3366+41]..src/dumpast.ml[99,3366+61])
                                                              Texp_apply
                                                              expression (src/dumpast.ml[99,3366+47]..src/dumpast.ml[99,3366+49])
                                                                Texp_ident "Stdlib!.:="
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dumpast.ml[99,3366+41]..src/dumpast.ml[99,3366+46])
                                                                    Texp_ident "attrs/99"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (src/dumpast.ml[99,3366+50]..src/dumpast.ml[99,3366+61])
                                                                    Texp_variant "Underscore"
                                                                    None
                                                              ]
                                                        ]
                                                    ]
                                                  expression (src/dumpast.ml[100,3430+4]..src/dumpast.ml[100,3430+40])
                                                    Texp_constant Const_string("  Display '_' for attribute fields",None)
                                                ]
                                              expression (src/dumpast.ml[102,3473+4]..src/dumpast.ml[110,3858+3]) ghost
                                                Texp_construct "::"
                                                [
                                                  expression (src/dumpast.ml[102,3473+4]..src/dumpast.ml[103,3525+46])
                                                    Texp_tuple
                                                    [
                                                      expression (src/dumpast.ml[102,3473+4]..src/dumpast.ml[102,3473+17])
                                                        Texp_constant Const_string("-attrs_keep",None)
                                                      expression (src/dumpast.ml[102,3473+19]..src/dumpast.ml[102,3473+50])
                                                        Texp_construct "Unit"
                                                        [
                                                          expression (src/dumpast.ml[102,3473+24]..src/dumpast.ml[102,3473+50])
                                                            Texp_function
                                                            Nolabel
                                                            [
                                                              <case>
                                                                pattern (src/dumpast.ml[102,3473+29]..src/dumpast.ml[102,3473+31])
                                                                  Tpat_construct "()"
                                                                  []
                                                                expression (src/dumpast.ml[102,3473+35]..src/dumpast.ml[102,3473+49])
                                                                  Texp_apply
                                                                  expression (src/dumpast.ml[102,3473+41]..src/dumpast.ml[102,3473+43])
                                                                    Texp_ident "Stdlib!.:="
                                                                  [
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dumpast.ml[102,3473+35]..src/dumpast.ml[102,3473+40])
                                                                        Texp_ident "attrs/99"
                                                                    <arg>
                                                                      Nolabel
                                                                      expression (src/dumpast.ml[102,3473+44]..src/dumpast.ml[102,3473+49])
                                                                        Texp_variant "Keep"
                                                                        None
                                                                  ]
                                                            ]
                                                        ]
                                                      expression (src/dumpast.ml[103,3525+4]..src/dumpast.ml[103,3525+46])
                                                        Texp_constant Const_string("  Display real value of attribute fields",None)
                                                    ]
                                                  expression (src/dumpast.ml[105,3574+4]..src/dumpast.ml[110,3858+3]) ghost
                                                    Texp_construct "::"
                                                    [
                                                      expression (src/dumpast.ml[105,3574+4]..src/dumpast.ml[106,3639+60])
                                                        Texp_tuple
                                                        [
                                                          expression (src/dumpast.ml[105,3574+4]..src/dumpast.ml[105,3574+9])
                                                            Texp_constant Const_string("-pp",None)
                                                          expression (src/dumpast.ml[105,3574+11]..src/dumpast.ml[105,3574+63])
                                                            Texp_construct "Arg.String"
                                                            [
                                                              expression (src/dumpast.ml[105,3574+22]..src/dumpast.ml[105,3574+63])
                                                                Texp_function
                                                                Nolabel
                                                                [
                                                                  <case>
                                                                    pattern (src/dumpast.ml[105,3574+27]..src/dumpast.ml[105,3574+28])
                                                                      Tpat_var "s/904"
                                                                    expression (src/dumpast.ml[105,3574+32]..src/dumpast.ml[105,3574+62])
                                                                      Texp_apply
                                                                      expression (src/dumpast.ml[105,3574+53]..src/dumpast.ml[105,3574+55])
                                                                        Texp_ident "Stdlib!.:="
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/dumpast.ml[105,3574+32]..src/dumpast.ml[105,3574+52])
                                                                            Texp_ident "Clflags!.preprocessor"
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (src/dumpast.ml[105,3574+56]..src/dumpast.ml[105,3574+62])
                                                                            Texp_construct "Some"
                                                                            [
                                                                              expression (src/dumpast.ml[105,3574+61]..src/dumpast.ml[105,3574+62])
                                                                                Texp_ident "s/904"
                                                                            ]
                                                                      ]
                                                                ]
                                                            ]
                                                          expression (src/dumpast.ml[106,3639+4]..src/dumpast.ml[106,3639+60])
                                                            Texp_constant Const_string("<command>  Pipe sources through preprocessor <command>",None)
                                                        ]
                                                      expression (src/dumpast.ml[108,3702+4]..src/dumpast.ml[110,3858+3]) ghost
                                                        Texp_construct "::"
                                                        [
                                                          expression (src/dumpast.ml[108,3702+4]..src/dumpast.ml[109,3782+74])
                                                            Texp_tuple
                                                            [
                                                              expression (src/dumpast.ml[108,3702+4]..src/dumpast.ml[108,3702+10])
                                                                Texp_constant Const_string("-ppx",None)
                                                              expression (src/dumpast.ml[108,3702+12]..src/dumpast.ml[108,3702+78])
                                                                Texp_construct "Arg.String"
                                                                [
                                                                  expression (src/dumpast.ml[108,3702+23]..src/dumpast.ml[108,3702+78])
                                                                    Texp_function
                                                                    Nolabel
                                                                    [
                                                                      <case>
                                                                        pattern (src/dumpast.ml[108,3702+28]..src/dumpast.ml[108,3702+29])
                                                                          Tpat_var "s/910"
                                                                        expression (src/dumpast.ml[108,3702+33]..src/dumpast.ml[108,3702+77])
                                                                          Texp_apply
                                                                          expression (src/dumpast.ml[108,3702+51]..src/dumpast.ml[108,3702+53])
                                                                            Texp_ident "Stdlib!.:="
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dumpast.ml[108,3702+33]..src/dumpast.ml[108,3702+50])
                                                                                Texp_ident "Compenv!.first_ppx"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (src/dumpast.ml[108,3702+54]..src/dumpast.ml[108,3702+77])
                                                                                Texp_construct "::"
                                                                                [
                                                                                  expression (src/dumpast.ml[108,3702+54]..src/dumpast.ml[108,3702+55])
                                                                                    Texp_ident "s/910"
                                                                                  expression (src/dumpast.ml[108,3702+59]..src/dumpast.ml[108,3702+77])
                                                                                    Texp_apply
                                                                                    expression (src/dumpast.ml[108,3702+59]..src/dumpast.ml[108,3702+60])
                                                                                      Texp_ident "Stdlib!.!"
                                                                                    [
                                                                                      <arg>
                                                                                        Nolabel
                                                                                        expression (src/dumpast.ml[108,3702+60]..src/dumpast.ml[108,3702+77])
                                                                                          Texp_ident "Compenv!.first_ppx"
                                                                                    ]
                                                                                ]
                                                                          ]
                                                                    ]
                                                                ]
                                                              expression (src/dumpast.ml[109,3782+4]..src/dumpast.ml[109,3782+74])
                                                                Texp_constant Const_string("<command>  Pipe abstract syntax trees through preprocessor <command>",None)
                                                            ]
                                                          expression (src/dumpast.ml[110,3858+2]..src/dumpast.ml[110,3858+3]) ghost
                                                            Texp_construct "[]"
                                                            []
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                ]
            ]
    ]
  structure_item (src/dumpast.ml[113,3864+0]..src/dumpast.ml[114,3876+63])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[113,3864+4]..src/dumpast.ml[113,3864+9])
          Tpat_var "usage/911"
        expression (src/dumpast.ml[114,3876+2]..src/dumpast.ml[114,3876+63])
          Texp_apply
          expression (src/dumpast.ml[114,3876+2]..src/dumpast.ml[114,3876+16])
            Texp_ident "Stdlib!.Printf.sprintf"
          [
            <arg>
              Nolabel
              expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50])
                Texp_construct "CamlinternalFormatBasics.Format"
                [
                  expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                    Texp_construct "CamlinternalFormatBasics.String"
                    [
                      expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                        Texp_construct "CamlinternalFormatBasics.No_padding"
                        []
                      expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                        Texp_construct "CamlinternalFormatBasics.String_literal"
                        [
                          expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                            Texp_constant Const_string(" [options] [.ml/.mli files]\n",None)
                          expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                            []
                        ]
                    ]
                  expression (src/dumpast.ml[114,3876+17]..src/dumpast.ml[114,3876+50]) ghost
                    Texp_constant Const_string("%s [options] [.ml/.mli files]\n",None)
                ]
            <arg>
              Nolabel
              expression (src/dumpast.ml[114,3876+51]..src/dumpast.ml[114,3876+63])
                Texp_apply
                expression (src/dumpast.ml[114,3876+51]..src/dumpast.ml[114,3876+63]) ghost
                  Texp_ident "Stdlib!.Array.get"
                [
                  <arg>
                    Nolabel
                    expression (src/dumpast.ml[114,3876+51]..src/dumpast.ml[114,3876+59])
                      Texp_ident "Stdlib!.Sys.argv"
                  <arg>
                    Nolabel
                    expression (src/dumpast.ml[114,3876+61]..src/dumpast.ml[114,3876+62])
                      Texp_constant Const_int 0
                ]
          ]
    ]
  structure_item (src/dumpast.ml[116,3941+0]..src/dumpast.ml[121,4123+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (src/dumpast.ml[116,3941+4]..src/dumpast.ml[116,3941+6])
          Tpat_construct "()"
          []
        expression (src/dumpast.ml[117,3950+2]..src/dumpast.ml[121,4123+10])
          Texp_sequence
          expression (src/dumpast.ml[117,3950+2]..src/dumpast.ml[117,3950+58])
            Texp_apply
            expression (src/dumpast.ml[117,3950+2]..src/dumpast.ml[117,3950+17])
              Texp_ident "Compenv!.readenv"
            [
              <arg>
                Nolabel
                expression (src/dumpast.ml[117,3950+18]..src/dumpast.ml[117,3950+38])
                  Texp_ident "Stdlib!.Format.err_formatter"
              <arg>
                Nolabel
                expression (src/dumpast.ml[117,3950+39]..src/dumpast.ml[117,3950+58])
                  Texp_construct "Compenv.Before_args"
                  []
            ]
          expression (src/dumpast.ml[118,4010+2]..src/dumpast.ml[121,4123+10])
            Texp_try
            expression (src/dumpast.ml[118,4010+6]..src/dumpast.ml[118,4010+48])
              Texp_apply
              expression (src/dumpast.ml[118,4010+6]..src/dumpast.ml[118,4010+15])
                Texp_ident "Stdlib!.Arg.parse"
              [
                <arg>
                  Nolabel
                  expression (src/dumpast.ml[118,4010+16]..src/dumpast.ml[118,4010+32])
                    Texp_apply
                    expression (src/dumpast.ml[118,4010+17]..src/dumpast.ml[118,4010+26])
                      Texp_ident "Stdlib!.Arg.align"
                    [
                      <arg>
                        Optional "limit"
                        expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                          Texp_construct "None"
                          []
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[118,4010+27]..src/dumpast.ml[118,4010+31])
                          Texp_ident "args/861"
                    ]
                <arg>
                  Nolabel
                  expression (src/dumpast.ml[118,4010+33]..src/dumpast.ml[118,4010+42])
                    Texp_ident "show_file/806"
                <arg>
                  Nolabel
                  expression (src/dumpast.ml[118,4010+43]..src/dumpast.ml[118,4010+48])
                    Texp_ident "usage/911"
              ]
            [
              <case>
                pattern (src/dumpast.ml[119,4059+7]..src/dumpast.ml[119,4059+10])
                  Tpat_var "exn/992"
                expression (src/dumpast.ml[120,4073+4]..src/dumpast.ml[121,4123+10])
                  Texp_sequence
                  expression (src/dumpast.ml[120,4073+4]..src/dumpast.ml[120,4073+48])
                    Texp_apply
                    expression (src/dumpast.ml[120,4073+4]..src/dumpast.ml[120,4073+23])
                      Texp_ident "Errors!.report_error"
                    [
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[120,4073+24]..src/dumpast.ml[120,4073+44])
                          Texp_ident "Stdlib!.Format.err_formatter"
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[120,4073+45]..src/dumpast.ml[120,4073+48])
                          Texp_ident "exn/992"
                    ]
                  expression (src/dumpast.ml[121,4123+4]..src/dumpast.ml[121,4123+10])
                    Texp_apply
                    expression (src/dumpast.ml[121,4123+4]..src/dumpast.ml[121,4123+8])
                      Texp_ident "Stdlib!.exit"
                    [
                      <arg>
                        Nolabel
                        expression (src/dumpast.ml[121,4123+9]..src/dumpast.ml[121,4123+10])
                          Texp_constant Const_int 2
                    ]
            ]
    ]
]

(let
  (shared/1828 =a
     [0:
      #"char" #"list" #"constr" #"nativeint" #"record" #"int" #"string"
      #"tuple" #"array" #"int32" #"int64"]
   shared/1863 =a
     [0:
      #"lift_Parsetree_object_field" #"char" #"lift_Asttypes_loc"
      #"lift_Parsetree_core_type" #"lift_Parsetree_structure" #"list"
      #"constr" #"lift_Parsetree_class_signature" #"lift_option"
      #"lift_Parsetree_extension_constructor_kind"
      #"lift_Parsetree_include_infos" #"lift_Parsetree_constructor_arguments"
      #"lift_Parsetree_module_binding" #"lift_Parsetree_class_field_desc"
      #"nativeint" #"lift_Parsetree_with_constraint"
      #"lift_Parsetree_module_expr_desc" #"lift_Parsetree_class_field_kind"
      #"lift_bool" #"lift_Parsetree_class_type_desc"
      #"lift_Parsetree_pattern" #"lift_Parsetree_value_binding"
      #"lift_Parsetree_extension" #"lift_Parsetree_signature_item"
      #"lift_Parsetree_class_type_field_desc"
      #"lift_Parsetree_class_type_field"
      #"lift_Parsetree_signature_item_desc"
      #"lift_Parsetree_open_description" #"lift_Asttypes_override_flag"
      #"lift_Parsetree_structure_item_desc" #"lift_Asttypes_virtual_flag"
      #"lift_Parsetree_open_declaration" #"lift_Parsetree_class_infos"
      #"lift_Parsetree_functor_parameter" #"lift_Parsetree_binding_op"
      #"lift_Parsetree_extension_constructor" #"lift_Parsetree_pattern_desc"
      #"lift_Parsetree_module_declaration"
      #"lift_Parsetree_class_description" #"lift_Parsetree_type_declaration"
      #"lift_Parsetree_class_expr_desc" #"lift_Longident_t"
      #"lift_Parsetree_attribute" #"lift_Asttypes_direction_flag"
      #"lift_Parsetree_constant" #"lift_Parsetree_include_description"
      #"lift_Parsetree_class_structure" #"lift_Parsetree_class_declaration"
      #"lift_Parsetree_type_exception" #"lift_Parsetree_expression_desc"
      #"record" #"lift_Parsetree_case" #"lift_Parsetree_location_stack"
      #"int" #"lift_Parsetree_attributes"
      #"lift_Parsetree_include_declaration" #"lift_Parsetree_package_type"
      #"lift_Parsetree_module_type_declaration" #"lift_Parsetree_row_field"
      #"lift_Parsetree_class_expr" #"lift_Parsetree_label_declaration"
      #"lift_Parsetree_row_field_desc" #"string"
      #"lift_Parsetree_object_field_desc" #"lift_Parsetree_signature"
      #"lift_Parsetree_letop" #"lift_Parsetree_module_substitution"
      #"lift_Parsetree_expression" #"tuple" #"lift_Parsetree_type_extension"
      #"lift_Parsetree_class_type" #"lift_Parsetree_class_type_declaration"
      #"lift_Parsetree_module_expr" #"lift_Asttypes_private_flag" #"array"
      #"lift_Location_t" #"lift_Parsetree_module_type"
      #"lift_Parsetree_constructor_declaration" #"lift_Parsetree_type_kind"
      #"lift_Asttypes_label" #"lift_Asttypes_closed_flag"
      #"lift_Asttypes_arg_label" #"lift_Parsetree_class_field"
      #"lift_Asttypes_variance" #"lift_Stdlib_Lexing_position"
      #"lift_Asttypes_rec_flag" #"lift_Parsetree_core_type_desc"
      #"lift_Parsetree_value_description" #"lift_Parsetree_payload"
      #"lift_Parsetree_open_infos" #"lift_Parsetree_module_type_desc"
      #"int32" #"int64" #"lift_Parsetree_structure_item"
      #"lift_Asttypes_mutable_flag"]
   shared/1858 =a
     [0:
      #"tuple" #"string" #"record" #"nativeint" #"list" #"lift_option"
      #"lift_bool" #"lift_Stdlib_Lexing_position"
      #"lift_Parsetree_with_constraint" #"lift_Parsetree_value_description"
      #"lift_Parsetree_value_binding" #"lift_Parsetree_type_kind"
      #"lift_Parsetree_type_extension" #"lift_Parsetree_type_exception"
      #"lift_Parsetree_type_declaration"
      #"lift_Parsetree_structure_item_desc" #"lift_Parsetree_structure_item"
      #"lift_Parsetree_structure" #"lift_Parsetree_signature_item_desc"
      #"lift_Parsetree_signature_item" #"lift_Parsetree_signature"
      #"lift_Parsetree_row_field_desc" #"lift_Parsetree_row_field"
      #"lift_Parsetree_payload" #"lift_Parsetree_pattern_desc"
      #"lift_Parsetree_pattern" #"lift_Parsetree_package_type"
      #"lift_Parsetree_open_infos" #"lift_Parsetree_open_description"
      #"lift_Parsetree_open_declaration" #"lift_Parsetree_object_field_desc"
      #"lift_Parsetree_object_field" #"lift_Parsetree_module_type_desc"
      #"lift_Parsetree_module_type_declaration" #"lift_Parsetree_module_type"
      #"lift_Parsetree_module_substitution"
      #"lift_Parsetree_module_expr_desc" #"lift_Parsetree_module_expr"
      #"lift_Parsetree_module_declaration" #"lift_Parsetree_module_binding"
      #"lift_Parsetree_location_stack" #"lift_Parsetree_letop"
      #"lift_Parsetree_label_declaration" #"lift_Parsetree_include_infos"
      #"lift_Parsetree_include_description"
      #"lift_Parsetree_include_declaration"
      #"lift_Parsetree_functor_parameter"
      #"lift_Parsetree_extension_constructor_kind"
      #"lift_Parsetree_extension_constructor" #"lift_Parsetree_extension"
      #"lift_Parsetree_expression_desc" #"lift_Parsetree_expression"
      #"lift_Parsetree_core_type_desc" #"lift_Parsetree_core_type"
      #"lift_Parsetree_constructor_declaration"
      #"lift_Parsetree_constructor_arguments" #"lift_Parsetree_constant"
      #"lift_Parsetree_class_type_field_desc"
      #"lift_Parsetree_class_type_field" #"lift_Parsetree_class_type_desc"
      #"lift_Parsetree_class_type_declaration" #"lift_Parsetree_class_type"
      #"lift_Parsetree_class_structure" #"lift_Parsetree_class_signature"
      #"lift_Parsetree_class_infos" #"lift_Parsetree_class_field_kind"
      #"lift_Parsetree_class_field_desc" #"lift_Parsetree_class_field"
      #"lift_Parsetree_class_expr_desc" #"lift_Parsetree_class_expr"
      #"lift_Parsetree_class_description" #"lift_Parsetree_class_declaration"
      #"lift_Parsetree_case" #"lift_Parsetree_binding_op"
      #"lift_Parsetree_attributes" #"lift_Parsetree_attribute"
      #"lift_Longident_t" #"lift_Location_t" #"lift_Asttypes_virtual_flag"
      #"lift_Asttypes_variance" #"lift_Asttypes_rec_flag"
      #"lift_Asttypes_private_flag" #"lift_Asttypes_override_flag"
      #"lift_Asttypes_mutable_flag" #"lift_Asttypes_loc"
      #"lift_Asttypes_label" #"lift_Asttypes_direction_flag"
      #"lift_Asttypes_closed_flag" #"lift_Asttypes_arg_label" #"int64"
      #"int32" #"int" #"constr" #"char" #"array"]
   shared/1823 =a
     [0:
      #"tuple" #"string" #"record" #"nativeint" #"list" #"int64" #"int32"
      #"int" #"constr" #"char" #"array" #"*dummy method*"]
   shared/1854 =a
     [0:
      #"lift_Asttypes_arg_label" #"lift_Asttypes_closed_flag"
      #"lift_Asttypes_direction_flag" #"lift_Asttypes_label"
      #"lift_Asttypes_loc" #"lift_Asttypes_mutable_flag"
      #"lift_Asttypes_override_flag" #"lift_Asttypes_private_flag"
      #"lift_Asttypes_rec_flag" #"lift_Asttypes_variance"
      #"lift_Asttypes_virtual_flag" #"lift_Location_t" #"lift_Longident_t"
      #"lift_Parsetree_attribute" #"lift_Parsetree_attributes"
      #"lift_Parsetree_binding_op" #"lift_Parsetree_case"
      #"lift_Parsetree_class_declaration" #"lift_Parsetree_class_description"
      #"lift_Parsetree_class_expr" #"lift_Parsetree_class_expr_desc"
      #"lift_Parsetree_class_field" #"lift_Parsetree_class_field_desc"
      #"lift_Parsetree_class_field_kind" #"lift_Parsetree_class_infos"
      #"lift_Parsetree_class_signature" #"lift_Parsetree_class_structure"
      #"lift_Parsetree_class_type" #"lift_Parsetree_class_type_declaration"
      #"lift_Parsetree_class_type_desc" #"lift_Parsetree_class_type_field"
      #"lift_Parsetree_class_type_field_desc" #"lift_Parsetree_constant"
      #"lift_Parsetree_constructor_arguments"
      #"lift_Parsetree_constructor_declaration" #"lift_Parsetree_core_type"
      #"lift_Parsetree_core_type_desc" #"lift_Parsetree_expression"
      #"lift_Parsetree_expression_desc" #"lift_Parsetree_extension"
      #"lift_Parsetree_extension_constructor"
      #"lift_Parsetree_extension_constructor_kind"
      #"lift_Parsetree_functor_parameter"
      #"lift_Parsetree_include_declaration"
      #"lift_Parsetree_include_description" #"lift_Parsetree_include_infos"
      #"lift_Parsetree_label_declaration" #"lift_Parsetree_letop"
      #"lift_Parsetree_location_stack" #"lift_Parsetree_module_binding"
      #"lift_Parsetree_module_declaration" #"lift_Parsetree_module_expr"
      #"lift_Parsetree_module_expr_desc"
      #"lift_Parsetree_module_substitution" #"lift_Parsetree_module_type"
      #"lift_Parsetree_module_type_declaration"
      #"lift_Parsetree_module_type_desc" #"lift_Parsetree_object_field"
      #"lift_Parsetree_object_field_desc" #"lift_Parsetree_open_declaration"
      #"lift_Parsetree_open_description" #"lift_Parsetree_open_infos"
      #"lift_Parsetree_package_type" #"lift_Parsetree_pattern"
      #"lift_Parsetree_pattern_desc" #"lift_Parsetree_payload"
      #"lift_Parsetree_row_field" #"lift_Parsetree_row_field_desc"
      #"lift_Parsetree_signature" #"lift_Parsetree_signature_item"
      #"lift_Parsetree_signature_item_desc" #"lift_Parsetree_structure"
      #"lift_Parsetree_structure_item" #"lift_Parsetree_structure_item_desc"
      #"lift_Parsetree_type_declaration" #"lift_Parsetree_type_exception"
      #"lift_Parsetree_type_extension" #"lift_Parsetree_type_kind"
      #"lift_Parsetree_value_binding" #"lift_Parsetree_value_description"
      #"lift_Parsetree_with_constraint" #"lift_Stdlib_Lexing_position"
      #"lift_bool" #"lift_option"]
   shared/1852 =a
     [0:
      #"array" #"char" #"constr" #"int" #"int32" #"int64" #"list"
      #"nativeint" #"record" #"string" #"tuple"]
   shared/1855 =a
     [0: #"tuple" #"string" #"record" #"list" #"int" #"constr" #"char"])
  (seq (setfield_ptr(root-init) 11 (global Dumpast!) (caml_make_vect 5 0))
    (let (locs/98 = (makemutable 0 -310786a))
      (setfield_ptr(root-init) 0 (global Dumpast!) locs/98))
    (let (attrs/99 = (makemutable 0 -814786996a))
      (setfield_ptr(root-init) 1 (global Dumpast!) attrs/99))
    (letrec
      (out_value_builder/103
         (let
           (out_value_builder_tables/1774 =o (makemutable 0 0a 0a 0a)
            out_value_builder_init/1825 =
              (function class/1778
                (let
                  (ids/1822 =
                     (apply (field 7 (global CamlinternalOO!)) class/1778
                       shared/1823)
                   tuple/114 =o (field 0 ids/1822)
                   string/116 =o (field 1 ids/1822)
                   record/110 =o (field 2 ids/1822)
                   nativeint/120 =o (field 3 ids/1822)
                   list/112 =o (field 4 ids/1822)
                   int64/119 =o (field 5 ids/1822)
                   int32/118 =o (field 6 ids/1822)
                   int/115 =o (field 7 ids/1822)
                   constr/111 =o (field 8 ids/1822)
                   char/117 =o (field 9 ids/1822)
                   array/113 =o (field 10 ids/1822)
                   *dummy method*/121 =o (field 11 ids/1822))
                  (seq
                    (apply (field 10 (global CamlinternalOO!)) class/1778
                      (makeblock 0 record/110
                        (let
                          (method_record/1821 =
                             (function self-1/123 _ty/124 x/125
                               (let
                                 (self-*/122 =a self-1/123
                                  x/126 =
                                    (apply (field 37 (global Stdlib__list!))
                                      (function (param/1818, param/1819)
                                        (catch
                                          (if (isint param/1819) 0a (exit 3))
                                         with (3) 1a))
                                      x/125)
                                  f/187 =
                                    (function (param/1815, param/1816)
                                      (let
                                        (s/190 =a param/1816
                                         l/189 =a param/1815)
                                        (makeblock 0
                                          (makeblock 2 (makemutable 0 l/189))
                                          s/190))))
                                 (makeblock 10
                                   (apply (field 16 (global Stdlib__list!))
                                     f/187 x/126)))))
                          method_record/1821)
                        constr/111
                        (let
                          (method_constr/1814 =
                             (function self-1/193 _ty/194 param/197
                               (let
                                 (self-*/192 =a self-1/193
                                  args/196 =a (field 1 param/197)
                                  c/195 =a (field 0 param/197))
                                 (makeblock 2
                                   (makeblock 2 (makemutable 0 c/195))
                                   args/196))))
                          method_constr/1814)
                        list/112
                        (let
                          (method_list/1811 =
                             (function self-1/199 x/200
                               (let (self-*/198 =a self-1/199)
                                 (makeblock 8 x/200))))
                          method_list/1811)
                        array/113
                        (let
                          (method_array/1809 =
                             (function self-1/202 x/203
                               (let (self-*/201 =a self-1/202)
                                 (makeblock 8
                                   (apply (field 10 (global Stdlib__array!))
                                     x/203)))))
                          method_array/1809)
                        tuple/114
                        (let
                          (method_tuple/1807 =
                             (function self-1/253 x/254
                               (let (self-*/252 =a self-1/253)
                                 (makeblock 13 x/254))))
                          method_tuple/1807)
                        int/115
                        (let
                          (method_int/1805 =
                             (function self-1/256 x/257[int]
                               (let (self-*/255 =a self-1/256)
                                 (makeblock 4 (int) x/257))))
                          method_int/1805)
                        string/116
                        (let
                          (method_string/1803 =
                             (function self-1/259 x/260
                               (let (self-*/258 =a self-1/259)
                                 (makeblock 11 (*,int,*) x/260
                                   (field 18 (global Stdlib!)) 0a))))
                          method_string/1803)
                        char/117
                        (let
                          (method_char/1801 =
                             (function self-1/262 x/263[int]
                               (let (self-*/261 =a self-1/262)
                                 (makeblock 1 (int) x/263))))
                          method_char/1801)
                        int32/118
                        (let
                          (method_int32/1799 =
                             (function self-1/265 x/266[int32]
                               (let (self-*/264 =a self-1/265)
                                 (makeblock 5 (int32) x/266))))
                          method_int32/1799)
                        int64/119
                        (let
                          (method_int64/1797 =
                             (function self-1/268 x/269[int64]
                               (let (self-*/267 =a self-1/268)
                                 (makeblock 6 (int64) x/269))))
                          method_int64/1797)
                        nativeint/120
                        (let
                          (method_nativeint/1795 =
                             (function self-1/271 x/272[nativeint]
                               (let (self-*/270 =a self-1/271)
                                 (makeblock 7 (nativeint) x/272))))
                          method_nativeint/1795)))
                    (function env/1780 self/1779
                      (apply (field 23 (global CamlinternalOO!)) self/1779
                        class/1778))))))
           (apply (field 18 (global CamlinternalOO!)) shared/1828
             out_value_builder_init/1825)))
      (setfield_ptr(root-init) 2 (global Dumpast!) out_value_builder/103))
    (let
      (lift/273 =
         (let
           (class_tables/1832 =o (makemutable 0 0a 0a 0a)
            class/1836 =
              (apply (field 15 (global CamlinternalOO!)) shared/1863)
            obj_init/1862 =
              (let
                (ids/1857 =
                   (apply (field 7 (global CamlinternalOO!)) class/1836
                     shared/1858)
                 tuple/560 =o (field 0 ids/1857)
                 string/559 =o (field 1 ids/1857)
                 record/558 =o (field 2 ids/1857)
                 nativeint/557 =o (field 3 ids/1857)
                 list/556 =o (field 4 ids/1857)
                 lift_option/555 =o (field 5 ids/1857)
                 lift_bool/554 =o (field 6 ids/1857)
                 lift_Stdlib_Lexing_position/553 =o (field 7 ids/1857)
                 lift_Parsetree_with_constraint/552 =o (field 8 ids/1857)
                 lift_Parsetree_value_description/551 =o (field 9 ids/1857)
                 lift_Parsetree_value_binding/550 =o (field 10 ids/1857)
                 lift_Parsetree_type_kind/549 =o (field 11 ids/1857)
                 lift_Parsetree_type_extension/548 =o (field 12 ids/1857)
                 lift_Parsetree_type_exception/547 =o (field 13 ids/1857)
                 lift_Parsetree_type_declaration/546 =o (field 14 ids/1857)
                 lift_Parsetree_structure_item_desc/545 =o
                   (field 15 ids/1857)
                 lift_Parsetree_structure_item/544 =o (field 16 ids/1857)
                 lift_Parsetree_structure/543 =o (field 17 ids/1857)
                 lift_Parsetree_signature_item_desc/542 =o
                   (field 18 ids/1857)
                 lift_Parsetree_signature_item/541 =o (field 19 ids/1857)
                 lift_Parsetree_signature/540 =o (field 20 ids/1857)
                 lift_Parsetree_row_field_desc/539 =o (field 21 ids/1857)
                 lift_Parsetree_row_field/538 =o (field 22 ids/1857)
                 lift_Parsetree_payload/537 =o (field 23 ids/1857)
                 lift_Parsetree_pattern_desc/536 =o (field 24 ids/1857)
                 lift_Parsetree_pattern/535 =o (field 25 ids/1857)
                 lift_Parsetree_package_type/534 =o (field 26 ids/1857)
                 lift_Parsetree_open_infos/533 =o (field 27 ids/1857)
                 lift_Parsetree_open_description/532 =o (field 28 ids/1857)
                 lift_Parsetree_open_declaration/531 =o (field 29 ids/1857)
                 lift_Parsetree_object_field_desc/530 =o (field 30 ids/1857)
                 lift_Parsetree_object_field/529 =o (field 31 ids/1857)
                 lift_Parsetree_module_type_desc/528 =o (field 32 ids/1857)
                 lift_Parsetree_module_type_declaration/527 =o
                   (field 33 ids/1857)
                 lift_Parsetree_module_type/526 =o (field 34 ids/1857)
                 lift_Parsetree_module_substitution/525 =o
                   (field 35 ids/1857)
                 lift_Parsetree_module_expr_desc/524 =o (field 36 ids/1857)
                 lift_Parsetree_module_expr/523 =o (field 37 ids/1857)
                 lift_Parsetree_module_declaration/522 =o (field 38 ids/1857)
                 lift_Parsetree_module_binding/521 =o (field 39 ids/1857)
                 lift_Parsetree_location_stack/520 =o (field 40 ids/1857)
                 lift_Parsetree_letop/519 =o (field 41 ids/1857)
                 lift_Parsetree_label_declaration/518 =o (field 42 ids/1857)
                 lift_Parsetree_include_infos/517 =o (field 43 ids/1857)
                 lift_Parsetree_include_description/516 =o
                   (field 44 ids/1857)
                 lift_Parsetree_include_declaration/515 =o
                   (field 45 ids/1857)
                 lift_Parsetree_functor_parameter/514 =o (field 46 ids/1857)
                 lift_Parsetree_extension_constructor_kind/513 =o
                   (field 47 ids/1857)
                 lift_Parsetree_extension_constructor/512 =o
                   (field 48 ids/1857)
                 lift_Parsetree_extension/511 =o (field 49 ids/1857)
                 lift_Parsetree_expression_desc/510 =o (field 50 ids/1857)
                 lift_Parsetree_expression/509 =o (field 51 ids/1857)
                 lift_Parsetree_core_type_desc/508 =o (field 52 ids/1857)
                 lift_Parsetree_core_type/507 =o (field 53 ids/1857)
                 lift_Parsetree_constructor_declaration/506 =o
                   (field 54 ids/1857)
                 lift_Parsetree_constructor_arguments/505 =o
                   (field 55 ids/1857)
                 lift_Parsetree_constant/504 =o (field 56 ids/1857)
                 lift_Parsetree_class_type_field_desc/503 =o
                   (field 57 ids/1857)
                 lift_Parsetree_class_type_field/502 =o (field 58 ids/1857)
                 lift_Parsetree_class_type_desc/501 =o (field 59 ids/1857)
                 lift_Parsetree_class_type_declaration/500 =o
                   (field 60 ids/1857)
                 lift_Parsetree_class_type/499 =o (field 61 ids/1857)
                 lift_Parsetree_class_structure/498 =o (field 62 ids/1857)
                 lift_Parsetree_class_signature/497 =o (field 63 ids/1857)
                 lift_Parsetree_class_infos/496 =o (field 64 ids/1857)
                 lift_Parsetree_class_field_kind/495 =o (field 65 ids/1857)
                 lift_Parsetree_class_field_desc/494 =o (field 66 ids/1857)
                 lift_Parsetree_class_field/493 =o (field 67 ids/1857)
                 lift_Parsetree_class_expr_desc/492 =o (field 68 ids/1857)
                 lift_Parsetree_class_expr/491 =o (field 69 ids/1857)
                 lift_Parsetree_class_description/490 =o (field 70 ids/1857)
                 lift_Parsetree_class_declaration/489 =o (field 71 ids/1857)
                 lift_Parsetree_case/488 =o (field 72 ids/1857)
                 lift_Parsetree_binding_op/487 =o (field 73 ids/1857)
                 lift_Parsetree_attributes/467 =o (field 74 ids/1857)
                 lift_Parsetree_attribute/486 =o (field 75 ids/1857)
                 lift_Longident_t/485 =o (field 76 ids/1857)
                 lift_Location_t/466 =o (field 77 ids/1857)
                 lift_Asttypes_virtual_flag/484 =o (field 78 ids/1857)
                 lift_Asttypes_variance/483 =o (field 79 ids/1857)
                 lift_Asttypes_rec_flag/482 =o (field 80 ids/1857)
                 lift_Asttypes_private_flag/481 =o (field 81 ids/1857)
                 lift_Asttypes_override_flag/480 =o (field 82 ids/1857)
                 lift_Asttypes_mutable_flag/479 =o (field 83 ids/1857)
                 lift_Asttypes_loc/478 =o (field 84 ids/1857)
                 lift_Asttypes_label/477 =o (field 85 ids/1857)
                 lift_Asttypes_direction_flag/476 =o (field 86 ids/1857)
                 lift_Asttypes_closed_flag/475 =o (field 87 ids/1857)
                 lift_Asttypes_arg_label/474 =o (field 88 ids/1857)
                 int64/473 =o (field 89 ids/1857)
                 int32/472 =o (field 90 ids/1857)
                 int/471 =o (field 91 ids/1857)
                 constr/470 =o (field 92 ids/1857)
                 char/469 =o (field 93 ids/1857)
                 array/468 =o (field 94 ids/1857)
                 inh/1856 =
                   (apply (field 17 (global CamlinternalOO!)) class/1836 0a
                     shared/1855 shared/1854 (field 0 (global Ast_lifter!))
                     1a)
                 obj_init/1841 =o (field 0 inh/1856)
                 lift_Asttypes_arg_label/368 =o (field 1 inh/1856)
                 lift_Asttypes_closed_flag/369 =o (field 2 inh/1856)
                 lift_Asttypes_direction_flag/370 =o (field 3 inh/1856)
                 lift_Asttypes_label/371 =o (field 4 inh/1856)
                 lift_Asttypes_loc/372 =o (field 5 inh/1856)
                 lift_Asttypes_mutable_flag/373 =o (field 6 inh/1856)
                 lift_Asttypes_override_flag/374 =o (field 7 inh/1856)
                 lift_Asttypes_private_flag/375 =o (field 8 inh/1856)
                 lift_Asttypes_rec_flag/376 =o (field 9 inh/1856)
                 lift_Asttypes_variance/377 =o (field 10 inh/1856)
                 lift_Asttypes_virtual_flag/378 =o (field 11 inh/1856)
                 lift_Location_t/379 =o (field 12 inh/1856)
                 lift_Longident_t/380 =o (field 13 inh/1856)
                 lift_Parsetree_attribute/381 =o (field 14 inh/1856)
                 lift_Parsetree_attributes/382 =o (field 15 inh/1856)
                 lift_Parsetree_binding_op/383 =o (field 16 inh/1856)
                 lift_Parsetree_case/384 =o (field 17 inh/1856)
                 lift_Parsetree_class_declaration/385 =o (field 18 inh/1856)
                 lift_Parsetree_class_description/386 =o (field 19 inh/1856)
                 lift_Parsetree_class_expr/387 =o (field 20 inh/1856)
                 lift_Parsetree_class_expr_desc/388 =o (field 21 inh/1856)
                 lift_Parsetree_class_field/389 =o (field 22 inh/1856)
                 lift_Parsetree_class_field_desc/390 =o (field 23 inh/1856)
                 lift_Parsetree_class_field_kind/391 =o (field 24 inh/1856)
                 lift_Parsetree_class_infos/392 =o (field 25 inh/1856)
                 lift_Parsetree_class_signature/393 =o (field 26 inh/1856)
                 lift_Parsetree_class_structure/394 =o (field 27 inh/1856)
                 lift_Parsetree_class_type/395 =o (field 28 inh/1856)
                 lift_Parsetree_class_type_declaration/396 =o
                   (field 29 inh/1856)
                 lift_Parsetree_class_type_desc/397 =o (field 30 inh/1856)
                 lift_Parsetree_class_type_field/398 =o (field 31 inh/1856)
                 lift_Parsetree_class_type_field_desc/399 =o
                   (field 32 inh/1856)
                 lift_Parsetree_constant/400 =o (field 33 inh/1856)
                 lift_Parsetree_constructor_arguments/401 =o
                   (field 34 inh/1856)
                 lift_Parsetree_constructor_declaration/402 =o
                   (field 35 inh/1856)
                 lift_Parsetree_core_type/403 =o (field 36 inh/1856)
                 lift_Parsetree_core_type_desc/404 =o (field 37 inh/1856)
                 lift_Parsetree_expression/405 =o (field 38 inh/1856)
                 lift_Parsetree_expression_desc/406 =o (field 39 inh/1856)
                 lift_Parsetree_extension/407 =o (field 40 inh/1856)
                 lift_Parsetree_extension_constructor/408 =o
                   (field 41 inh/1856)
                 lift_Parsetree_extension_constructor_kind/409 =o
                   (field 42 inh/1856)
                 lift_Parsetree_functor_parameter/410 =o (field 43 inh/1856)
                 lift_Parsetree_include_declaration/411 =o
                   (field 44 inh/1856)
                 lift_Parsetree_include_description/412 =o
                   (field 45 inh/1856)
                 lift_Parsetree_include_infos/413 =o (field 46 inh/1856)
                 lift_Parsetree_label_declaration/414 =o (field 47 inh/1856)
                 lift_Parsetree_letop/415 =o (field 48 inh/1856)
                 lift_Parsetree_location_stack/416 =o (field 49 inh/1856)
                 lift_Parsetree_module_binding/417 =o (field 50 inh/1856)
                 lift_Parsetree_module_declaration/418 =o (field 51 inh/1856)
                 lift_Parsetree_module_expr/419 =o (field 52 inh/1856)
                 lift_Parsetree_module_expr_desc/420 =o (field 53 inh/1856)
                 lift_Parsetree_module_substitution/421 =o
                   (field 54 inh/1856)
                 lift_Parsetree_module_type/422 =o (field 55 inh/1856)
                 lift_Parsetree_module_type_declaration/423 =o
                   (field 56 inh/1856)
                 lift_Parsetree_module_type_desc/424 =o (field 57 inh/1856)
                 lift_Parsetree_object_field/425 =o (field 58 inh/1856)
                 lift_Parsetree_object_field_desc/426 =o (field 59 inh/1856)
                 lift_Parsetree_open_declaration/427 =o (field 60 inh/1856)
                 lift_Parsetree_open_description/428 =o (field 61 inh/1856)
                 lift_Parsetree_open_infos/429 =o (field 62 inh/1856)
                 lift_Parsetree_package_type/430 =o (field 63 inh/1856)
                 lift_Parsetree_pattern/431 =o (field 64 inh/1856)
                 lift_Parsetree_pattern_desc/432 =o (field 65 inh/1856)
                 lift_Parsetree_payload/433 =o (field 66 inh/1856)
                 lift_Parsetree_row_field/434 =o (field 67 inh/1856)
                 lift_Parsetree_row_field_desc/435 =o (field 68 inh/1856)
                 lift_Parsetree_signature/436 =o (field 69 inh/1856)
                 lift_Parsetree_signature_item/437 =o (field 70 inh/1856)
                 lift_Parsetree_signature_item_desc/438 =o
                   (field 71 inh/1856)
                 lift_Parsetree_structure/439 =o (field 72 inh/1856)
                 lift_Parsetree_structure_item/440 =o (field 73 inh/1856)
                 lift_Parsetree_structure_item_desc/441 =o
                   (field 74 inh/1856)
                 lift_Parsetree_type_declaration/442 =o (field 75 inh/1856)
                 lift_Parsetree_type_exception/443 =o (field 76 inh/1856)
                 lift_Parsetree_type_extension/444 =o (field 77 inh/1856)
                 lift_Parsetree_type_kind/445 =o (field 78 inh/1856)
                 lift_Parsetree_value_binding/446 =o (field 79 inh/1856)
                 lift_Parsetree_value_description/447 =o (field 80 inh/1856)
                 lift_Parsetree_with_constraint/448 =o (field 81 inh/1856)
                 lift_Stdlib_Lexing_position/449 =o (field 82 inh/1856)
                 lift_bool/450 =o (field 83 inh/1856)
                 lift_option/451 =o (field 84 inh/1856)
                 inh/1853 =
                   (apply (field 17 (global CamlinternalOO!)) class/1836 0a
                     0a shared/1852 (field 2 (global Dumpast!)) 1a)
                 obj_init/1840 =o (field 0 inh/1853)
                 array/455 =o (field 1 inh/1853)
                 char/456 =o (field 2 inh/1853)
                 constr/457 =o (field 3 inh/1853)
                 int/458 =o (field 4 inh/1853)
                 int32/459 =o (field 5 inh/1853)
                 int64/460 =o (field 6 inh/1853)
                 list/461 =o (field 7 inh/1853)
                 nativeint/462 =o (field 8 inh/1853)
                 record/463 =o (field 9 inh/1853)
                 string/464 =o (field 10 inh/1853)
                 tuple/465 =o (field 11 inh/1853))
                (seq
                  (apply (field 10 (global CamlinternalOO!)) class/1836
                    (makeblock 0 lift_Location_t/466
                      (let
                        (method_lift_Location_t/1851 =
                           (function self-2/562 l/563
                             (let
                               (self-*/561 =a self-2/562
                                *match*/1849 =
                                  (field 0 (field 0 (global Dumpast!))))
                               (catch
                                 (if (!= *match*/1849 -310786)
                                   (if (>= *match*/1849 836762789)
                                     (apply lift_Location_t/379 self-2/562
                                       l/563)
                                     (exit 7))
                                   0a)
                                with (7) [12: "_"]))))
                        method_lift_Location_t/1851)
                      lift_Parsetree_attributes/467
                      (let
                        (method_lift_Parsetree_attributes/1848 =
                           (function self-2/580 l/581
                             (let
                               (self-*/579 =a self-2/580
                                *match*/1842 =
                                  (field 0 (field 1 (global Dumpast!)))
                                *match*/1843 = *match*/1842
                                *match*/1844 = l/581)
                               (catch
                                 (catch
                                   (catch
                                     (if (>= *match*/1843 -310786)
                                       (if (>= *match*/1843 836762789)
                                         (exit 5) (exit 4))
                                       (if (>= *match*/1843 -814786996)
                                         (if *match*/1844
                                           (let
                                             (*match*/1846 =a
                                                (field 1 *match*/1844)
                                              *match*/1845 =a
                                                (field 0 *match*/1844))
                                             (exit 5))
                                           (exit 4))
                                         (exit 6)))
                                    with (6) [12: "_"])
                                  with (4) 0a)
                                with (5)
                                 (apply lift_Parsetree_attributes/382
                                   self-2/580 l/581)))))
                        method_lift_Parsetree_attributes/1848)))
                  (function env/1838
                    (let
                      (self/1839 =
                         (apply (field 23 (global CamlinternalOO!)) 0a
                           class/1836))
                      (seq
                        (seq (apply obj_init/1841 self/1839)
                          (apply obj_init/1840 self/1839))
                        (apply (field 25 (global CamlinternalOO!)) 0a
                          self/1839 class/1836)))))))
           (seq (apply (field 16 (global CamlinternalOO!)) class/1836)
             (apply obj_init/1862 0a))))
      (setfield_ptr(root-init) 3 (global Dumpast!) lift/273))
    (let
      (show/582 =
         (function lifter/584 parse/585 s/586
           (let
             (v/587 =
                (apply lifter/584
                  (apply parse/585
                    (apply (field 2 (global Stdlib__lexing!)) 0a s/586))))
             (apply (field 123 (global Stdlib__format!))
               [0:
                [2:
                 0a
                 [17:
                  4a
                  [11:
                   "==>"
                   [17: 4a [15: [17: 4a [11: "=========" [17: 4a 0a]]]]]]]]
                "%s@.==>@.%a@.=========@."]
               s/586 (field 0 (field 1 (global Oprint!))) v/587))))
      (setfield_ptr(root-init) 4 (global Dumpast!) show/582))
    (let
      (show_expr/803 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) 395951706
             (field 11 (global Dumpast!)) 0)
           (field 5 (global Parse!))))
      (setfield_ptr(root-init) 5 (global Dumpast!) show_expr/803))
    (let
      (show_pat/804 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) -548033458
             (field 11 (global Dumpast!)) 1)
           (field 6 (global Parse!))))
      (setfield_ptr(root-init) 6 (global Dumpast!) show_pat/804))
    (let
      (show_typ/805 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) -968746408
             (field 11 (global Dumpast!)) 2)
           (field 4 (global Parse!))))
      (setfield_ptr(root-init) 7 (global Dumpast!) show_typ/805))
    (let
      (show_file/806 =
         (function fn/808
           (seq
             (apply (field 15 (global Compenv!))
               (field 105 (global Stdlib__format!)) (makeblock 0 fn/808))
             (let
               (v/822 =
                  (if
                    (apply (field 6 (global Stdlib__filename!)) fn/808
                      ".mli")
                    (let
                      (ast/845 =
                         (apply (field 11 (global Pparse!)) "ocamlc" fn/808))
                      (sendcache (field 3 (global Dumpast!)) 348013686
                        (field 11 (global Dumpast!)) 4 ast/845))
                    (if
                      (apply (field 6 (global Stdlib__filename!)) fn/808
                        ".ml")
                      (let
                        (ast/849 =
                           (apply (field 10 (global Pparse!)) "ocamlc"
                             fn/808))
                        (sendcache (field 3 (global Dumpast!)) -962464335
                          (field 11 (global Dumpast!)) 3 ast/849))
                      (apply (field 1 (global Stdlib!))
                        (apply (field 3 (global Stdlib__printf!))
                          [0:
                           [11:
                            "Don't know what to do with file " [2: 0a 0a]]
                           "Don't know what to do with file %s"]
                          fn/808)))))
               (apply (field 123 (global Stdlib__format!))
                 [0:
                  [2:
                   0a
                   [17:
                    4a
                    [11:
                     "==>"
                     [17: 4a [15: [17: 4a [11: "=========" [17: 4a 0a]]]]]]]]
                  "%s@.==>@.%a@.=========@."]
                 fn/808 (field 0 (field 1 (global Oprint!))) v/822)))))
      (setfield_ptr(root-init) 8 (global Dumpast!) show_file/806))
    (let
      (args/861 =
         (makeblock 0
           (makeblock 0 "-e" (makeblock 4 (field 5 (global Dumpast!)))
             "<expr> Dump AST for expression <expr>.")
           (makeblock 0
             (makeblock 0 "-p" (makeblock 4 (field 6 (global Dumpast!)))
               "<pat> Dump AST for pattern <pat>.")
             (makeblock 0
               (makeblock 0 "-t" (makeblock 4 (field 7 (global Dumpast!)))
                 "<typ> Dump AST for type expression <typ>.")
               (makeblock 0
                 (makeblock 0 "-loc_discard"
                   (makeblock 0
                     (function param/897
                       (setfield_imm 0 (field 0 (global Dumpast!)) -310786a)))
                   "  Discard location fields. (default)")
                 (makeblock 0
                   (makeblock 0 "-loc_underscore"
                     (makeblock 0
                       (function param/898
                         (setfield_imm 0 (field 0 (global Dumpast!))
                           -911610022a)))
                     "  Display '_' for location fields")
                   (makeblock 0
                     (makeblock 0 "-loc_keep"
                       (makeblock 0
                         (function param/899
                           (setfield_imm 0 (field 0 (global Dumpast!))
                             836762789a)))
                       "  Display real value of location fields")
                     (makeblock 0
                       (makeblock 0 "-attrs_discard_empty"
                         (makeblock 0
                           (function param/900
                             (setfield_imm 0 (field 1 (global Dumpast!))
                               -814786996a)))
                         "  Discard empty attribute fields. (default)")
                       (makeblock 0
                         (makeblock 0 "-attrs_discard"
                           (makeblock 0
                             (function param/901
                               (setfield_imm 0 (field 1 (global Dumpast!))
                                 -310786a)))
                           "  Discard all attribute fields.")
                         (makeblock 0
                           (makeblock 0 "-attrs_underscore"
                             (makeblock 0
                               (function param/902
                                 (setfield_imm 0 (field 1 (global Dumpast!))
                                   -911610022a)))
                             "  Display '_' for attribute fields")
                           (makeblock 0
                             (makeblock 0 "-attrs_keep"
                               (makeblock 0
                                 (function param/903
                                   (setfield_imm 0
                                     (field 1 (global Dumpast!)) 836762789a)))
                               "  Display real value of attribute fields")
                             (makeblock 0
                               (makeblock 0 "-pp"
                                 (makeblock 4
                                   (function s/904
                                     (setfield_ptr 0
                                       (field 32 (global Clflags!))
                                       (makeblock 0 s/904))))
                                 "<command>  Pipe sources through preprocessor <command>")
                               (makeblock 0
                                 (makeblock 0 "-ppx"
                                   (makeblock 4
                                     (function s/910
                                       (setfield_ptr 0
                                         (field 9 (global Compenv!))
                                         (makeblock 0 s/910
                                           (field 0
                                             (field 9 (global Compenv!)))))))
                                   "<command>  Pipe abstract syntax trees through preprocessor <command>")
                                 0a)))))))))))))
      (setfield_ptr(root-init) 9 (global Dumpast!) args/861))
    (let
      (usage/911 =
         (apply (field 3 (global Stdlib__printf!))
           [0:
            [2: 0a [11: " [options] [.ml/.mli files]\n" 0a]]
            "%s [options] [.ml/.mli files]\n"]
           (array.get[addr] (caml_sys_argv 0a) 0)))
      (setfield_ptr(root-init) 10 (global Dumpast!) usage/911))
    (let
      (*match*/2128 =
         (seq
           (apply (field 15 (global Compenv!))
             (field 105 (global Stdlib__format!)) 0a)
           (try
             (apply (field 0 (global Stdlib__arg!))
               (apply (field 10 (global Stdlib__arg!)) 0a
                 (field 9 (global Dumpast!)))
               (field 8 (global Dumpast!)) (field 10 (global Dumpast!)))
            with exn/992
             (seq
               (apply (field 0 (global Errors!))
                 (field 105 (global Stdlib__format!)) exn/992)
               (apply (field 98 (global Stdlib!)) 2)))))
      0a)
    0a))
(let
  (shared/1823 =a
     [0:
      #"tuple" #"string" #"record" #"nativeint" #"list" #"int64" #"int32"
      #"int" #"constr" #"char" #"array" #"*dummy method*"])
  (seq (setfield_ptr(root-init) 11 (global Dumpast!) (caml_make_vect 5 0))
    (let (locs/98 = (makemutable 0 -310786a))
      (setfield_ptr(root-init) 0 (global Dumpast!) locs/98))
    (let (attrs/99 = (makemutable 0 -814786996a))
      (setfield_ptr(root-init) 1 (global Dumpast!) attrs/99))
    (letrec
      (out_value_builder/103
         (let
           (out_value_builder_init/1825 =
              (function class/1778
                (let
                  (ids/1822 =
                     (apply (field 7 (global CamlinternalOO!)) class/1778
                       shared/1823)
                   tuple/114 =o (field 0 ids/1822)
                   string/116 =o (field 1 ids/1822)
                   record/110 =o (field 2 ids/1822)
                   nativeint/120 =o (field 3 ids/1822)
                   list/112 =o (field 4 ids/1822)
                   int64/119 =o (field 5 ids/1822)
                   int32/118 =o (field 6 ids/1822)
                   int/115 =o (field 7 ids/1822)
                   constr/111 =o (field 8 ids/1822)
                   char/117 =o (field 9 ids/1822)
                   array/113 =o (field 10 ids/1822))
                  (seq
                    (apply (field 10 (global CamlinternalOO!)) class/1778
                      (makeblock 0 record/110
                        (function self-1/123 _ty/124 x/125
                          (let
                            (x/126 =
                               (apply (field 37 (global Stdlib__list!))
                                 (function (param/1818, param/1819)
                                   (if (isint param/1819) 0a 1a))
                                 x/125)
                             f/187 =
                               (function (param/1815, param/1816)
                                 (makeblock 0
                                   (makeblock 2 (makemutable 0 param/1815))
                                   param/1816)))
                            (makeblock 10
                              (apply (field 16 (global Stdlib__list!)) f/187
                                x/126))))
                        constr/111
                        (function self-1/193 _ty/194 param/197
                          (makeblock 2
                            (makeblock 2 (makemutable 0 (field 0 param/197)))
                            (field 1 param/197)))
                        list/112
                        (function self-1/199 x/200 (makeblock 8 x/200))
                        array/113
                        (function self-1/202 x/203
                          (makeblock 8
                            (apply (field 10 (global Stdlib__array!)) x/203)))
                        tuple/114
                        (function self-1/253 x/254 (makeblock 13 x/254))
                        int/115
                        (function self-1/256 x/257[int]
                          (makeblock 4 (int) x/257))
                        string/116
                        (function self-1/259 x/260
                          (makeblock 11 (*,int,*) x/260
                            (field 18 (global Stdlib!)) 0a))
                        char/117
                        (function self-1/262 x/263[int]
                          (makeblock 1 (int) x/263))
                        int32/118
                        (function self-1/265 x/266[int32]
                          (makeblock 5 (int32) x/266))
                        int64/119
                        (function self-1/268 x/269[int64]
                          (makeblock 6 (int64) x/269))
                        nativeint/120
                        (function self-1/271 x/272[nativeint]
                          (makeblock 7 (nativeint) x/272))))
                    (function env/1780 self/1779
                      (apply (field 23 (global CamlinternalOO!)) self/1779
                        class/1778))))))
           (apply (field 18 (global CamlinternalOO!))
             [0:
              #"char" #"list" #"constr" #"nativeint" #"record" #"int"
              #"string" #"tuple" #"array" #"int32" #"int64"]
             out_value_builder_init/1825)))
      (setfield_ptr(root-init) 2 (global Dumpast!) out_value_builder/103))
    (let
      (lift/273 =
         (let
           (class/1836 =
              (apply (field 15 (global CamlinternalOO!))
                [0:
                 #"lift_Parsetree_object_field" #"char" #"lift_Asttypes_loc"
                 #"lift_Parsetree_core_type" #"lift_Parsetree_structure"
                 #"list" #"constr" #"lift_Parsetree_class_signature"
                 #"lift_option" #"lift_Parsetree_extension_constructor_kind"
                 #"lift_Parsetree_include_infos"
                 #"lift_Parsetree_constructor_arguments"
                 #"lift_Parsetree_module_binding"
                 #"lift_Parsetree_class_field_desc" #"nativeint"
                 #"lift_Parsetree_with_constraint"
                 #"lift_Parsetree_module_expr_desc"
                 #"lift_Parsetree_class_field_kind" #"lift_bool"
                 #"lift_Parsetree_class_type_desc" #"lift_Parsetree_pattern"
                 #"lift_Parsetree_value_binding" #"lift_Parsetree_extension"
                 #"lift_Parsetree_signature_item"
                 #"lift_Parsetree_class_type_field_desc"
                 #"lift_Parsetree_class_type_field"
                 #"lift_Parsetree_signature_item_desc"
                 #"lift_Parsetree_open_description"
                 #"lift_Asttypes_override_flag"
                 #"lift_Parsetree_structure_item_desc"
                 #"lift_Asttypes_virtual_flag"
                 #"lift_Parsetree_open_declaration"
                 #"lift_Parsetree_class_infos"
                 #"lift_Parsetree_functor_parameter"
                 #"lift_Parsetree_binding_op"
                 #"lift_Parsetree_extension_constructor"
                 #"lift_Parsetree_pattern_desc"
                 #"lift_Parsetree_module_declaration"
                 #"lift_Parsetree_class_description"
                 #"lift_Parsetree_type_declaration"
                 #"lift_Parsetree_class_expr_desc" #"lift_Longident_t"
                 #"lift_Parsetree_attribute" #"lift_Asttypes_direction_flag"
                 #"lift_Parsetree_constant"
                 #"lift_Parsetree_include_description"
                 #"lift_Parsetree_class_structure"
                 #"lift_Parsetree_class_declaration"
                 #"lift_Parsetree_type_exception"
                 #"lift_Parsetree_expression_desc" #"record"
                 #"lift_Parsetree_case" #"lift_Parsetree_location_stack"
                 #"int" #"lift_Parsetree_attributes"
                 #"lift_Parsetree_include_declaration"
                 #"lift_Parsetree_package_type"
                 #"lift_Parsetree_module_type_declaration"
                 #"lift_Parsetree_row_field" #"lift_Parsetree_class_expr"
                 #"lift_Parsetree_label_declaration"
                 #"lift_Parsetree_row_field_desc" #"string"
                 #"lift_Parsetree_object_field_desc"
                 #"lift_Parsetree_signature" #"lift_Parsetree_letop"
                 #"lift_Parsetree_module_substitution"
                 #"lift_Parsetree_expression" #"tuple"
                 #"lift_Parsetree_type_extension"
                 #"lift_Parsetree_class_type"
                 #"lift_Parsetree_class_type_declaration"
                 #"lift_Parsetree_module_expr" #"lift_Asttypes_private_flag"
                 #"array" #"lift_Location_t" #"lift_Parsetree_module_type"
                 #"lift_Parsetree_constructor_declaration"
                 #"lift_Parsetree_type_kind" #"lift_Asttypes_label"
                 #"lift_Asttypes_closed_flag" #"lift_Asttypes_arg_label"
                 #"lift_Parsetree_class_field" #"lift_Asttypes_variance"
                 #"lift_Stdlib_Lexing_position" #"lift_Asttypes_rec_flag"
                 #"lift_Parsetree_core_type_desc"
                 #"lift_Parsetree_value_description"
                 #"lift_Parsetree_payload" #"lift_Parsetree_open_infos"
                 #"lift_Parsetree_module_type_desc" #"int32" #"int64"
                 #"lift_Parsetree_structure_item"
                 #"lift_Asttypes_mutable_flag"])
            obj_init/1862 =
              (let
                (ids/1857 =
                   (apply (field 7 (global CamlinternalOO!)) class/1836
                     [0:
                      #"tuple" #"string" #"record" #"nativeint" #"list"
                      #"lift_option" #"lift_bool"
                      #"lift_Stdlib_Lexing_position"
                      #"lift_Parsetree_with_constraint"
                      #"lift_Parsetree_value_description"
                      #"lift_Parsetree_value_binding"
                      #"lift_Parsetree_type_kind"
                      #"lift_Parsetree_type_extension"
                      #"lift_Parsetree_type_exception"
                      #"lift_Parsetree_type_declaration"
                      #"lift_Parsetree_structure_item_desc"
                      #"lift_Parsetree_structure_item"
                      #"lift_Parsetree_structure"
                      #"lift_Parsetree_signature_item_desc"
                      #"lift_Parsetree_signature_item"
                      #"lift_Parsetree_signature"
                      #"lift_Parsetree_row_field_desc"
                      #"lift_Parsetree_row_field" #"lift_Parsetree_payload"
                      #"lift_Parsetree_pattern_desc"
                      #"lift_Parsetree_pattern"
                      #"lift_Parsetree_package_type"
                      #"lift_Parsetree_open_infos"
                      #"lift_Parsetree_open_description"
                      #"lift_Parsetree_open_declaration"
                      #"lift_Parsetree_object_field_desc"
                      #"lift_Parsetree_object_field"
                      #"lift_Parsetree_module_type_desc"
                      #"lift_Parsetree_module_type_declaration"
                      #"lift_Parsetree_module_type"
                      #"lift_Parsetree_module_substitution"
                      #"lift_Parsetree_module_expr_desc"
                      #"lift_Parsetree_module_expr"
                      #"lift_Parsetree_module_declaration"
                      #"lift_Parsetree_module_binding"
                      #"lift_Parsetree_location_stack"
                      #"lift_Parsetree_letop"
                      #"lift_Parsetree_label_declaration"
                      #"lift_Parsetree_include_infos"
                      #"lift_Parsetree_include_description"
                      #"lift_Parsetree_include_declaration"
                      #"lift_Parsetree_functor_parameter"
                      #"lift_Parsetree_extension_constructor_kind"
                      #"lift_Parsetree_extension_constructor"
                      #"lift_Parsetree_extension"
                      #"lift_Parsetree_expression_desc"
                      #"lift_Parsetree_expression"
                      #"lift_Parsetree_core_type_desc"
                      #"lift_Parsetree_core_type"
                      #"lift_Parsetree_constructor_declaration"
                      #"lift_Parsetree_constructor_arguments"
                      #"lift_Parsetree_constant"
                      #"lift_Parsetree_class_type_field_desc"
                      #"lift_Parsetree_class_type_field"
                      #"lift_Parsetree_class_type_desc"
                      #"lift_Parsetree_class_type_declaration"
                      #"lift_Parsetree_class_type"
                      #"lift_Parsetree_class_structure"
                      #"lift_Parsetree_class_signature"
                      #"lift_Parsetree_class_infos"
                      #"lift_Parsetree_class_field_kind"
                      #"lift_Parsetree_class_field_desc"
                      #"lift_Parsetree_class_field"
                      #"lift_Parsetree_class_expr_desc"
                      #"lift_Parsetree_class_expr"
                      #"lift_Parsetree_class_description"
                      #"lift_Parsetree_class_declaration"
                      #"lift_Parsetree_case" #"lift_Parsetree_binding_op"
                      #"lift_Parsetree_attributes"
                      #"lift_Parsetree_attribute" #"lift_Longident_t"
                      #"lift_Location_t" #"lift_Asttypes_virtual_flag"
                      #"lift_Asttypes_variance" #"lift_Asttypes_rec_flag"
                      #"lift_Asttypes_private_flag"
                      #"lift_Asttypes_override_flag"
                      #"lift_Asttypes_mutable_flag" #"lift_Asttypes_loc"
                      #"lift_Asttypes_label" #"lift_Asttypes_direction_flag"
                      #"lift_Asttypes_closed_flag" #"lift_Asttypes_arg_label"
                      #"int64" #"int32" #"int" #"constr" #"char" #"array"])
                 lift_Parsetree_attributes/467 =o (field 74 ids/1857)
                 lift_Location_t/466 =o (field 77 ids/1857)
                 inh/1856 =
                   (apply (field 17 (global CamlinternalOO!)) class/1836 0a
                     [0:
                      #"tuple" #"string" #"record" #"list" #"int" #"constr"
                      #"char"]
                     [0:
                      #"lift_Asttypes_arg_label" #"lift_Asttypes_closed_flag"
                      #"lift_Asttypes_direction_flag" #"lift_Asttypes_label"
                      #"lift_Asttypes_loc" #"lift_Asttypes_mutable_flag"
                      #"lift_Asttypes_override_flag"
                      #"lift_Asttypes_private_flag" #"lift_Asttypes_rec_flag"
                      #"lift_Asttypes_variance" #"lift_Asttypes_virtual_flag"
                      #"lift_Location_t" #"lift_Longident_t"
                      #"lift_Parsetree_attribute"
                      #"lift_Parsetree_attributes"
                      #"lift_Parsetree_binding_op" #"lift_Parsetree_case"
                      #"lift_Parsetree_class_declaration"
                      #"lift_Parsetree_class_description"
                      #"lift_Parsetree_class_expr"
                      #"lift_Parsetree_class_expr_desc"
                      #"lift_Parsetree_class_field"
                      #"lift_Parsetree_class_field_desc"
                      #"lift_Parsetree_class_field_kind"
                      #"lift_Parsetree_class_infos"
                      #"lift_Parsetree_class_signature"
                      #"lift_Parsetree_class_structure"
                      #"lift_Parsetree_class_type"
                      #"lift_Parsetree_class_type_declaration"
                      #"lift_Parsetree_class_type_desc"
                      #"lift_Parsetree_class_type_field"
                      #"lift_Parsetree_class_type_field_desc"
                      #"lift_Parsetree_constant"
                      #"lift_Parsetree_constructor_arguments"
                      #"lift_Parsetree_constructor_declaration"
                      #"lift_Parsetree_core_type"
                      #"lift_Parsetree_core_type_desc"
                      #"lift_Parsetree_expression"
                      #"lift_Parsetree_expression_desc"
                      #"lift_Parsetree_extension"
                      #"lift_Parsetree_extension_constructor"
                      #"lift_Parsetree_extension_constructor_kind"
                      #"lift_Parsetree_functor_parameter"
                      #"lift_Parsetree_include_declaration"
                      #"lift_Parsetree_include_description"
                      #"lift_Parsetree_include_infos"
                      #"lift_Parsetree_label_declaration"
                      #"lift_Parsetree_letop"
                      #"lift_Parsetree_location_stack"
                      #"lift_Parsetree_module_binding"
                      #"lift_Parsetree_module_declaration"
                      #"lift_Parsetree_module_expr"
                      #"lift_Parsetree_module_expr_desc"
                      #"lift_Parsetree_module_substitution"
                      #"lift_Parsetree_module_type"
                      #"lift_Parsetree_module_type_declaration"
                      #"lift_Parsetree_module_type_desc"
                      #"lift_Parsetree_object_field"
                      #"lift_Parsetree_object_field_desc"
                      #"lift_Parsetree_open_declaration"
                      #"lift_Parsetree_open_description"
                      #"lift_Parsetree_open_infos"
                      #"lift_Parsetree_package_type"
                      #"lift_Parsetree_pattern"
                      #"lift_Parsetree_pattern_desc"
                      #"lift_Parsetree_payload" #"lift_Parsetree_row_field"
                      #"lift_Parsetree_row_field_desc"
                      #"lift_Parsetree_signature"
                      #"lift_Parsetree_signature_item"
                      #"lift_Parsetree_signature_item_desc"
                      #"lift_Parsetree_structure"
                      #"lift_Parsetree_structure_item"
                      #"lift_Parsetree_structure_item_desc"
                      #"lift_Parsetree_type_declaration"
                      #"lift_Parsetree_type_exception"
                      #"lift_Parsetree_type_extension"
                      #"lift_Parsetree_type_kind"
                      #"lift_Parsetree_value_binding"
                      #"lift_Parsetree_value_description"
                      #"lift_Parsetree_with_constraint"
                      #"lift_Stdlib_Lexing_position" #"lift_bool"
                      #"lift_option"]
                     (field 0 (global Ast_lifter!)) 1a)
                 obj_init/1841 =o (field 0 inh/1856)
                 lift_Location_t/379 =o (field 12 inh/1856)
                 lift_Parsetree_attributes/382 =o (field 15 inh/1856)
                 inh/1853 =
                   (apply (field 17 (global CamlinternalOO!)) class/1836 0a
                     0a
                     [0:
                      #"array" #"char" #"constr" #"int" #"int32" #"int64"
                      #"list" #"nativeint" #"record" #"string" #"tuple"]
                     (field 2 (global Dumpast!)) 1a)
                 obj_init/1840 =o (field 0 inh/1853))
                (seq
                  (apply (field 10 (global CamlinternalOO!)) class/1836
                    (makeblock 0 lift_Location_t/466
                      (function self-2/562 l/563
                        (let
                          (*match*/1849 =
                             (field 0 (field 0 (global Dumpast!))))
                          (if (!= *match*/1849 -310786)
                            (if (>= *match*/1849 836762789)
                              (apply lift_Location_t/379 self-2/562 l/563)
                              [12: "_"])
                            0a)))
                      lift_Parsetree_attributes/467
                      (function self-2/580 l/581
                        (let
                          (*match*/1842 =
                             (field 0 (field 1 (global Dumpast!))))
                          (catch
                            (catch
                              (if (>= *match*/1842 -310786)
                                (if (>= *match*/1842 836762789) (exit 5)
                                  (exit 4))
                                (if (>= *match*/1842 -814786996)
                                  (if l/581 (exit 5) (exit 4)) [12: "_"]))
                             with (4) 0a)
                           with (5)
                            (apply lift_Parsetree_attributes/382 self-2/580
                              l/581))))))
                  (function env/1838
                    (let
                      (self/1839 =
                         (apply (field 23 (global CamlinternalOO!)) 0a
                           class/1836))
                      (seq
                        (seq (apply obj_init/1841 self/1839)
                          (apply obj_init/1840 self/1839))
                        (apply (field 25 (global CamlinternalOO!)) 0a
                          self/1839 class/1836)))))))
           (seq (apply (field 16 (global CamlinternalOO!)) class/1836)
             (apply obj_init/1862 0a))))
      (setfield_ptr(root-init) 3 (global Dumpast!) lift/273))
    (let
      (show/582 =
         (function lifter/584 parse/585 s/586
           (let
             (v/587 =
                (apply lifter/584
                  (apply parse/585
                    (apply (field 2 (global Stdlib__lexing!)) 0a s/586))))
             (apply (field 123 (global Stdlib__format!))
               [0:
                [2:
                 0a
                 [17:
                  4a
                  [11:
                   "==>"
                   [17: 4a [15: [17: 4a [11: "=========" [17: 4a 0a]]]]]]]]
                "%s@.==>@.%a@.=========@."]
               s/586 (field 0 (field 1 (global Oprint!))) v/587))))
      (setfield_ptr(root-init) 4 (global Dumpast!) show/582))
    (let
      (show_expr/803 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) 395951706
             (field 11 (global Dumpast!)) 0)
           (field 5 (global Parse!))))
      (setfield_ptr(root-init) 5 (global Dumpast!) show_expr/803))
    (let
      (show_pat/804 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) -548033458
             (field 11 (global Dumpast!)) 1)
           (field 6 (global Parse!))))
      (setfield_ptr(root-init) 6 (global Dumpast!) show_pat/804))
    (let
      (show_typ/805 =
         (apply (field 4 (global Dumpast!))
           (sendcache (field 3 (global Dumpast!)) -968746408
             (field 11 (global Dumpast!)) 2)
           (field 4 (global Parse!))))
      (setfield_ptr(root-init) 7 (global Dumpast!) show_typ/805))
    (let
      (show_file/806 =
         (function fn/808
           (seq
             (apply (field 15 (global Compenv!))
               (field 105 (global Stdlib__format!)) (makeblock 0 fn/808))
             (let
               (v/822 =
                  (if
                    (apply (field 6 (global Stdlib__filename!)) fn/808
                      ".mli")
                    (let
                      (ast/845 =
                         (apply (field 11 (global Pparse!)) "ocamlc" fn/808))
                      (sendcache (field 3 (global Dumpast!)) 348013686
                        (field 11 (global Dumpast!)) 4 ast/845))
                    (if
                      (apply (field 6 (global Stdlib__filename!)) fn/808
                        ".ml")
                      (let
                        (ast/849 =
                           (apply (field 10 (global Pparse!)) "ocamlc"
                             fn/808))
                        (sendcache (field 3 (global Dumpast!)) -962464335
                          (field 11 (global Dumpast!)) 3 ast/849))
                      (apply (field 1 (global Stdlib!))
                        (apply (field 3 (global Stdlib__printf!))
                          [0:
                           [11:
                            "Don't know what to do with file " [2: 0a 0a]]
                           "Don't know what to do with file %s"]
                          fn/808)))))
               (apply (field 123 (global Stdlib__format!))
                 [0:
                  [2:
                   0a
                   [17:
                    4a
                    [11:
                     "==>"
                     [17: 4a [15: [17: 4a [11: "=========" [17: 4a 0a]]]]]]]]
                  "%s@.==>@.%a@.=========@."]
                 fn/808 (field 0 (field 1 (global Oprint!))) v/822)))))
      (setfield_ptr(root-init) 8 (global Dumpast!) show_file/806))
    (let
      (args/861 =
         (makeblock 0
           (makeblock 0 "-e" (makeblock 4 (field 5 (global Dumpast!)))
             "<expr> Dump AST for expression <expr>.")
           (makeblock 0
             (makeblock 0 "-p" (makeblock 4 (field 6 (global Dumpast!)))
               "<pat> Dump AST for pattern <pat>.")
             (makeblock 0
               (makeblock 0 "-t" (makeblock 4 (field 7 (global Dumpast!)))
                 "<typ> Dump AST for type expression <typ>.")
               (makeblock 0
                 (makeblock 0 "-loc_discard"
                   (makeblock 0
                     (function param/897
                       (setfield_imm 0 (field 0 (global Dumpast!)) -310786a)))
                   "  Discard location fields. (default)")
                 (makeblock 0
                   (makeblock 0 "-loc_underscore"
                     (makeblock 0
                       (function param/898
                         (setfield_imm 0 (field 0 (global Dumpast!))
                           -911610022a)))
                     "  Display '_' for location fields")
                   (makeblock 0
                     (makeblock 0 "-loc_keep"
                       (makeblock 0
                         (function param/899
                           (setfield_imm 0 (field 0 (global Dumpast!))
                             836762789a)))
                       "  Display real value of location fields")
                     (makeblock 0
                       (makeblock 0 "-attrs_discard_empty"
                         (makeblock 0
                           (function param/900
                             (setfield_imm 0 (field 1 (global Dumpast!))
                               -814786996a)))
                         "  Discard empty attribute fields. (default)")
                       (makeblock 0
                         (makeblock 0 "-attrs_discard"
                           (makeblock 0
                             (function param/901
                               (setfield_imm 0 (field 1 (global Dumpast!))
                                 -310786a)))
                           "  Discard all attribute fields.")
                         (makeblock 0
                           (makeblock 0 "-attrs_underscore"
                             (makeblock 0
                               (function param/902
                                 (setfield_imm 0 (field 1 (global Dumpast!))
                                   -911610022a)))
                             "  Display '_' for attribute fields")
                           (makeblock 0
                             (makeblock 0 "-attrs_keep"
                               (makeblock 0
                                 (function param/903
                                   (setfield_imm 0
                                     (field 1 (global Dumpast!)) 836762789a)))
                               "  Display real value of attribute fields")
                             (makeblock 0
                               (makeblock 0 "-pp"
                                 (makeblock 4
                                   (function s/904
                                     (setfield_ptr 0
                                       (field 32 (global Clflags!))
                                       (makeblock 0 s/904))))
                                 "<command>  Pipe sources through preprocessor <command>")
                               (makeblock 0
                                 (makeblock 0 "-ppx"
                                   (makeblock 4
                                     (function s/910
                                       (setfield_ptr 0
                                         (field 9 (global Compenv!))
                                         (makeblock 0 s/910
                                           (field 0
                                             (field 9 (global Compenv!)))))))
                                   "<command>  Pipe abstract syntax trees through preprocessor <command>")
                                 0a)))))))))))))
      (setfield_ptr(root-init) 9 (global Dumpast!) args/861))
    (let
      (usage/911 =
         (apply (field 3 (global Stdlib__printf!))
           [0:
            [2: 0a [11: " [options] [.ml/.mli files]\n" 0a]]
            "%s [options] [.ml/.mli files]\n"]
           (array.get[addr] (caml_sys_argv 0a) 0)))
      (setfield_ptr(root-init) 10 (global Dumpast!) usage/911))
    (let
      (*match*/2128 =
         (seq
           (apply (field 15 (global Compenv!))
             (field 105 (global Stdlib__format!)) 0a)
           (try
             (apply (field 0 (global Stdlib__arg!))
               (apply (field 10 (global Stdlib__arg!)) 0a
                 (field 9 (global Dumpast!)))
               (field 8 (global Dumpast!)) (field 10 (global Dumpast!)))
            with exn/992
             (seq
               (apply (field 0 (global Errors!))
                 (field 105 (global Stdlib__format!)) exn/992)
               (apply (field 98 (global Stdlib!)) 2)))))
      0a)
    0a))
